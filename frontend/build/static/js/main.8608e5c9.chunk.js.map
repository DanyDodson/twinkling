{"version":3,"sources":["pages/Auth/background.jpeg","pages/Profile/background.jpg","utils/apollo-client.js","store/message.js","store/auth.js","store/store.js","theme.js","components/App/GlobalStyles.js","graphql/post.js","graphql/user.js","graphql/messages.js","graphql/notification.js","components/icons/UserIcon.js","components/icons/CloseIcon.js","components/icons/UploadImageIcon.js","components/icons/LikeIcon.js","components/icons/PostCommentIcon.js","components/icons/ExploreIcon.js","components/icons/NotificationIcon.js","components/icons/MenuIcon.js","components/icons/HomeIcon.js","components/icons/PeopleIcon.js","components/icons/SearchIcon.js","components/icons/DotsIcon.js","components/icons/InfoIcon.js","components/icons/WarningIcon.js","components/icons/ErrorIcon.js","components/icons/SuccessIcon.js","components/icons/EmptyIcon.js","components/icons/NotFoundIcon.js","components/icons/EnvelopeIcon.js","components/icons/EnvelopeOpenIcon.js","components/icons/SendIcon.js","components/icons/PencilIcon.js","components/Layout.js","components/Form.js","constants/MessageType.js","components/Message.js","components/Loading.js","components/Text.js","routes.js","pages/Auth/SignIn.js","pages/Auth/AuthHeader.js","components/Head.js","pages/Auth/SignUp.js","pages/Auth/ForgotPassword.js","pages/Auth/ResetPassword.js","pages/Auth/AuthLayout.js","components/Avatar.js","components/Search/SearchInput.js","components/Search/SearchResult.js","hooks/useClickOutside.js","components/Search/Search.js","hooks/useDebounce.js","components/App/SignOut.js","components/App/Header/HeaderUserDropDown.js","components/App/Notification.js","components/App/Header/HeaderNotificationDropDown.js","utils/date.js","components/App/Header/HeaderMessageDropdown.js","components/App/Header/HeaderDropDowns.js","components/App/Header/Header.js","constants/Layout.js","components/NotFound.js","components/App/Navigation.js","components/App/SideBar.js","components/App/UserSuggestions.js","graphql/comment.js","constants/NotificationType.js","hooks/useNotifications.js","components/CreateComment.js","graphql/follow.js","components/Follow.js","constants/DataLimit.js","components/PostPopup/PostPopupInfo.js","components/Comment.js","components/PostPopup/PostPopupComments.js","graphql/like.js","components/Like.js","components/PostPopup/PostPopupOptions.js","components/PostPopup/PostPopup.js","components/Confirm.js","components/Modal.js","components/PostCard/PostCardOption.js","components/PostCard/PostCard.js","components/InfiniteScroll.js","components/Skeleton.js","pages/Home/PostImageUpload.js","hooks/useGlobalMessage.js","components/CreatePost.js","constants/ImageSize.js","pages/Home/Home.js","pages/Profile/ProfileImageUpload.js","pages/Profile/ProfileCoverUpload.js","pages/Profile/ProfileInfo.js","components/Empty.js","pages/Profile/ProfilePosts.js","pages/Profile/Profile.js","pages/Explore/ExploreCard.js","pages/Explore/Explore.js","pages/People/PeopleCard.js","pages/People/People.js","pages/Notifications/Notifications.js","pages/Post/Post.js","pages/Messages/MessagesUsers.js","pages/Messages/MessagesChatConversation.js","pages/Messages/MessagesChatHeading.js","pages/Messages/MessagesChat.js","pages/Messages/Messages.js","components/App/AppLayout.js","hooks/useWindowSize.js","components/App/ScrollToTop.js","components/App/App.js","index.js"],"names":["module","exports","createAuthLink","ApolloLink","operation","forward","Observable","observer","handle","Promise","resolve","then","oper","token","localStorage","getItem","setContext","headers","authorization","request","subscribe","next","bind","error","complete","catch","unsubscribe","messageInitialState","content","type","text","autoClose","messageReducer","state","action","payload","authInitialState","user","authReducer","StoreContext","createContext","store","message","auth","reducers","useStore","useContext","font","family","weight","light","normal","bold","size","tiny","xxs","xs","sm","md","lg","xl","colors","black","white","success","body","primary","main","dark","contrastText","secondary","disabled","hint","border","warning","info","grey","50","100","200","300","400","500","600","700","800","900","shadows","screen","spacing","none","radius","zIndex","GlobalStyle","createGlobalStyle","theme","postCommentsPayload","postAuthorPayload","postLikesPayload","CREATE_POST","gql","GET_FOLLOWED_POSTS","GET_POSTS","GET_POST","DELETE_POST","userPayload","GET_USER","GET_USER_POSTS","GET_AUTH_USER","GET_USERS","SEARCH_USERS","UPLOAD_PHOTO","SIGN_UP","SIGN_IN","REQUEST_PASSWORD_RESET","VERIFY_RESET_PASSWORD_TOKEN","RESET_PASSWORD","USER_SUGGESTIONS","GET_CONVERSATIONS","IS_USER_ONLINE_SUBSCRIPTION","GET_MESSAGES","GET_MESSAGES_SUBSCRIPTION","CREATE_MESSAGE","GET_NEW_CONVERSATIONS_SUBSCRIPTION","UPDATE_MESSAGE_SEEN","notificationPayload","CREATE_NOTIFICATION","DELETE_NOTIFICATION","GET_USER_NOTIFICATION","UPDATE_NOTIFICATION_SEEN","NOTIFICATION_CREATED_OR_DELETED","UserIcon","width","color","DEFAULT_COLOR","xmlns","viewBox","d","fill","CloseIcon","UploadImageIcon","LikeIcon","get","PostCommentIcon","ExploreIcon","NotificationIcon","MenuIcon","HomeIcon","PeopleIcon","SearchIcon","DotsIcon","cx","cy","r","InfoIcon","WarningIcon","ErrorIcon","SuccessIcon","EmptyIcon","height","fillRule","transform","fillOpacity","rx","ry","NotFoundIcon","EnvelopeIcon","EnvelopeOpenIcon","SendIcon","PencilIcon","Container","styled","div","p","marginTop","maxWidth","padding","Content","Spacing","top","right","bottom","left","inline","hideOnSm","Overlay","transparency","Button","button","ghost","fullWidth","InputText","input","borderColor","Textarea","textarea","MessageType","form","SUCCESS","INFO","WARNING","ERROR","Object","keys","fade","keyframes","Root","Close","Message","children","dispatch","useEffect","timer","setTimeout","clearTimeout","Colors","onClick","defaultProps","Load","Round","Loading","LoadingDots","A","Link","Error","getHeadingStyles","css","H1","h1","H2","h2","H3","h3","MESSAGES","POST","InputContainer","ErrorMessage","ForgotPassword","withRouter","history","location","refetch","useState","emailOrUsername","password","values","setValues","setError","pathname","handleChange","e","target","name","value","mutation","variables","signin","loading","apiError","onSubmit","preventDefault","a","async","data","setItem","push","handleSubmit","errorMessage","graphQLErrors","renderErrors","autoFocus","onChange","placeholder","to","StyledContainer","Logo","SignInContainer","AuthHeader","SiteInfo","Head","title","Helmet","Welcome","Heading","Form","fullName","username","email","signup","length","test","String","toLowerCase","validate","Text","setEmail","setMessage","handleEmailChange","requestResetPassword","requestPasswordReset","map","key","confirmPassword","url","URLSearchParams","search","query","resetPassword","err","backgroundImage","Pages","AuthLayout","exact","path","render","component","Image","img","Avatar","image","src","IconContainer","Input","hideIcon","backgroundColor","SearchInput","onFocus","inputRef","ref","StyledA","Item","Name","UserName","NoSearchResult","SearchResult","users","forMessage","id","generatePath","Routes","userId","useClickOutside","handler","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","StyledLoading","Search","others","client","useApolloClient","isOpenSearchResult","setIsOpenSearchResult","searchQuery","setSearchQuery","setUsers","setLoading","useRef","debounceSearchQuery","delay","debouncedValue","setDebouncedValue","useDebounce","searchUsers","replace","withApollo","removeItem","resetStore","CSS","HeaderUserDropDown","userRef","NotificationItem","LeftSide","Action","PostImage","notification","close","React","mutate","refetchQueries","newNotifications","follow","like","comment","author","post","Empty","HeaderNotificationDropDown","notificationRef","dropdownData","closeDropDown","timeAgo","unixTimestamp","date","Date","parseInt","seconds","Math","floor","interval","User","NavLink","Info","FullName","LastMessage","CreatedAt","HeaderMessageDropdown","messageRef","lastMessage","lastMessageCreatedAt","HeaderDropDowns","dropdownOpen","DropDowns","USER","NOTIFICATION","MESSAGE","Wrapper","Hamburger","RightSide","countCSS","NotificationCount","span","MessageCount","toggleSideBar","setDropdownOpen","setDropdownData","closeOnClickOutside","handleIconClick","dropdownType","newConversations","NotFound","List","ul","ListItem","li","Navigation","activeClassName","HEADER_HEIGHT","isOpen","active","sideBarRef","isAuthUsersProfilePage","substring","UserSuggestions","matchPath","suggestPeople","CREATE_COMMENT","DELETE_COMMENT","NotificationType","useNotifications","console","create","postId","notificationType","notificationTypeId","authorId","remove","notificationId","toggle","hasDone","isNotified","notifications","find","n","options","delete","focus","setComment","buttonEl","TextareaEl","onEnterPress","keyCode","click","authUserId","createComment","onKeyDown","CREATE_FOLLOW","DELETE_FOLLOW","isFollowing","Follow","following","f","followerId","skip","limit","createFollow","handleClickFollow","Author","PostPopupInfo","DeleteButton","CommentSection","Comment","postAuthor","deleteComment","handleDeleteComment","Comments","usedInModal","PostPopupComments","comments","CREATE_LIKE","DELETE_LIKE","StyledButton","Like","likes","withText","hasLiked","l","createLike","handleButtonClick","Icons","Count","PostPopupOptions","postLikes","Left","Right","CloseModal","Title","PostPopup","closeModal","getPost","ButtonContainer","Confirm","onCancel","onOk","cancelText","okText","Modal","open","onClose","otherProps","FollowItem","PostCardOption","closeOption","deletePost","navigator","clipboard","writeText","process","TopRow","Poster","BottomRow","CountAndIcons","CommentLine","imagePublicId","createdAt","openModal","isCommentOpen","setIsCommentOpen","isOptionOpen","setIsOptionOpen","InfiniteScroll","dataKey","fetchMore","count","handleScroll","useMemo","loadMore","updateQuery","prev","fetchMoreResult","previousData","fetchMoreData","set","uniqBy","windowHeight","window","innerHeight","scrollTop","documentElement","offsetHeight","scrolled","propTypes","PropTypes","array","isRequired","string","number","func","object","Skeleton","skeleton","i","loopSkeleton","Label","label","PostImageUpload","accept","htmlFor","useGlobalMessage","dispatchAction","messageType","ImagePreviewContainer","ImagePreview","Options","Buttons","CreatePost","setTitle","setImage","isFocused","setIsFocused","handleReset","handleOnFocus","handlePostImageUpload","file","files","MAX_POST_IMAGE_SIZE","handleTitleChange","createPost","isShareDisabled","URL","createObjectURL","Home","modalPostId","setModalPostId","pushState","notifyOnNetworkStatusChange","networkStatus","getFollowedPosts","posts","showNextLoading","authUser","MAX_USER_PROFILE_IMAGE_SIZE","alt","defaultBackgroundImage","coverImagePublicId","coverImage","MAX_USER_COVER_IMAGE_SIZE","isCover","ProfileImage","FollowAndMessage","Online","ProfileInfo","useSubscription","isUserOnline","isOnline","followers","ProfilePosts","isPostPopupOpen","setIsPostPopupOpen","getUserPosts","match","params","getUser","Photo","ExploreCard","openPostPopup","countLikes","countComments","imageLoaded","setImageLoaded","onload","style","PostsContainer","Explore","getPosts","ImageContainer","InitialLetters","PeopleCard","setColor","randomColor","random","split","slice","join","charAt","PeopleContainer","People","getUsers","Notifications","getUserNotifications","HeadingContainer","NewMessage","SearchContainer","UserContainer","seen","FullNameUnSeen","UnSeen","useQuery","subscribeToMore","subscriptionData","newConversation","oldConversations","getConversations","some","u","unseen","lastMessageSender","Conversation","MessageDate","userMessage","MessageWrapper","StyledTextarea","SendButton","MessagesChatConversation","messages","chatUser","bottomRef","messageText","setMessageText","useMutation","createMessage","scrollIntoView","sendMessage","sender","receiver","isFirstMessage","isAuthUserReceiver","month","getMonth","day","getDay","year","getFullYear","time","toLocaleString","hour","minute","hour12","currentDate","shiftKey","To","MessagesChat","fetchPolicy","messagesLoading","updateMessageSeen","useCallback","newMessage","messageCreated","getMessages","Messages","isDesktop","isClient","getSize","innerWidth","undefined","windowSize","setWindowSize","handleResize","useWindowSize","isSideBarOpen","setIsSidebarOpen","Profile","Post","scrollTo","App","oldNotifications","getAuthUser","notificationCreatedOrDeleted","href","index","findIndex","splice","mergeConversations","API_URL","apolloClient","apiUrl","websocketApiUrl","cache","InMemoryCache","errorLink","onError","networkError","log","authLink","uploadLink","createUploadLink","uri","authToken","wsLink","WebSocketLink","timeout","reconnect","connectionParams","subscriptionClient","maxConnectTimeGenerator","duration","max","terminatingLink","getMainDefinition","kind","ApolloClient","link","from","createApolloClient","Provider","useReducer","getElementById"],"mappings":"8LAAAA,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,6LCWrCC,EAAiB,WAUrB,OAAO,IAAIC,cACT,SAACC,EAAWC,GAAZ,OACE,IAAIC,KAAW,SAAAC,GACb,IAAIC,EAYJ,OAXAC,QAAQC,QAAQN,GACbO,MAAK,SAAAC,GAAI,OAdF,SAAAR,GACd,IAAMS,EAAQC,aAAaC,QAAQ,SACnCX,EAAUY,WAAW,CACnBC,QAAS,CACPC,cAAeL,KAUCM,CAAQP,MACrBD,MAAK,WACJH,EAASH,EAAQD,GAAWgB,UAAU,CACpCC,KAAMd,EAASc,KAAKC,KAAKf,GACzBgB,MAAOhB,EAASgB,MAAMD,KAAKf,GAC3BiB,SAAUjB,EAASiB,SAASF,KAAKf,QAGpCkB,MAAMlB,EAASgB,MAAMD,KAAKf,IAEtB,WACDC,GAAQA,EAAOkB,sB,QC5BhBC,EAAsB,CACjCC,QAAS,CACPC,KAAM,GACNC,KAAM,GACNC,WAAW,IAOFC,EAAiB,WAA0C,IAAzCC,EAAwC,uDAAhCN,EAAqBO,EAAW,uCACrE,OAAQA,EAAOL,MACb,IAnBuB,cAoBrB,OAAO,eACFI,EADL,CAEEL,QAAS,CACPC,KAAMK,EAAOC,QAAQN,KACrBC,KAAMI,EAAOC,QAAQL,KACrBC,UAAWG,EAAOC,QAAQJ,aAGhC,IA3ByB,gBA4BvB,OAAO,eACFE,EADL,GAEKN,GAIP,QACE,OAAOM,IC9BAG,EAAmB,CAC9BC,KAAM,MAMKC,EAAc,WAAuC,IAAtCL,EAAqC,uDAA7BG,EAAkBF,EAAW,uCAC/D,OAAQA,EAAOL,MACb,IAfyB,gBAgBvB,OAAO,eACFI,EADL,CAEEI,KAAMH,EAAOC,UAEjB,IAnB2B,kBAoBzB,OAAO,eACFF,EADL,GAEKG,GAIP,QACE,OAAOH,ICxBPM,EAAeC,0BAKfC,EAAQ,CACZC,QAASf,EACTgB,KAAMP,GAMFQ,EAAW,SAACH,EAAOP,GAAR,MAAoB,CACnCQ,QAASV,EAAeS,EAAMC,QAASR,GACvCS,KAAML,EAAYG,EAAME,KAAMT,KAenBW,EAAW,kBAAMC,qBAAWP,ICjC1B,G,MAAA,CAIbQ,KAAM,CACJC,OAAQ,0BACRC,OAAQ,CACNC,MAAO,MACPC,OAAQ,MACRC,KAAM,OAERC,KAAM,CACJC,KAAM,OACNC,IAAK,OACLC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,SAORC,OAAQ,CACNC,MAAO,UACPC,MAAO,OACPC,QAAS,UACTC,KAAM,UAENC,QAAS,CACPhB,MAAO,UACPiB,KAAM,UACNC,KAAM,UACNC,aAAc,QAGhBC,UAAW,CACTpB,MAAO,UACPiB,KAAM,UACNC,KAAM,UACNC,aAAc,QAGhBvC,KAAM,CACJoC,QAAS,sBACTI,UAAW,sBACXC,SAAU,sBACVC,KAAM,uBAGRC,OAAQ,CACNvB,MAAO,UACPiB,KAAM,UACNC,KAAM,WAGR7C,MAAO,CACL2B,MAAO,UACPiB,KAAM,UACNC,KAAM,UACNC,aAAc,QAGhBK,QAAS,UAETC,KAAM,UAENC,KAAM,CACJC,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,YAOTC,QAAS,CACP9B,GAAI,yDACJC,GAAI,qCACJC,GAAI,yDACJC,GAAI,4DAMN4B,OAAQ,CACNhC,GAAI,QACJC,GAAI,QACJC,GAAI,SACJC,GAAI,SACJC,GAAI,UAMN6B,QAAS,CACPC,KAAM,EACNnC,IAAK,MACLC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,QAMN+B,OAAQ,CACNlC,GAAI,MACJC,GAAI,MACJC,GAAI,QAMNiC,OAAQ,CACNpC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,M,meCpID,IAAMiC,EAAcC,YAAH,IAeXC,EAAMlC,OAAO/B,KAAKoC,QACP6B,EAAMlC,OAAOI,M,quCCjB9B,IAAM+B,EAAmB,yHAgBnBC,EAAiB,4WAoCjBC,EAAgB,iDAWhBC,EAAcC,IAAH,KAWXC,EAAqBD,IAAH,IAUrBH,EACAD,EACAE,GASGI,EAAYF,IAAH,IAQZH,EACAD,EACAE,GASGK,EAAWH,IAAH,IAObH,EACAD,EACAE,GAQKM,EAAcJ,IAAH,K,y1IC9HxB,IAAMK,GAAW,uHAeJC,GAAWN,IAAH,KAGbK,IAkCKE,GAAiBP,IAAH,KAUjBH,EACAD,EACAE,GASGU,GAAgBR,IAAH,KAGlBK,IA0DKI,GAAYT,IAAH,MAkCTU,GAAeV,IAAH,MAcZW,GAAeX,IAAH,MAWZY,GAAUZ,IAAH,MAWPa,GAAUb,IAAH,MAWPc,GAAyBd,IAAH,MAWtBe,GAA8Bf,IAAH,MAW3BgB,GAAiBhB,IAAH,MAWdiB,GAAmBjB,IAAH,MAchBkB,GAAoBlB,IAAH,MAmBjBmB,GAA8BnB,IAAH,K,wgDC9RjC,IAAMoB,GAAepB,IAAH,MA2BZqB,GAA4BrB,IAAH,MA2BzBsB,GAAiBtB,IAAH,MAYduB,GAAqCvB,IAAH,MAmBlCwB,GAAsBxB,IAAH,M,++BCrFhC,IAAMyB,GAAmB,sPA+BZC,GAAsB1B,IAAH,MAWnB2B,GAAsB3B,IAAH,MAWnB4B,GAAwB5B,IAAH,KAKxByB,IASGI,GAA2B7B,IAAH,MASxB8B,GAAkC9B,IAAH,KAKlCyB,IC7EGM,GAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE1BC,EAAgBvC,EAAMlC,OAAOe,KAAK,KAExC,OACE,yBACE2D,MAAM,6BACNH,MAAOA,GANW,KAOlBI,QAAQ,aAER,0BACEC,EAAE,sgBACFC,KAAK,YAEP,0BACED,EAAE,mjBACFC,KAAM3C,EAAMlC,OAAOwE,IAAUC,MChBxBK,GAAY,SAAC,GAAsB,IAApBP,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE3BC,EAAgBvC,EAAMlC,OAAO/B,KAAKwC,UAExC,OACE,yBACE8D,MAAOA,GALW,KAMlBM,KAAM3C,EAAMlC,OAAOwE,IAAUC,EAC7BC,MAAM,6BACNC,QAAQ,qBAER,0BAAMC,EAAE,+UCXDG,GAAkB,SAAC,GAAsB,IAApBR,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAEjCC,EAAgBvC,EAAMlC,OAAO/B,KAAKwC,UAExC,OACE,yBACEiE,MAAM,6BACNC,QAAQ,cACRJ,MAAOA,GAPW,MASlB,0BACEK,EAAE,yfACFC,KAAM3C,EAAMlC,OAAOwE,IAAUC,M,SCXxBO,GAAW,SAAC,GAAsB,IAApBT,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE1BC,EAAgBvC,EAAMlC,OAAO/B,KAAKwC,UACxC,OACE,yBACEiE,MAAM,6BACNH,MAAOA,GALW,KAMlBM,KAAMI,eAAI/C,EAAMlC,OAAQwE,IAAUC,EAClCE,QAAQ,uBAER,0BAAMC,EAAE,8pBCXDM,GAAkB,SAAC,GAAsB,IAApBX,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAEjCC,EAAgBvC,EAAMlC,OAAO/B,KAAKwC,UAExC,OACE,yBACEiE,MAAM,6BACNC,QAAQ,YACRJ,MAAOA,GAPW,MASlB,0BACEK,EAAE,sUACFC,KAAM3C,EAAMlC,OAAOwE,IAAUC,MCZxBU,GAAc,SAAC,GAAsB,IAApBZ,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE7BC,EAAgBvC,EAAMlC,OAAO/B,KAAKwC,UAExC,OACE,yBACE8D,MAAOA,GALW,KAMlBM,KAAM3C,EAAMlC,OAAOwE,IAAUC,EAC7BC,MAAM,6BACNC,QAAQ,uBAER,0BAAMC,EAAE,6JACR,0BAAMA,EAAE,23BACR,0BAAMA,EAAE,iKCbDQ,GAAmB,SAAC,GAAsB,IAApBb,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAElCC,EAAgBvC,EAAMlC,OAAO/B,KAAKwC,UAExC,OACE,yBACE8D,MAAOA,GALW,KAMlBM,KAAM3C,EAAMlC,OAAOwE,IAAUC,EAC7BC,MAAM,6BACNC,QAAQ,uBAER,0BAAMC,EAAE,6kCACR,0BAAMA,EAAE,uPCZDS,GAAW,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE1BC,EAAgBvC,EAAMlC,OAAO/B,KAAKwC,UAExC,OACE,yBACE8D,MAAOA,GALW,KAMlBM,KAAM3C,EAAMlC,OAAOwE,IAAUC,EAC7BC,MAAM,6BACNC,QAAQ,eAER,0BAAMC,EAAE,weCXDU,GAAW,SAAC,GAAsB,IAApBf,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE1BC,EAAgBvC,EAAMlC,OAAO/B,KAAKwC,UAExC,OACE,yBACE8D,MAAOA,GALW,KAMlBM,KAAM3C,EAAMlC,OAAOwE,IAAUC,EAC7BC,MAAM,6BACNC,QAAQ,eAER,0BAAMC,EAAE,8QACR,0BAAMA,EAAE,0jBCZDW,GAAa,SAAC,GAAsB,IAApBhB,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE5BC,EAAgBvC,EAAMlC,OAAO/B,KAAKwC,UAExC,OACE,yBACE8D,MAAOA,GALW,KAMlBM,KAAM3C,EAAMlC,OAAOwE,IAAUC,EAC7BC,MAAM,6BACNC,QAAQ,mBAER,0BAAMC,EAAE,o4CCXDY,GAAa,SAAC,GAAsB,IAApBjB,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE5BC,EAAgBvC,EAAMlC,OAAO/B,KAAKwC,UAExC,OACE,yBACE8D,MAAOA,GALW,KAMlBM,KAAM3C,EAAMlC,OAAOwE,IAAUC,EAC7BC,MAAM,6BACNC,QAAQ,qBAER,0BAAMC,EAAE,8UCXDa,GAAW,SAAC,GAAsB,IAApBlB,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE1BC,EAAgBvC,EAAMlC,OAAO/B,KAAKoC,QAExC,OACE,yBACEkE,MAAOA,GALW,KAMlBM,KAAM3C,EAAMlC,OAAOwE,IAAUC,EAC7BE,QAAQ,cACRD,MAAM,8BAEN,4BAAQgB,GAAG,SAASC,GAAG,MAAMC,EAAE,WAC/B,4BAAQF,GAAG,MAAMC,GAAG,MAAMC,EAAE,WAC5B,4BAAQF,GAAG,UAAUC,GAAG,MAAMC,EAAE,aCbzBC,GAAW,SAAC,GAAsB,IAApBtB,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE1BC,EAAgBvC,EAAMlC,OAAOE,MACnC,OACE,yBACEwE,MAAM,6BACNH,MAAOA,GALW,KAMlBM,KAAM3C,EAAMlC,OAAOwE,IAAUC,EAC7BE,QAAQ,eAER,0BAAMC,EAAE,uNACR,0BAAMA,EAAE,+QCXDkB,GAAc,SAAC,GAAsB,IAApBvB,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE7BC,EAAgBvC,EAAMlC,OAAOE,MACnC,OACE,yBACEwE,MAAM,6BACNH,MAAOA,GALW,KAMlBM,KAAM3C,EAAMlC,OAAOwE,IAAUC,EAC7BE,QAAQ,eAER,0BAAMC,EAAE,0PACR,0BAAMA,EAAE,yHACR,4BAAQc,GAAG,MAAMC,GAAG,SAASC,EAAE,SCZxBG,GAAY,SAAC,GAAsB,IAApBxB,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE3BC,EAAgBvC,EAAMlC,OAAOE,MACnC,OACE,yBACEwE,MAAM,6BACNC,QAAQ,sBACRJ,MAAOA,GANW,KAOlBM,KAAM3C,EAAMlC,OAAOwE,IAAUC,GAE7B,0BAAMG,EAAE,8GACR,0BAAMA,EAAE,maACR,0BAAMA,EAAE,6QCZDoB,GAAc,SAAC,GAAsB,IAApBzB,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE7BC,EAAgBvC,EAAMlC,OAAOE,MACnC,OACE,yBACEwE,MAAM,6BACNH,MAAOA,GALW,KAMlBM,KAAM3C,EAAMlC,OAAOwE,IAAUC,EAC7BE,QAAQ,eAER,0BAAMC,EAAE,0tBACR,0BAAMA,EAAE,+RCZDqB,GAAY,WACvB,OACE,yBACE1B,MAAM,MACN2B,OAAO,MACPvB,QAAQ,cACRD,MAAM,8BAEN,uBAAGG,KAAK,OAAOsB,SAAS,WACtB,uBAAGC,UAAU,uBACX,6BACEC,YAAY,KACZxB,KAAK,UACLa,GAAG,SACHC,GAAG,SACHW,GAAG,SACHC,GAAG,WAEL,0BACE3B,EAAE,+IACFC,KAAK,YAEP,0BACED,EAAE,2IACFC,KAAK,2BACLuB,UAAU,qBAEZ,0BACExB,EAAE,0FACFC,KAAK,YAEP,0BACED,EAAE,+iBACFC,KAAK,aAGT,0BACED,EAAE,yOACFC,KAAK,YAEP,uBAAGuB,UAAU,2BAA2BvB,KAAK,QAC3C,6BAASa,GAAG,SAASC,GAAG,QAAQW,GAAG,QAAQC,GAAG,UAC9C,0BAAM3B,EAAE,6DChDL4B,GAAe,WAC1B,OACE,yBACEjC,MAAM,MACN2B,OAAO,MACPxB,MAAM,6BACNC,QAAQ,eAER,0BACEC,EAAE,uuBACFC,KAAK,YAEP,0BACED,EAAE,gOACFC,KAAK,YAEP,0BACED,EAAE,+dACFC,KAAK,YAEP,0BACED,EAAE,sTACFC,KAAK,YAEP,0BACED,EAAE,8QACFC,KAAK,YAEP,0BACED,EAAE,6JACFC,KAAK,YAEP,0BACED,EAAE,6JACFC,KAAK,YAEP,0BACED,EAAE,6JACFC,KAAK,YAEP,0BACED,EAAE,+LACFC,KAAK,YAEP,0BACED,EAAE,yIACFC,KAAK,YAEP,0BACED,EAAE,6IACFC,KAAK,YAEP,0BACED,EAAE,wIACFC,KAAK,SAEP,0BACED,EAAE,mIACFC,KAAK,YAEP,0BACED,EAAE,8IACFC,KAAK,YAEP,0BACED,EAAE,0OACFC,KAAK,YAEP,0BACED,EAAE,kJACFC,KAAK,SAEP,0BACED,EAAE,4uIACFC,KAAK,cCnEA4B,GAAe,SAAC,GAAsB,IAApBlC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE9BC,EAAgBvC,EAAMlC,OAAO/B,KAAKwC,UAExC,OACE,yBACE8D,MAAOA,GALW,KAMlBM,KAAM3C,EAAMlC,OAAOwE,IAAUC,EAC7BC,MAAM,6BACNC,QAAQ,uBAER,0BAAMC,EAAE,0tBCXD8B,GAAmB,SAAC,GAAsB,IAApBnC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAElCC,EAAgBvC,EAAMlC,OAAO/B,KAAKwC,UAExC,OACE,yBACE8D,MAAOA,GALW,KAMlBM,KAAM3C,EAAMlC,OAAOwE,IAAUC,EAC7BC,MAAM,6BACNC,QAAQ,eAER,0BAAMC,EAAE,wkBACR,0BAAMA,EAAE,iGCZD+B,GAAW,SAAC,GAAsB,IAApBpC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE1BC,EAAgBvC,EAAMlC,OAAOK,QAAQC,KAE3C,OACE,yBACEoE,MAAM,6BACNH,MAAOA,GANW,KAOlBM,KAAM3C,EAAMlC,OAAOwE,IAAUC,EAC7BE,QAAQ,uBAER,0BAAMC,EAAE,6SCXDgC,GAAa,SAAC,GAAsB,IAApBrC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE5BC,EAAgBvC,EAAMlC,OAAO/B,KAAKoC,QAExC,OACE,yBACEkE,MAAOA,GALW,KAMlBM,KAAM3C,EAAMlC,OAAOwE,IAAUC,EAC7BE,QAAQ,mBACRD,MAAM,8BAEN,0BAAME,EAAE,oWACR,0BAAMA,EAAE,ke,m5BCTP,IAAMiC,GAAYC,IAAOC,IAAV,MAGN,SAAAC,GAAC,OAAIA,EAAEC,UAAYD,EAAE9E,MAAMN,QAAQoF,EAAEC,WAAa,KAEnD,SAAAD,GAAC,OAAKA,EAAEE,UAAYF,EAAE9E,MAAMP,OAAOqF,EAAEE,aACvC,SAAAF,GAAC,OAAIA,EAAEG,QAAF,YAAiBH,EAAE9E,MAAMN,QAAQoF,EAAEG,UAAnC,YAAqDH,EAAE9E,MAAMN,QAAQhC,OAC1E,SAAAoH,GAAC,OAAIA,EAAEjF,QAAUiF,EAAE9E,MAAMH,OAAOiF,EAAEjF,WACzB,SAAAiF,GAAC,OAAIA,EAAExC,OAASwC,EAAE9E,MAAMlC,OAAOgH,EAAExC,UACpC,SAAAwC,GAAC,OAAIA,EAAElF,QAAUkF,EAAE9E,MAAMJ,OAAOkF,EAAElF,WAGxCsF,GAAUN,IAAOC,IAAV,MAIP,SAAAC,GAAC,OAAIA,EAAEjF,QAAUiF,EAAE9E,MAAMH,OAAOiF,EAAEjF,WAGxB,SAAAiF,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MAC9B,SAAAmH,GAAC,OAAIA,EAAE9E,MAAMP,OAAOhC,MAGV,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO7B,MAC9B,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO/B,MAapByH,GAAUP,IAAOC,IAAV,MAChB,SAAAC,GAAC,OAAIA,EAAEM,KAAF,sBAAwBN,EAAE9E,MAAMN,QAAQoF,EAAEM,SAC/C,SAAAN,GAAC,OAAIA,EAAEO,OAAF,wBAA4BP,EAAE9E,MAAMN,QAAQoF,EAAEO,WACnD,SAAAP,GAAC,OAAIA,EAAEQ,QAAF,yBAA8BR,EAAE9E,MAAMN,QAAQoF,EAAEQ,YACrD,SAAAR,GAAC,OAAIA,EAAES,MAAF,uBAA0BT,EAAE9E,MAAMN,QAAQoF,EAAES,UACjD,SAAAT,GAAC,OAAIA,EAAEU,QAAF,4BAEc,SAAAV,GAAC,OAAIA,EAAE9E,MAAMP,OAAO/B,MACrC,SAAAoH,GAAC,OACDA,EAAEW,UAAF,kCAUOC,GAAUd,IAAOC,IAAV,MAMP,SAAAC,GAAC,OAAIA,EAAE9E,MAAMH,OAAOlC,MAK3B,SAAAmH,GAAC,OAAKA,EAAEa,aAAeb,EAAEa,aAAe,S,msCClEvC,IAAMC,GAAShB,IAAOiB,OAAV,MAKR,SAAAf,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAChB,SAAA8G,GAAC,OAAIA,EAAExH,KAAOwH,EAAE9E,MAAMhD,KAAKM,KAAKwH,EAAExH,MAAQwH,EAAE9E,MAAMhD,KAAKM,KAAKG,MACxD,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOlC,MAC1B,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAAM,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MACvC,SAAAoH,GAAC,OAAIA,EAAExC,MAAQwC,EAAE9E,MAAMlC,OAAOgH,EAAExC,OAASwC,EAAE9E,MAAMlC,OAAOK,QAAQC,QAKrE,SAAA0G,GAAC,OAAKA,EAAE5H,OAAS4H,EAAE9E,MAAMhD,KAAKE,OAAO4H,EAAE5H,QAAU4H,EAAE9E,MAAMhD,KAAKE,OAAOE,UAIlF,SAAA0H,GAAC,OAAIA,EAAEtG,UAAF,kCACesG,EAAE9E,MAAMlC,OAAOe,KAAK,KADnC,sCAKL,SAAAiG,GAAC,OAAKA,EAAEtG,UAAH,2EAOL,SAAAsG,GAAC,OAAIA,EAAE/I,MAAF,uBACI+I,EAAExC,MAAQS,eAAI+B,EAAE9E,MAAMlC,OAAQgH,EAAExC,OAASwC,EAAE9E,MAAMlC,OAAO/B,KAAKwC,UADjE,uEAMP,SAAAuG,GAAC,OAAIA,EAAEgB,OAAF,uBACMhB,EAAExC,MAAQS,eAAI+B,EAAE9E,MAAMlC,OAAOgH,EAAExC,QAAUwC,EAAE9E,MAAMlC,OAAO/B,KAAKwC,UADnE,+GAQH,SAAAuG,GAAC,OAAIA,EAAEiB,WAAF,4BAQIC,GAAYpB,IAAOqB,MAAV,MAKH,SAAAnB,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOlC,MACrB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAEjC,SAAAqH,GAAC,OACDA,EAAEoB,YACEpB,EAAE9E,MAAMlC,OAAOgH,EAAEoB,aACjBpB,EAAE9E,MAAMlC,OAAOY,OAAON,QACrB,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMlC,OAAO/B,KAAKwC,aAGhB,SAAAuG,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QAOlC+H,GAAWvB,IAAOwB,SAAV,MAMH,SAAAtB,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MACtB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAC3B,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAO/B,KAAKqC,QACrB,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKG,MAGzB,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAO/B,KAAKwC,aC/FzB8H,IDsGOzB,IAAO0B,KAAV,MAEE,SAAAxB,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOlC,MAC1B,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQ9B,MAAM,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MACvC,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SACpB,SAAA8G,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QC3GtB,CACzBmI,QAAS,UACTC,KAAM,OACNC,QAAS,UACTC,MAAO,UAGsBC,OAAOC,KAAKP,I,6nBCU3C,IAAMQ,GAAOC,YAAH,MAcJC,GAAOnC,IAAOC,IAAV,MAGM,SAAAC,GAAC,OAAIA,EAAE9E,MAAMR,QAAQ7B,MACxB,SAAAmH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MACrB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMH,OAAOhC,MAKX,SAAAiH,GAAC,OAAIA,EAAExC,OAASwC,EAAExC,QACzBuE,IACJ,SAAA/B,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAGzBgJ,GAAQpC,YAAOgB,GAAPhB,CAAH,MASLqC,GAAU,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUpL,EAAsB,EAAtBA,KAAME,EAAgB,EAAhBA,UAAgB,EAC5Bc,IAAZqK,EADwC,oBAGjDC,qBACE,WACE,GAAIpL,EAAW,CACb,IAAMqL,EAAQC,YAAW,WACvBH,EAAS,CAAErL,KlC9DQ,oBkC+DlB,KAEH,OAAO,WACLyL,aAAaF,OAInB,CAACF,EAAUnL,IAfoC,MAkBPgE,EAAMlC,OAE1C0J,EAAS,CACbjB,QArB+C,EAkBzCtI,QAINuI,KAtB+C,EAkBhC5H,KAKf6H,QAvB+C,EAkB1B9H,QAMrB+H,MAxB+C,EAkBjBlL,MAMjB4C,MAcf,OACE,kBAAC2I,GAAD,CAAMzE,MAAOkF,EAAO1L,IAZF,SAAAA,GAQlB,MAPc,CACZyK,QAAS,kBAAC,GAAD,MACTC,KAAM,kBAAC,GAAD,MACNC,QAAS,kBAAC,GAAD,MACTC,MAAO,kBAAC,GAAD,OAGI5K,GAKVuK,CAAYvK,GACb,kBAACqJ,GAAD,CAASI,KAAMzJ,GAAQ,MAAOoL,GAC9B,kBAACF,GAAD,CAAOlB,OAAK,EAAC2B,QAAS,kBAAMN,EAAS,CAAErL,KlCjGhB,oBkCkGrB,kBAAC,GAAD,CAAWwG,MAAM,aAMzB2E,GAAQS,aAAe,CACrB1L,WAAW,GASEiL,U,s4DClHf,IAAMU,GAAOb,YAAH,MAuBJc,GAAQd,YAAH,MAYEe,GAAUjD,IAAOC,IAAV,KAQL8C,GAA4BC,IAE3B,SAAA9C,GAAC,OAAIA,EAAEM,KAAON,EAAE9E,MAAMN,QAAQoF,EAAEM,QAC7B,SAAAN,GAAC,OAAIA,EAAEQ,QAAUR,EAAE9E,MAAMN,QAAQoF,EAAEQ,WAC3C,SAAAR,GAAC,OACRA,EAAExC,MAAQwC,EAAE9E,MAAMlC,OAAOgH,EAAExC,OAASwC,EAAE9E,MAAMlC,OAAO/B,KAAKwC,aAC7C,SAAAuG,GAAC,OACZA,EAAExH,KAAOwH,EAAE9E,MAAMhD,KAAKM,KAAKwH,EAAExH,MAAQwH,EAAE9E,MAAMhD,KAAKM,KAAKI,MAM9CoK,GAAclD,IAAOC,IAAV,MAMX,SAAAC,GAAC,OACRA,EAAExC,MAAQwC,EAAE9E,MAAMlC,OAAOgH,EAAExC,OAASwC,EAAE9E,MAAMlC,OAAO/B,KAAKwC,aAC7C,SAAAuG,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKO,M,guBCzDjC,IAAMkK,GAAInD,YAAOoD,IAAPpD,CAAH,MAIH,SAAAE,GAAC,OACRA,EAAExC,MAAQwC,EAAE9E,MAAMlC,OAAOgH,EAAExC,OAASwC,EAAE9E,MAAMlC,OAAO/B,KAAKwC,aAC3C,SAAAuG,GAAC,OACdA,EAAE5H,OAAS4H,EAAE9E,MAAMhD,KAAKE,OAAO4H,EAAE5H,QAAU4H,EAAE9E,MAAMhD,KAAKE,OAAOE,UACpD,SAAA0H,GAAC,OACZA,EAAExH,KAAOwH,EAAE9E,MAAMhD,KAAKM,KAAKwH,EAAExH,MAAQwH,EAAE9E,MAAMhD,KAAKM,KAAKG,MAG9C,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAO/B,KAAKoC,WAOzB8J,GAAQrD,IAAOC,IAAV,MACP,SAAAC,GAAC,OACRA,EAAExC,MAAQwC,EAAE9E,MAAMlC,OAAOgH,EAAExC,OAASwC,EAAE9E,MAAMlC,OAAOtC,MAAM4C,QAC9C,SAAA0G,GAAC,OACZA,EAAExH,KAAOwH,EAAE9E,MAAMhD,KAAKM,KAAKwH,EAAExH,MAAQwH,EAAE9E,MAAMhD,KAAKM,KAAKI,MAQrDwK,GAAmB,SAAA5K,GAAI,OAAI6K,YAAJ,KAEd7K,GACE,SAAAwH,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKE,OAAOE,UAC/B,SAAA0H,GAAC,OACRA,EAAExC,MAAQwC,EAAE9E,MAAMlC,OAAOgH,EAAExC,OAASwC,EAAE9E,MAAMlC,OAAO/B,KAAKoC,YAG/CiK,GAAKxD,IAAOyD,GAAV,KACXH,IAAiB,SAAApD,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKO,OAG/ByK,GAAK1D,IAAO2D,GAAV,KACXL,IAAiB,SAAApD,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKM,OAG/B4K,GAAK5D,IAAO6D,GAAV,KACXP,IAAiB,SAAApD,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKG,O,SCzC/BiL,GAAW,oBAEXC,GAAO,Y,8fCLpB,IAAM5B,GAAOnC,IAAOC,IAAV,MAIK,SAAAC,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKE,OACtB,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAG/BkL,GAAiBhE,YAAOO,GAAPP,CAAH,MAIdiE,GAAejE,IAAOC,IAAV,MAKZiE,GAAiBlE,IAAOC,IAAV,MACL,SAAAC,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKE,OACtB,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQlC,OAC1B,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SA4GhB+K,gBAtGA,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EACrBC,mBAAS,CAAEC,gBAAiB,GAAIC,SAAU,KADrB,mBAC1CC,EAD0C,KAClCC,EADkC,OAEvBJ,mBAAS,IAFc,mBAE1C3N,EAF0C,KAEnCgO,EAFmC,KAIjDpC,qBAAU,WACRoC,EAAS,MACR,CAACP,EAASQ,WAEb,IAAMC,EAAe,SAAAC,GAAM,IAAD,EACAA,EAAEC,OAAlBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACdP,EAAU,eAAKD,EAAN,gBAAeO,EAAOC,MAyCzBV,EAA8BE,EAA9BF,gBAAiBC,EAAaC,EAAbD,SAEzB,OACE,kBAAC,IAAD,CACEU,SAAU7I,GACV8I,UAAW,CAAE/D,MAAO,CAAEmD,kBAAiBC,eAEtC,SAACY,EAAD,OAAWC,EAAX,EAAWA,QAAgBC,EAA3B,EAAoB3O,MAApB,OACC,0BAAM4O,SAAU,SAAAT,GAAC,OA9CF,SAACA,EAAGM,GACvBN,EAAEU,iBAEGjB,GAAoBC,GAKzBG,EAAS,IACTS,IAASrP,MAAK,2BAAA0P,EAAAC,OAAA,uDAASC,EAAT,EAASA,KACrBzP,aAAa0P,QAAQ,QAASD,EAAKP,OAAOnP,OAD9B,WAAAwP,EAAA,MAENpB,KAFM,OAGZF,EAAQ0B,KD9DM,KC2DF,yCALZlB,EAAS,2BA0CcmB,CAAahB,EAAGM,KACnC,kBAAC,GAAD,KACE,kBAACrB,GAAD,KAhCW,SAAAuB,GACnB,IAAIS,EAQJ,OANIpP,EACFoP,EAAepP,EACN2O,IACTS,EAAeT,EAASU,cAAc,GAAGlO,SAGvCiO,EAEA,kBAAC/B,GAAD,KACE,kBAACZ,GAAD,CAAO3K,KAAK,MAAMgF,MAAM,SACrBsI,IAMF,KAcIE,CAAaX,GAEd,kBAACnE,GAAD,CACE+E,WAAS,EACTjP,KAAK,OACL+N,KAAK,kBACLP,OAAQF,EACR4B,SAAUtB,EACVuB,YAAY,oBACZ/E,YAAY,WAIhB,kBAAC0C,GAAD,CAAgBrD,KAAK,KAAKF,MAAM,MAC9B,kBAACW,GAAD,CACElK,KAAK,WACL+N,KAAK,WACLP,OAAQD,EACR2B,SAAUtB,EACVuB,YAAY,WACZ/E,YAAY,UAEd,kBAAC6B,GAAD,CAAGmD,GDvHc,oBCwHf,kBAAC,GAAD,2BAIJ,kBAACtF,GAAD,CAAQpH,SAAU0L,GAAlB,kB,+1BCtHZ,IAAMnD,GAAOnC,IAAOC,IAAV,MAYJsG,GAAkBvG,YAAOD,GAAPC,CAAH,MAMN,SAAAE,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAEb,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MAKrCyN,GAAOxG,YAAOmD,GAAPnD,CAAH,MAEC,SAAAE,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAChB,SAAA8G,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKI,MACrB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAG7B,SAAAyH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAGV,SAAA8G,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MAKrC0N,GAAkBzG,IAAOC,IAAV,MAyBNyG,GAlBI,SAAC,GAAiB,IAAfpC,EAAc,EAAdA,QACpB,OACE,kBAAC,GAAD,KACE,kBAACiC,GAAD,CAAiBnG,SAAS,MACxB,kBAACoG,GAAD,CAAMF,GF3DM,KE2DYK,GAAS1B,MAEjC,kBAACwB,GAAD,KACE,kBAAC,GAAD,CAAQnC,QAASA,Q,SCxDrBsC,GAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACX,kBAACC,GAAA,OAAD,KACE,+BAAQD,KAQZD,GAAK9D,aAAe,CAClB+D,MAAOF,GAAS1B,MAGH2B,U,ozBCTf,IAAMzE,GAAOnC,YAAOD,GAAPC,CAAH,MAOa,SAAAE,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MAMrCgO,GAAU/G,IAAOC,IAAV,MAGF,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAChB,SAAA8G,GAAC,OAAIA,EAAE9E,MAAMP,OAAOhC,MAEZ,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MAKrCiO,GAAUhH,YAAOwD,GAAPxD,CAAH,MACM,SAAAE,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAGlCmO,GAAOjH,IAAOC,IAAV,MACG,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQ/B,MACf,SAAAmH,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOlC,MAIhB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO/B,MA6K5BqL,gBArKA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASE,EAAc,EAAdA,QAAc,EACbC,mBAAS,IADI,mBAChC3N,EADgC,KACzBgO,EADyB,OAEXL,mBAAS,CACnC2C,SAAU,GACVC,SAAU,GACVC,MAAO,GACP3C,SAAU,KAN2B,mBAEhCC,EAFgC,KAExBC,EAFwB,KASjCG,EAAe,SAAAC,GAAM,IAAD,EACAA,EAAEC,OAAlBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACdP,EAAU,eAAKD,EAAN,gBAAeO,EAAOC,MA+B3Ba,EAAe,SAAChB,EAAGsC,GACvBtC,EAAEU,iBAEF,IAAM7O,EA/BS,WACf,IAAKsQ,IAAaE,IAAUD,IAAa1C,EACvC,MAAO,0BAGT,GAAIyC,EAASI,OAAS,GACpB,MAAO,uCAIT,IADmB,wJACHC,KAAKC,OAAOJ,GAAOK,eACjC,MAAO,+BAIT,MADsB,wCACHF,KAAKJ,GAEbA,EAASG,OAAS,GACpB,sCAGL7C,EAAS6C,OAAS,GACb,4BANA,mEAeKI,GACd,GAAI9Q,EAEF,OADAgO,EAAShO,IACF,EAGTyQ,IAASrR,MAAK,2BAAA0P,EAAAC,OAAA,uDAASC,EAAT,EAASA,KACrBzP,aAAa0P,QAAQ,QAASD,EAAKyB,OAAOnR,OAD9B,WAAAwP,EAAA,MAENpB,KAFM,OAGZF,EAAQ0B,KJ3GM,KIwGF,yCA2BRoB,EAAwCxC,EAAxCwC,SAAUE,EAA8B1C,EAA9B0C,MAAO3C,EAAuBC,EAAvBD,SAAU0C,EAAazC,EAAbyC,SAEnC,OACE,kBAAC,IAAD,CACEhC,SAAU9I,GACV+I,UAAW,CAAE/D,MAAO,CAAE6F,WAAUE,QAAO3C,WAAU0C,eAEhD,SAACE,EAAD,GAA2C,IAAhC/B,EAA+B,EAA/BA,QAAgBC,EAAe,EAAtB3O,MACnB,OACE,kBAAC,GAAD,CAAMwJ,SAAS,MACb,kBAAC,GAAD,MAEA,kBAAC2G,GAAD,KACE,6BACE,kBAACC,GAAD,CAAStJ,MAAM,SAAf,mDAKF,wEACA,qDACA,mEAGF,kBAAC,GAAD,KACE,kBAAC6C,GAAD,CAASG,OAAO,MACd,kBAAC8C,GAAD,wBAGF,0BAAMgC,SAAU,SAAAT,GAAC,OAAIgB,EAAahB,EAAGsC,KACnC,kBAACjG,GAAD,CACElK,KAAK,OACL+N,KAAK,WACLP,OAAQwC,EACRd,SAAUtB,EACVuB,YAAY,YACZ/E,YAAY,UAEd,kBAACf,GAAD,CAASC,IAAI,KAAKE,OAAO,MACvB,kBAACU,GAAD,CACElK,KAAK,OACL+N,KAAK,QACLP,OAAQ0C,EACRhB,SAAUtB,EACVuB,YAAY,QACZ/E,YAAY,WAGhB,kBAACF,GAAD,CACElK,KAAK,OACL+N,KAAK,WACLP,OAAQyC,EACRf,SAAUtB,EACVuB,YAAY,WACZ/E,YAAY,UAEd,kBAACf,GAAD,CAASC,IAAI,KAAKE,OAAO,MACvB,kBAACU,GAAD,CACElK,KAAK,WACL+N,KAAK,WACLP,OAAQD,EACR2B,SAAUtB,EACVuB,YAAY,WACZ/E,YAAY,WAnFT,SAAAiE,GACnB,IAAIS,EAQJ,OANIpP,EACFoP,EAAepP,EACN2O,IACTS,EAAeT,EAASU,cAAc,GAAGlO,SAGvCiO,EAEA,kBAACzF,GAAD,CAASG,OAAO,KAAKF,IAAI,MACvB,kBAAC6C,GAAD,KAAQ2C,IAKP,KAsEME,CAAaX,GAEd,kBAAChF,GAAD,CAASC,IAAI,OACb,kBAACQ,GAAD,CAAQtI,KAAK,QAAQkB,SAAU0L,GAA/B,oB,ohBC/LhB,IAAMnD,GAAOnC,IAAOC,IAAV,MACK,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAG9BiH,GAAYC,IAAOC,IAAV,MAGO,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAC7B,SAAA8G,GAAC,OAAIA,EAAE9E,MAAMN,QAAQ/B,MACf,SAAAmH,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOlC,MAIhB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO/B,MAIpB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MAKrC4O,GAAO3H,IAAOE,EAAV,MACK,SAAAA,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKG,MA0GvBqL,GAnGQ,WAAO,IAAD,EACDK,mBAAS,IADR,mBACpB6C,EADoB,KACbQ,EADa,OAEDrD,mBAAS,IAFR,mBAEpB3N,EAFoB,KAEbgO,EAFa,OAGGL,mBAAS,IAHZ,mBAGpBxM,EAHoB,KAGX8P,EAHW,KAKrBC,EAAoB,SAAA/C,GACxB6C,EAAS7C,EAAEC,OAAOE,QAmBpB,OAAInN,EAEA,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACwI,GAAD,CAASG,OAAO,MACd,kBAAC8C,GAAD,KAAKzL,MAQb,kBAAC,IAAD,CACEoN,SAAU5I,GACV6I,UAAW,CAAE/D,MAAO,CAAE+F,YAErB,SAACW,EAAD,KAAyBnC,KAAzB,IAA+BN,EAA/B,EAA+BA,QAAgBC,EAA/C,EAAwC3O,MAAxC,OACC,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAMiQ,MAAM,oBAEZ,kBAAC,GAAD,KACE,kBAACtG,GAAD,CAASG,OAAO,MACd,kBAAC8C,GAAD,uBACA,kBAACmE,GAAD,uHAMF,0BAAMnC,SAAU,SAAAT,GAAC,OA9CN,SAACA,EAAGgD,GACvBhD,EAAEU,iBAEiB,wJACH8B,KAAKC,OAAOJ,GAAOK,gBAKnC7C,EAAS,IACTgD,EAAS,IACTG,IAAuB/R,MAAK,2BAAA0P,EAAAC,OAAA,gDAASC,EAAT,EAASA,KACnCiC,EAAWjC,EAAKoC,qBAAqBjQ,SADX,yCAN1B6M,EAAS,gCAyCkBmB,CAAahB,EAAGgD,KACnC,kBAAC3G,GAAD,CACElK,KAAK,OACL+N,KAAK,QACLP,OAAQ0C,EACRhB,SAAU0B,EACVzB,YAAY,UAGbzP,GACC,kBAAC2J,GAAD,CAASG,OAAO,KAAKF,IAAI,MACvB,kBAAC6C,GAAD,KAAQzM,IAIX2O,GACC,kBAAChF,GAAD,CAASG,OAAO,KAAKF,IAAI,MACvB,kBAAC6C,GAAD,KACGkC,EAASU,cAAcgC,KAAI,SAAAlD,GAAC,OAC3B,yBAAKmD,IAAKnD,EAAEhN,SAAUgN,EAAEhN,cAMhC,kBAACwI,GAAD,CAASC,IAAI,OAEb,kBAACQ,GAAD,CAAQpH,SAAU0L,GAAlB,mBAEA,kBAAC/E,GAAD,CAASC,IAAI,MACX,kBAAC2C,GAAD,CAAGmD,GL7HC,KK6HJ,kC,iZCjHhB,IAAMnE,GAAOnC,IAAOC,IAAV,MACK,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAG9BiH,GAAYC,IAAOC,IAAV,MAGO,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAC7B,SAAA8G,GAAC,OAAIA,EAAE9E,MAAMN,QAAQ/B,MACf,SAAAmH,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOlC,MAGhB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO/B,MAIpB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MAuH5BoL,gBA/GO,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EAC5BC,mBAAS,CAAEE,SAAU,GAAI0D,gBAAiB,KADd,mBACjDzD,EADiD,KACzCC,EADyC,OAE9BJ,mBAAS,IAFqB,mBAEjD3N,EAFiD,KAE1CgO,EAF0C,KAIlDE,EAAe,SAAAC,GAAM,IAAD,EACAA,EAAEC,OAAlBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACdP,EAAU,eAAKD,EAAN,gBAAeO,EAAOC,MA6BzBT,EAA8BC,EAA9BD,SAAU0D,EAAoBzD,EAApByD,gBAEZC,EAAM,IAAIC,gBAAgBhE,EAASiE,QACnClB,EAAQgB,EAAIjK,IAAI,SAChBjI,EAAQkS,EAAIjK,IAAI,SAEtB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAM0I,MAAM,mBAEZ,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAO0B,MAAO/L,GAA6B4I,UAAW,CAAEgC,QAAOlR,WAC5D,YAAmC,IAAhCoP,EAA+B,EAA/BA,QAAgBC,EAAe,EAAtB3O,MACX,OAAI0O,EAAgB,kBAACrC,GAAD,CAASzC,IAAI,OAC7B+E,EACK,kBAAC/B,GAAD,iDAGP,kBAAC,IAAD,CACE2B,SAAU1I,GACV2I,UAAW,CAAE/D,MAAO,CAAE+F,QAAO3C,WAAUvO,YAEtC,SAACsS,EAAD,GAAkD,IAAhClD,EAA+B,EAA/BA,QAAgBC,EAAe,EAAtB3O,MAC1B,OAAI2O,EAAiB,kBAAC/B,GAAD,KAAK+B,GAGxB,oCACE,kBAAChF,GAAD,CAASG,OAAO,MACd,kBAAC8C,GAAD,wBAGF,0BAAMgC,SAAU,SAAAT,GAAC,OAzDhB,SAACA,EAAGyD,GACvBzD,EAAEU,iBAEGhB,GAAa0D,EAGP1D,EAAS6C,OAAS,EAC3B1C,EAAS,6BAEAH,IAAa0D,GAKxBvD,EAAS,IACT4D,IACGxS,MAAK,2BAAA0P,EAAAC,OAAA,uDAASC,EAAT,EAASA,KACbzP,aAAa0P,QAAQ,QAASD,EAAK4C,cAActS,OAD7C,WAAAwP,EAAA,MAEEpB,KAFF,OAGJF,EAAQ0B,KNhEI,KM6DR,wCAKLhP,OAAM,SAAA2R,GACL7D,EAAS6D,OAZX7D,EAAS,0BANTA,EAAS,wCAqD4BmB,CAAahB,EAAGyD,KACnC,kBAACpH,GAAD,CACElK,KAAK,WACL+N,KAAK,WACLP,OAAQD,EACR2B,SAAUtB,EACVuB,YAAY,aAGd,kBAAC9F,GAAD,CAASC,IAAI,KAAKE,OAAO,MACvB,kBAACU,GAAD,CACElK,KAAK,WACL+N,KAAK,kBACLP,OAAQyD,EACR/B,SAAUtB,EACVuB,YAAY,sBAIfzP,GACC,kBAAC2J,GAAD,CAASG,OAAO,KAAKF,IAAI,MACvB,kBAAC6C,GAAD,KAAQzM,IAIZ,kBAACoK,GAAD,CAAQpH,SAAU0L,GAAlB,+B,0mBCvHxB,IAAMnD,GAAOnC,IAAOC,IAAV,KACUyI,MAKd3I,GAAYC,IAAOC,IAAV,MAIF,SAAAC,GAAC,OAAIA,EAAE9E,MAAMH,OAAOjC,MAKV,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MAKrC4P,GAAQ3I,IAAOC,IAAV,MAGY,SAAAC,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MA6C5B6P,GArCI,SAAC,GAAiB,IAAftE,EAAc,EAAdA,QACpB,OACE,kBAAC,GAAD,KACE,kBAACxD,GAAD,CAASC,aAAa,QAEtB,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYuD,QAASA,IAErB,kBAACqE,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEE,OAAK,EACLC,KPnDM,IOoDNC,OAAQ,kBAAM,kBAAC,GAAD,CAAQzE,QAASA,OAEjC,kBAAC,IAAD,CACEuE,OAAK,EACLC,KPtDiB,mBOuDjBE,UAAW9E,KAEb,kBAAC,IAAD,CACE2E,OAAK,EACLC,KPzDgB,kBO0DhBC,OAAQ,kBAAM,kBAAC,GAAD,CAAezE,QAASA,OAExC,kBAAC,IAAD,CAAUgC,GPhEF,W,uSQEpB,IAAMnE,GAAOnC,IAAOC,IAAV,MACC,SAAAC,GAAC,OAAKA,EAAExH,KAAF,UAAYwH,EAAExH,KAAd,MAAyB,UAC9B,SAAAwH,GAAC,OAAKA,EAAExH,KAAF,UAAYwH,EAAExH,KAAd,MAAyB,UAMrCuQ,GAAQjJ,IAAOkJ,IAAV,MAwBIC,GAfA,SAAC,GAAD,IAAGzQ,EAAH,EAAGA,KAAM0Q,EAAT,EAASA,MAAT,OACb,kBAAC,GAAD,CAAM1Q,KAAMA,GACT0Q,EACC,kBAAC,GAAD,CAAOC,IAAKD,IAEZ,kBAAC,GAAD,CAAU3L,MAAO/E,EAAI,UAAMA,EAAN,MAAiB,O,onBCtB5C,IAAMyJ,GAAOnC,IAAOC,IAAV,MAGG,SAAAC,GAAC,OAAIA,EAAE9E,MAAMH,OAAOhC,MAG3BqQ,GAAgBtJ,IAAOC,IAAV,MAMbsJ,GAAQvJ,IAAOqB,MAAV,MAKQ,SAAAnB,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOjC,MACrB,SAAAmH,GAAC,OAAKA,EAAEsJ,SAAWtJ,EAAE9E,MAAMN,QAAQjC,GAAKqH,EAAE9E,MAAMN,QAAQ9B,MACvD,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQ9B,MAC7B,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAO/B,KAAKqC,QACrB,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKG,MAChB,SAAAqH,GAAC,OACnBA,EAAEuJ,gBACEvJ,EAAE9E,MAAMlC,OAAOgH,EAAEuJ,iBACjBvJ,EAAE9E,MAAMlC,OAAOe,KAAK,QAKb,SAAAiG,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOe,KAAK,QAwDzByP,GAhDK,SAAC,GAUd,IATLtD,EASI,EATJA,SACAuD,EAQI,EARJA,QACAzE,EAOI,EAPJA,MACA0E,EAMI,EANJA,SACAH,EAKI,EALJA,gBACApD,EAII,EAJJA,YACAmD,EAGI,EAHJA,SACAlH,EAEI,EAFJA,SACA6D,EACI,EADJA,UAEA,OACE,kBAAC,GAAD,MACIqD,GACA,kBAACF,GAAD,KACE,kBAAC,GAAD,OAIJ,kBAACC,GAAD,CACEnD,SAAUA,EACVuD,QAASA,EACTzE,MAAOA,EACP2E,IAAKD,EACLH,gBAAiBA,EACjBvS,KAAK,OACLmP,YAAaA,EACbmD,SAAUA,EACVrD,UAAWA,IAGZ7D,I,+2BChEP,IAAMH,GAAOnC,IAAOC,IAAV,MAOK,SAAAC,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKG,MACtB,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMR,QAAQ9B,MACf,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAGpC0Q,GAAU9J,YAAOmD,GAAPnD,CAAH,MAIW,SAAAE,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOe,KAAK,QAI3C8P,GAAO/J,IAAOC,IAAV,MAKG,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAG5BmR,GAAOhK,IAAOC,IAAV,MACO,SAAAC,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAGpCwR,GAAWjK,IAAOC,IAAV,MACC,SAAAC,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKE,OAGhCsR,GAAiBlK,IAAOC,IAAV,MAEP,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MACvB,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAO/B,KAAKqC,QA6CrB2Q,GAvCM,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC7B,OAAID,EAAM9C,OAAS,EAEf,kBAAC,GAAD,KACE,kBAAC4C,GAAD,4BAMJ,kBAAC,GAAD,KACGE,EAAMnC,KAAI,SAAAvQ,GAAI,OACb,kBAACoS,GAAD,CACE5B,IAAKxQ,EAAK4S,GACVhE,GACE+D,EACIE,YAAaC,GAAiB,CAAEC,OAAQ/S,EAAK4S,KAC7CC,YV/DY,aU+DsB,CAAEpD,SAAUzP,EAAKyP,YAGzD,kBAAC4C,GAAD,KACE,kBAAC,GAAD,CAAQX,MAAO1R,EAAK0R,MAAO1Q,KAAM,KAEjC,kBAAC6H,GAAD,CAASI,KAAK,MACZ,kBAACqJ,GAAD,KAAOtS,EAAKwP,UACZ,kBAAC+C,GAAD,SAAYvS,EAAKyP,kBCzElBuD,GAAkB,SAACb,EAAKc,GACnCnI,qBAAU,WAGR,OAFAoI,SAASC,iBAAiB,QAASC,GAAoB,GAEhD,WACLF,SAASG,oBAAoB,QAASD,GAAoB,OAI9D,IAAMA,EAAqB,SAAAE,GACrBnB,EAAIoB,UAAYpB,EAAIoB,QAAQC,SAASF,EAAMhG,SAC7C2F,M,8HCLN,IAAMQ,GAAgBnL,YAAOiD,GAAPjD,CAAH,MAiGJoL,GAxFA,SAAC,GAQT,IAPL/G,EAOI,EAPJA,SACAmF,EAMI,EANJA,SACAa,EAKI,EALJA,WACAZ,EAII,EAJJA,gBACApD,EAGI,EAHJA,YACAF,EAEI,EAFJA,UACGkF,EACC,iGACEC,EAASC,cADX,EAGgDhH,oBAAS,GAHzD,mBAGGiH,EAHH,KAGuBC,EAHvB,OAIkClH,mBAAS,IAJ3C,mBAIGmH,EAJH,KAIgBC,EAJhB,OAKsBpH,mBAAS,IAL/B,mBAKG6F,EALH,KAKUwB,EALV,OAM0BrH,oBAAS,GANnC,mBAMGe,EANH,KAMYuG,EANZ,KASEjC,EAAWkC,iBAAO,MACxBpB,GAAgBd,GAAU,kBAAM6B,GAAsB,MAGtD,IAAMM,ECvCmB,SAAC7G,EAAO8G,GAAW,IAAD,EACCzH,mBAASW,GADV,mBACpC+G,EADoC,KACpBC,EADoB,KAgB3C,OAbA1J,qBACE,WACE,IAAMmI,EAAUjI,YAAW,WACzBwJ,EAAkBhH,KACjB8G,GAEH,OAAO,WACLrJ,aAAagI,MAGjB,CAACzF,EAAO8G,IAGHC,EDuBqBE,CAAYT,EAAa,KAErDlJ,qBAAU,WAERmJ,EAAe,MACd,CAACtH,EAASQ,WAEbrC,qBAAU,WAgBR,OAFAuJ,EAbe,qBAAArG,EAAAC,OAAA,kEAAAD,EAAA,MACU4F,EAAO/C,MAAM,CAClCA,MAAOpM,GACPiJ,UAAW,CAAEsG,YAAaK,MAHf,gBACLnG,EADK,EACLA,KAKRgG,EAAShG,EAAKwG,aACdP,GAAW,GAGXJ,EADiD,KAAxBM,GATZ,qCAaOzD,GAAWmD,GAAsB,GAEhD,kBAAMI,GAAW,MACvB,CAACE,EAAqBT,IAazB,OACE,kBAAC,GAAD,eACElF,SAbsB,SAAMrB,GAAN,eAAAW,EAAAC,OAAA,gDAElBT,EAAQH,EAAEC,OAAOE,MAAMmH,QAAQ,QAAS,IAC9CV,EAAezG,GACXA,GACF2G,GAAW,GALW,sCActBlC,QALqB,kBAAM+B,GAAeD,GAAsB,IAMhEvG,MAAOwG,EACP9B,SAAUA,EACVvD,YAAaA,EACbmD,SAAUA,EACVC,gBAAiBA,EACjBtD,UAAWA,GACPkF,GAEH/F,GAAW,kBAAC6F,GAAD,CAAezS,KAAK,QAE/B8S,GACC,kBAAC,GAAD,CAAcpB,MAAOA,EAAOC,WAAYA,ME3DjClG,eAAWmI,aAtBV,SAAC,GAAyB,IAAvBhB,EAAsB,EAAtBA,OAAQlH,EAAc,EAAdA,QAAc,EAClBlM,IAAZqK,EAD8B,oBAUvC,OACE,kBAACvB,GAAD,CAAQ7J,MAAI,EAAC0L,QARO,WACpBN,EAAS,CAAErL,KlDfgB,oBkDgB3Bf,aAAaoW,WAAW,SACxBjB,EAAOkB,aACPpI,EAAQ0B,KdlBQ,OcsBhB,gB,kmBCdJ,IAAM3D,GAAOnC,IAAOC,IAAV,MAIO,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQ/B,MAGzB,SAAAmH,GAAC,OAAIA,EAAE9E,MAAMH,OAAOhC,MACjB,SAAAiH,GAAC,OAAIA,EAAE9E,MAAMR,QAAQ9B,MAG/B2T,GAAMlJ,YAAH,MAGI,SAAArD,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAAM,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQ7B,MAGrC,SAAAiH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOe,KAAK,QACpC,SAAAiG,GAAC,OAAIA,EAAE9E,MAAMlC,OAAO/B,KAAKwC,aAIhCyJ,GAAOpD,YAAOmD,GAAPnD,CAAH,KACNyM,IAGE1C,GAAO/J,IAAOC,IAAV,KACNwM,IA8BWC,GAxBY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACvBzU,IAAVF,EADiC,oBACjCA,KAET,OACE,kBAAC,GAAD,CAAM6R,IAAK8C,GACT,kBAACvJ,GAAD,CACEkD,GAAIiE,YfzCgB,aeyCkB,CACpCpD,SAAUnP,EAAKN,KAAKyP,YAFxB,cAQA,kBAAC,GAAD,KACE,kBAAC,GAAD,S,ugCCxCR,IAAMyF,GAAmB5M,IAAOC,IAAV,MAKT,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MACL,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QACzC,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKE,OAChB,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAOpCyT,GAAW7M,IAAOC,IAAV,MAMR+J,GAAOhK,IAAOC,IAAV,MACO,SAAAC,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAGpCqU,GAAS9M,IAAOC,IAAV,MAMK,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAGhCkU,GAAY/M,IAAOC,IAAV,MAMTgJ,GAAQjJ,IAAOkJ,IAAV,MAyFIoD,gBA/EM,SAAC,GAAqC,IAAnCU,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,MAAO3B,EAAa,EAAbA,OAAa,EACrCpT,IAAVF,EAD+C,oBAC/CA,KAEH6R,EAAMqD,IAAMpB,OAAO,MAsBzB,OApBApB,GAAgBb,EAAKoD,GAErBzK,qBAAU,WACuB,EAAAkD,EAAAC,OAAA,2EAAAD,EAAA,MAErB4F,EAAO6B,OAAO,CAClBhI,SAAU7H,GACV8H,UAAW,CACT/D,MAAO,CACLoJ,OAAQzS,EAAKN,KAAK4S,KAGtB8C,eAAgB,iBAAM,CAAC,CAAE7E,MAAOtM,SATP,+GAe9B,CAACjE,EAAKN,KAAK4S,GAAItS,EAAKN,KAAK2V,iBAAiB/F,OAAQgE,IAEhD0B,EAAaM,QAAWN,EAAaO,MAASP,EAAaQ,QAK9D,kBAACZ,GAAD,CAAkB/C,IAAKA,GACrB,kBAAC1G,GAAD,CACEmD,GAAIiE,YhB3FgB,agB2FkB,CACpCpD,SAAU6F,EAAaS,OAAOtG,YAGhC,kBAAC0F,GAAD,KACE,kBAAC,GAAD,CAAQzD,MAAO4D,EAAaS,OAAOrE,MAAO1Q,KAAM,KAEhD,kBAAC6H,GAAD,CAASI,KAAK,OAEd,kBAAC,GAAD,KAAOqM,EAAaS,OAAOvG,YAI9B8F,EAAaM,QAAU,kBAACR,GAAD,8BAEvBE,EAAaO,MACZ,kBAACT,GAAD,wBAEE,kBAAC3J,GAAD,CAAGmD,GAAIiE,YAAaC,GAAa,CAAEF,GAAI0C,EAAaO,KAAKG,KAAKpD,MAC5D,kBAACyC,GAAD,KACE,kBAAC,GAAD,CAAO1D,IAAK2D,EAAaO,KAAKG,KAAKtE,WAM1C4D,EAAaQ,SACZ,kBAACV,GAAD,+BAEE,kBAAC3J,GAAD,CACEmD,GAAIiE,YAAaC,GAAa,CAAEF,GAAI0C,EAAaQ,QAAQE,KAAKpD,MAE9D,kBAACyC,GAAD,KACE,kBAAC,GAAD,CAAO1D,IAAK2D,EAAaQ,QAAQE,KAAKtE,YAvCzC,Q,yZCzFX,IAAMjH,GAAOnC,IAAOC,IAAV,MAQG,SAAAC,GAAC,OAAIA,EAAE9E,MAAMH,OAAOhC,MACjB,SAAAiH,GAAC,OAAIA,EAAE9E,MAAMR,QAAQ9B,MAEd,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO/B,MAE9B,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQ9B,MAI5B2U,GAAQ3N,IAAOC,IAAV,MACE,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAkCnB+U,GA5BoB,SAAC,GAI7B,IAHLC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,aACAC,EACI,EADJA,cAEA,OACE,kBAAC,GAAD,CAAMlE,IAAKgE,GACPC,EAAaxG,OAGbwG,EAAa7F,KAAI,SAAA+E,GAAY,OAC3B,kBAAC,GAAD,CACE9E,IAAK8E,EAAa1C,GAClB0C,aAAcA,EACdC,MAAOc,OANX,kBAAC,GAAD,gCCjCKC,GAAU,SAAAC,GACrB,IAAMC,EAAO,IAAIC,KAAKC,SAASH,IAEzBI,EAAUC,KAAKC,OAAO,IAAIJ,KAASD,GAAQ,KAC7CM,EAAWF,KAAKC,MAAMF,EAAU,SAEpC,OAAIG,EAAW,EACNA,EAAW,UAGpBA,EAAWF,KAAKC,MAAMF,EAAU,SACjB,EACNG,EAAW,WAGpBA,EAAWF,KAAKC,MAAMF,EAAU,QACjB,EACNG,EAAW,SAGpBA,EAAWF,KAAKC,MAAMF,EAAU,OACjB,EACNG,EAAW,UAGpBA,EAAWF,KAAKC,MAAMF,EAAU,KACjB,EACNG,EAAW,QAGbF,KAAKC,MAAMF,GAAW,Y,kkDCvB/B,IAAMlM,GAAOnC,IAAOC,IAAV,MAQG,SAAAC,GAAC,OAAIA,EAAE9E,MAAMH,OAAOhC,MACjB,SAAAiH,GAAC,OAAIA,EAAE9E,MAAMR,QAAQ9B,MAEd,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO/B,MAMrCkO,GAAUhH,IAAOC,IAAV,MAKA,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAAM,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAGvDuK,GAAOpD,YAAOmD,GAAPnD,CAAH,MACC,SAAAE,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOK,QAAQC,QACxB,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKG,MAGzB,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOK,QAAQC,QAKnCiV,GAAOzO,YAAO0O,IAAP1O,CAAH,MAEG,SAAAE,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAAM,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQlC,OAMlD,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAO/B,KAAKoC,WACV,SAAA2G,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QAG7B,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOe,KAAK,QAI3C0U,GAAO3O,IAAOC,IAAV,MAEK,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAO9B+V,GAAW5O,IAAOC,IAAV,MAKR4O,GAAc7O,IAAOC,IAAV,MACD,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQlC,OACtB,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKE,OAC3B,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOe,KAAK,QAI9B6U,GAAY9O,IAAOC,IAAV,MACA,SAAAC,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKC,QAC3B,SAAAuH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAO/B,KAAKwC,aA8CrBoV,GAxCe,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,WAAYlB,EAAmB,EAAnBA,aAC3C,OACE,kBAAC,GAAD,CAAMjE,IAAKmF,GACT,kBAAC,GAAD,KACE,kBAAC,GAAD,CACE1I,GAAIiE,YAAaC,GAAiB,CAAEC,OnBxElB,SmBuEpB,gBAODqD,EAAa7F,KAAI,SAAAvQ,GAAI,OACpB,kBAAC+W,GAAD,CACEvG,IAAKxQ,EAAK4S,GACVhE,GAAIiE,YAAaC,GAAiB,CAAEC,OAAQ/S,EAAK4S,MAEjD,8BACE,kBAAC,GAAD,CAAQlB,MAAO1R,EAAK0R,MAAO1Q,KAAM,MAGnC,kBAACiW,GAAD,KACE,6BACE,kBAACC,GAAD,KAAWlX,EAAKwP,UAEhB,kBAAC2H,GAAD,KAAcnX,EAAKuX,cAGrB,kBAACH,GAAD,KAAYd,GAAQtW,EAAKwX,8BCxEtBC,GArCS,SAAC,GAOlB,IANLH,EAMI,EANJA,WACAnB,EAKI,EALJA,gBACAlB,EAII,EAJJA,QACAyC,EAGI,EAHJA,aACAtB,EAEI,EAFJA,aACAC,EACI,EADJA,cAEMsB,EAAY,CAChBC,KAAM,kBAAC,GAAD,CAAoB3C,QAASA,IACnC4C,aACE,kBAAC,GAAD,CACE1B,gBAAiBA,EACjBC,aAAcA,EACdC,cAAeA,IAGnByB,QACE,kBAAC,GAAD,CACER,WAAYA,EACZlB,aAAcA,KAKpB,OAAOsB,EAAeC,EAAUD,GAAgB,M,4wDCblD,IAAMjN,GAAOnC,YAAOD,GAAPC,CAAH,MAGY,SAAAE,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAC7B,SAAA8G,GAAC,OAAIA,EAAE9E,MAAMH,OAAOlC,KChBJ,IDkBA,SAAAmH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QAEjC,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MAC5B,SAAAmH,GAAC,OAAIA,EAAE9E,MAAMH,OAAOlC,MAI7B0W,GAAUzP,IAAOC,IAAV,KCzBgB,IDmCN,SAAAC,GAAC,OAAIkO,SAASlO,EAAE9E,MAAMP,OAAO7B,GAAI,IAAM,GAAK,QACtD,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO7B,MAI3B6T,GAAW7M,IAAOC,IAAV,MAMRyP,GAAY1P,IAAOC,IAAV,MAGQ,SAAAC,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MAKrCyN,GAAOxG,YAAOmD,GAAPnD,CAAH,MAEC,SAAAE,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOK,QAAQC,QACtB,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAC3B,SAAAyH,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKI,MAGzB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOK,QAAQC,QAGlB,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MAKrC4W,GAAY3P,IAAOC,IAAV,MAOT2P,GAAWrM,YAAH,MAQH,SAAArD,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SACT,SAAA8G,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOtC,MAAM4C,QACjC,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKE,OAOhCiX,GAAoB7P,IAAO8P,KAAV,KACnBF,IAIEG,GAAe/P,IAAO8P,KAAV,KACdF,IA8GWzL,gBAvGA,SAAC,GAAiC,IAA/BE,EAA8B,EAA9BA,SAAU2L,EAAoB,EAApBA,cAAoB,EAC3B9X,IAAVF,EADqC,oBACrCA,KADqC,EAGNuM,mBAAS,MAHH,mBAGvC6K,EAHuC,KAGzBa,EAHyB,OAIN1L,mBAAS,IAJH,mBAIvCuJ,EAJuC,KAIzBoC,EAJyB,KAMxClB,EAAalD,iBAAO,MACpB+B,EAAkB/B,iBAAO,MACzBa,EAAUb,iBAAO,MAEjBqE,EAAsB,WACtBf,GACFrB,KAIJrD,GAAgBsE,EAAYmB,GAC5BzF,GAAgBmD,EAAiBsC,GACjCzF,GAAgBiC,EAASwD,GAEzB,IAAMpC,EAAgB,WACpBkC,EAAgB,MAChBC,EAAgB,KAGlB1N,qBAAU,WACR,OAAO,kBAAMuL,OACZ,CAAC1J,EAASQ,WAEb,IAAMuL,EAAkB,SAAAC,GAClBjB,EACFrB,KAEqB,iBAAjBsC,EACFH,EAAgBlY,EAAKN,KAAK2V,kBACA,YAAjBgD,GACTH,EAAgBlY,EAAKN,KAAK4Y,kBAG5BL,EAAgBI,KAIpB,OACE,kBAAC,GAAD,KACE,kBAACZ,GAAD,KACE,kBAAC,GAAD,KACE,kBAACC,GAAD,CAAW7M,QAASmN,GAClB,kBAAC,GAAD,OAGF,kBAAC,GAAD,CAAM1J,GrBnKI,KqBmKcK,GAAS1B,MAEjC,kBAAC1E,GAAD,CAASI,KAAK,KAAKF,MAAM,MACvB,kBAAC,GAAD,CAAQ4D,SAAUA,EAAUgC,YAAY,aAI5C,kBAACsJ,GAAD,KACE,kBAACpP,GAAD,CAASE,MAAM,MACb,kBAACO,GAAD,CAAQE,OAAK,EAAC2B,QAAS,kBAAMuN,EAAgB,aAC1CpY,EAAKN,KAAK4Y,iBAAiBhJ,OAAS,GACnC,kBAACyI,GAAD,KAAe/X,EAAKN,KAAK4Y,iBAAiBhJ,QAG5C,kBAAC,GAAD,QAIJ,kBAAC/G,GAAD,CAASE,MAAM,MACb,kBAACO,GAAD,CAAQE,OAAK,EAAC2B,QAAS,kBAAMuN,EAAgB,kBAC1CpY,EAAKN,KAAK2V,iBAAiB/F,OAAS,GACnC,kBAACuI,GAAD,KACG7X,EAAKN,KAAK2V,iBAAiB/F,QAGhC,kBAAC,GAAD,QAIJ,kBAACtG,GAAD,CAAQE,OAAK,EAAC2B,QAAS,kBAAMuN,EAAgB,UAC3C,kBAAC,GAAD,CAAQhH,MAAOpR,EAAKN,KAAK0R,UAI7B,kBAAC,GAAD,CACE4F,WAAYA,EACZnB,gBAAiBA,EACjBlB,QAASA,EACTyC,aAAcA,EACdtB,aAAcA,EACdC,cAAeA,S,4MEtMzB,IAAM5L,GAAOnC,IAAOC,IAAV,MAIM,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQ9B,MACtB,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAuBrByX,GAhBE,kBACf,kBAAC,GAAD,KACE,kBAAC/M,GAAD,cAEA,kBAACjD,GAAD,CAASC,IAAI,KAAKE,OAAO,MACvB,kBAACgD,GAAD,4DAGF,kBAAC,GAAD,CAAcjG,MAAM,QAEpB,kBAAC8C,GAAD,CAASG,OAAO,OAEhB,kBAACyC,GAAD,CAAGmD,GvB7Ba,KuB6BhB,0B,2vBCnBJ,IAAMlD,GAAOpD,YAAO0O,IAAP1O,CAAH,MAGC,SAAAE,GAAC,OAAIA,EAAE9E,MAAMlC,OAAO/B,KAAKoC,WAElB,SAAA2G,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAI1B,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOK,QAAQC,QACjB,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOe,KAAK,QAGnC,SAAAiG,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOK,QAAQC,QAGjB,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MACnB,SAAAmH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAKxCoX,GAAOxQ,IAAOyQ,GAAV,MAIK,SAAAvQ,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKG,MAGhC6X,GAAW1Q,IAAO2Q,GAAV,MAMR3G,GAAOhK,IAAOC,IAAV,MACO,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAmDvB8X,GA7CI,WACjB,OACE,kBAACJ,GAAD,KACE,kBAAC,GAAD,CAAM3H,OAAK,EAACgI,gBAAgB,WAAWvK,GxBvDzB,KwBwDZ,kBAACoK,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,eAIJ,kBAAC,GAAD,CAAM7H,OAAK,EAACgI,gBAAgB,WAAWvK,GxBtDtB,YwBuDf,kBAACoK,GAAD,KACE,kBAAC,GAAD,CAAajT,MAAO,KACpB,kBAAC,GAAD,kBAIJ,kBAAC,GAAD,CAAMoL,OAAK,EAACgI,gBAAgB,WAAWvK,GxB3DvB,WwB4Dd,kBAACoK,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,iBAIJ,kBAAC,GAAD,CAAM7H,OAAK,EAACgI,gBAAgB,WAAWvK,GxBhEhB,kBwBiErB,kBAACoK,GAAD,KACE,kBAAC,GAAD,CAAkBjT,MAAO,KACzB,kBAAC,GAAD,wBAIJ,kBAAC,GAAD,CACEoL,OAAK,EACLgI,gBAAgB,WAChBvK,GAAIiE,YAAaC,GAAiB,CAAEC,OxBjEhB,SwBmEpB,kBAACiG,GAAD,KACE,kBAAC,GAAD,CAAcjT,MAAO,KACrB,kBAAC,GAAD,qB,yiCC3EV,IAAM0E,GAAOnC,IAAOC,IAAV,KAIO6Q,IHjBmB,KGqBrB,SAAA5Q,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKE,OACzB,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMH,OAAOnC,MACX,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SACd,SAAA8G,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QAEhC,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MAIxB,SAAAmH,GAAC,OAAKA,EAAE6Q,OAAS,EAAX,WHhCY,IGgCZ,QHhCY,KGwCd,SAAA7Q,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MACxB,SAAAmH,GAAC,OAAKA,EAAE6Q,OAAS,EAAX,WHvCW,IGuCX,SAInBtC,GAAOzO,YAAO0O,IAAP1O,CAAH,MAKG,SAAAE,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAKV,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOe,KAAK,QAExB,SAAAiG,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MACnB,SAAAmH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAKxCwV,GAAW5O,IAAOC,IAAV,MACG,SAAAC,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAC/B,SAAAyH,GAAC,OACRA,EAAE8Q,OAAS9Q,EAAE9E,MAAMlC,OAAOK,QAAQC,KAAO0G,EAAE9E,MAAMlC,OAAO/B,KAAKoC,WAwClD4K,gBAlCC,SAAC,GAAsC,IAApCE,EAAmC,EAAnCA,SAAU0M,EAAyB,EAAzBA,OAAQE,EAAiB,EAAjBA,WAAiB,EACjC/Y,IAAVF,EAD2C,oBAC3CA,KAEHkZ,EACJlZ,EAAKN,KAAKyP,WAAa9C,EAASQ,SAASsM,UAAU,GAErD,OACE,kBAAC,GAAD,CAAMJ,OAAQA,EAAQlH,IAAKoH,GACzB,kBAAC,GAAD,CACEpI,OAAK,EACLvC,GAAIiE,YzB5EgB,ayB4EkB,CAAEpD,SAAUnP,EAAKN,KAAKyP,WAC5D0J,gBAAgB,YAEhB,kBAAC,GAAD,CAAQzH,MAAOpR,EAAKN,KAAK0R,MAAO1Q,KAAM,KAEtC,kBAAC6H,GAAD,CAASI,KAAK,OACZ,kBAAC,GAAD,CAAUqQ,OAAQE,GACflZ,EAAKN,KAAKwP,YAKjB,kBAAC3G,GAAD,CAASC,IAAI,OAEb,kBAAC,GAAD,U,y0BChFN,IAAM2B,GAAOnC,IAAOC,IAAV,MAEY,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SACpB,SAAA8G,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,OAExCsX,IJjB6B,KIqBzB,SAAA5Q,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MACf,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOlC,MAEhB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MAKrCyX,GAAOxQ,IAAOyQ,GAAV,MAEO,SAAAvQ,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAGhC6X,GAAW1Q,IAAO2Q,GAAV,MAIK,SAAAzQ,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAOlC8V,GAAW5O,IAAOC,IAAV,MACG,SAAAC,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAC/B,SAAAyH,GAAC,OACRA,EAAE8Q,OAAS9Q,EAAE9E,MAAMlC,OAAOK,QAAQC,KAAO0G,EAAE9E,MAAMlC,OAAO/B,KAAKoC,WAG3D0Q,GAAWjK,IAAOC,IAAV,MACH,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAO/B,KAAK0C,QAoErBuX,GA9DS,SAAC,GAAkB,IAAhBvM,EAAe,EAAfA,SAAe,EACrB3M,IAAVF,EAD+B,oBAC/BA,KAMT,OAJ4BqZ,YAAUxM,EAAU,CAC9CiE,KAAM,CAAC0B,G1BxDW,UAFC,WAFK,gB0B+DM,KAG9B,kBAAC,IAAD,CAAOjC,MAAO7L,GAAkB0I,UAAW,CAAEqF,OAAQzS,EAAKN,KAAK4S,MAC5D,YAAwB,IAArB1E,EAAoB,EAApBA,KACF,OADsB,EAAdN,QAGJ,kBAAC,GAAD,KACE,kBAACrC,GAAD,QAID2C,EAAK0L,cAAchK,OAAS,EACxB,KAIP,kBAAC,GAAD,KACE,kBAAC1D,GAAD,4BAEA,kBAAC,GAAD,KACGgC,EAAK0L,cAAcrJ,KAAI,SAAAvQ,GAAI,OAC1B,kBAAC,GAAD,CAAUwQ,IAAKxQ,EAAK4S,IAClB,kBAACnH,GAAD,CACEmD,GAAIiE,Y1BvFI,a0BuF8B,CACpCpD,SAAUzP,EAAKyP,YAGjB,kBAAC,GAAD,CAAQiC,MAAO1R,EAAK0R,SAGtB,kBAAC7I,GAAD,CAASI,KAAK,MACZ,kBAACwC,GAAD,CACEmD,GAAIiE,Y1BhGE,a0BgGgC,CACpCpD,SAAUzP,EAAKyP,YAGjB,kBAAC,GAAD,KAAWzP,EAAKwP,UAChB,kBAAC,GAAD,SAAYxP,EAAKyP,sB,4VC1GhC,IAAMoK,GAAiB9V,IAAH,MAWd+V,GAAiB/V,IAAH,MCZdgW,GACL,OADKA,GAEH,SAFGA,GAGF,UCAEC,GAAmB,WAAO,IAAD,EACjBxZ,IAAVF,EAD2B,oBAC3BA,KAEHsT,EAASC,cAKT4B,EAAS,SAAOhI,EAAUC,GAAjB,SAAAM,EAAAC,OAAA,2EAAAD,EAAA,MAEE4F,EAAO6B,OAAO,CACzBhI,WACAC,UAAW,CAAE/D,MAAM,eAAM+D,OAJhB,wEAOXuM,QAAQ/a,MAAM,sCAAd,MAPW,wDAkEf,MAAO,CAAEgb,OApDM,SAAC,GAA4D,IAA1Dla,EAAyD,EAAzDA,KAAMma,EAAmD,EAAnDA,OAAQC,EAA2C,EAA3CA,iBAAkBC,EAAyB,EAAzBA,mBAChD,OAAO5E,EAAOhQ,GAAqB,CACjC6U,SAAUha,EAAKN,KAAK4S,GACpBG,OAAQ/S,EAAK4S,GACbuH,SACAC,mBACAC,wBA8CaE,OAvCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,eAAH,OACb/E,EAAO/P,GAAqB,CAAEkN,GAAI4H,KAsCXC,OAjCV,SAAC,GAMT,IALLza,EAKI,EALJA,KACAma,EAII,EAJJA,OACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,mBACAK,EACI,EADJA,QAEMlb,EAAO4a,EAAiBrK,cACxB4K,EAAa3a,EAAK4a,cAAcC,MACpC,SAAAC,GAAC,OAAIA,EAAEtb,IAASkb,GAAWI,EAAEtb,GAAMoT,KAAO8H,EAAQ9H,MAE9C4H,EAAiBG,EAAaA,EAAW/H,GAAK,KAC9C7U,EAAYyc,EAAiB,SAAW,SACxCO,EAAU,CACdb,OAAQ,CACNzM,SAAUhI,GACViI,UAAW,CACT4M,SAAUha,EAAKN,KAAK4S,GACpBG,OAAQ/S,EAAK4S,GACbuH,SACAC,mBACAC,uBAGJW,OAAQ,CACNvN,SAAU/H,GACVgI,UAAW,CAAEkF,GAAI4H,KAIrB,OAAO/E,EAAOsF,EAAQhd,GAAW0P,SAAUsN,EAAQhd,GAAW2P,c,+KC7DlE,IAAM6B,GAAOjH,IAAO0B,KAAV,MA2FK4K,gBAjFO,SAAC,GAAqB,IAAnBoB,EAAkB,EAAlBA,KAAMiF,EAAY,EAAZA,MAAY,EACtBza,IAAVF,EADgC,oBAChCA,KACHgV,EAAe0E,KAFoB,EAGXnN,mBAAS,IAHE,mBAGlCiJ,EAHkC,KAGzBoF,EAHyB,KAInCC,EAAW/G,iBAAO,MAClBgH,EAAahH,kBAAO,GAE1BtJ,qBACE,WACEmQ,GAASG,EAAW7H,QAAQ0H,UAE9B,CAACA,IAGH,IAgBMI,EAAe,SAAAhO,GACD,KAAdA,EAAEiO,UACJjO,EAAEU,iBACFoN,EAAS5H,QAAQgI,UAIrB,OACE,kBAAC,IAAD,CACE9N,SAAUoM,GACVnM,UAAW,CAAE/D,MAAO,CAAEmM,UAASC,OAAQzV,EAAKN,KAAK4S,GAAIuH,OAAQnE,EAAKpD,KAClE8C,eAAgB,iBAAM,CACpB,CAAE7E,MAAO7M,EAAoB0J,UAAW,CAAEqF,OAAQzS,EAAKN,KAAK4S,KAC5D,CAAE/B,MAAOxM,GAAUqJ,UAAW,CAAE+B,SAAUnP,EAAKN,KAAKyP,WACpD,CAAEoB,MAAOtM,IACT,CAAEsM,MAAO5M,EAAWyJ,UAAW,CAAE8N,WAAYlb,EAAKN,KAAK4S,KACvD,CAAE/B,MAAO3M,EAAUwJ,UAAW,CAAEkF,GAAIoD,EAAKpD,SAG1C,SAAC6I,EAAD,OAAkB7N,EAAlB,EAAkBA,QAAlB,OACC,kBAAC,GAAD,CAAME,SAAU,SAAAT,GAAC,OApCF,SAAOA,EAAGoO,GAAV,iBAAAzN,EAAAC,OAAA,uDACnBZ,EAAEU,iBADiB,WAAAC,EAAA,MAEIyN,KAFJ,gBAEXvN,EAFW,EAEXA,KACRgN,EAAW,IAGP5a,EAAKN,KAAK4S,KAAOoD,EAAKD,OAAOnD,IAC/B0C,EAAa4E,OAAO,CAClBla,KAAMgW,EAAKD,OACXoE,OAAQnE,EAAKpD,GACbwH,iBAAkBL,GAClBM,mBAAoBnM,EAAKuN,cAAc7I,KAXxB,qCAoCMvE,CAAahB,EAAGoO,KACnC,kBAAC5R,GAAD,CACE6E,SAAU,SAAArB,GAAC,OAAI6N,EAAW7N,EAAEC,OAAOE,QACnCA,MAAOsI,EACPnH,YAAY,mBACZ+M,UAAWL,EACXlJ,IAAKiJ,IAGP,kBAAC9R,GAAD,CACE9J,KAAK,SACLwG,MAAO8P,EAAU,eAAiB,YAClClV,OAAO,OACPnB,MAAI,EACJ0S,IAAKgJ,EACLjZ,UAAW4T,GAAWlI,GANxB,e,wVCjFH,IAAM+N,GAAgB5X,IAAH,MAWb6X,GAAgB7X,IAAH,M,kXCA1B,IAAMuF,GAAShB,IAAOiB,OAAV,MAIG,SAAAf,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKE,OACrB,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAEvB,SAAAyH,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOlC,MAC5B,SAAAoH,GAAC,OAAKA,EAAEqT,aAAerT,EAAE9E,MAAMlC,OAAOE,SACpC,SAAA8G,GAAC,OAAIA,EAAE9E,MAAMN,QAAQlC,OAAO,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAClD,SAAAqH,GAAC,OACTA,EAAEqT,YAAF,oBAA6BrT,EAAE9E,MAAMlC,OAAOY,OAAON,MAAS,OAC1C,SAAA0G,GAAC,OACnBA,EAAEqT,YAAc,cAAgBrT,EAAE9E,MAAMlC,OAAOK,QAAQC,QAGvC,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAOL,QA8EhC+Z,GAvEA,SAAC,GAAc,IAAZ9b,EAAW,EAAXA,KAAW,EACG6M,oBAAS,GADZ,mBACpBe,EADoB,KACXuG,EADW,OAER3T,IAAVF,EAFkB,oBAElBA,KACHgV,EAAe0E,KACf6B,EAAcvb,EAAKN,KAAK+b,UAAUlB,MAAK,SAAAmB,GAAC,OAAIA,EAAEhc,OAASA,EAAK4S,MAkB5D7U,EAAY8d,EAAc,SAAW,SACrCd,EAAU,CACdb,OAAQ,CACNzM,SAAUkO,GACVjO,UAAW,CAAEqF,OAAQ/S,EAAK4S,GAAIqJ,WAAY3b,EAAKN,KAAK4S,KAEtDoI,OAAQ,CACNvN,SAAUmO,GACVlO,UAAW,CAAEkF,GAAIiJ,EAAcA,EAAYjJ,GAAK,QAIpD,OACE,kBAAC,IAAD,CACEnF,SAAUsN,EAAQhd,GAAW0P,SAC7BC,UAAW,CAAE/D,MAAM,eAAMoR,EAAQhd,GAAW2P,YAC5CgI,eAAgB,iBAAM,CACpB,CAAE7E,MAAOtM,IACT,CAAEsM,MAAO5M,EAAWyJ,UAAW,CAAE8N,WAAYlb,EAAKN,KAAK4S,KACvD,CACE/B,MAAO7M,EACP0J,UAAW,CACTqF,OAAQzS,EAAKN,KAAK4S,GAClBsJ,KAAM,EACNC,MCjFyB,IDoF7B,CAAEtL,MAAOxM,GAAUqJ,UAAW,CAAE+B,SAAUzP,EAAKyP,eAGhD,SAAAgG,GACC,OACE,kBAAC,GAAD,CACEtK,QAAS,kBAjDO,SAAMsK,GAAN,iBAAAzH,EAAAC,OAAA,uDACxBkG,GAAW,GADa,WAAAnG,EAAA,MAEDyH,KAFC,mBAEhBvH,EAFgB,EAEhBA,KAGJ5N,EAAKN,KAAK4S,KAAO5S,EAAK4S,GALF,yCAKauB,GAAW,IALxB,yBAAAnG,EAAA,MAMlBsH,EAAamF,OAAO,CACxBza,OACA0a,QAASmB,EACTzB,iBAAkBL,GAClBM,mBAAoBnM,EAAKkO,aAAelO,EAAKkO,aAAaxJ,GAAK,QAVzC,OAYxBuB,GAAW,GAZa,sCAiDDkI,CAAkB5G,IACjCvT,SAAU0L,EACViO,YAAaA,GAEZA,EAAc,YAAc,c,6hBEpFzC,IAAMpR,GAAOnC,IAAOC,IAAV,MAKmB,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QAC3C,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MACf,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQlC,OAGlCob,GAAShU,IAAOC,IAAV,MAIM,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAGjCmR,GAAWjK,IAAOC,IAAV,MAEC,SAAAC,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKG,MACrB,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAsC3Bwb,GAhCO,SAAC,GAAgB,IAAdxG,EAAa,EAAbA,OAAa,EACjBvV,IAAVF,EAD2B,oBAC3BA,KAET,OACE,kBAAC,GAAD,KACE,kBAACgc,GAAD,KACE,kBAAC7Q,GAAD,CACEmD,GAAIiE,YlCrCc,akCqCoB,CAAEpD,SAAUsG,EAAOtG,YAEzD,kBAAC,GAAD,CAAQiC,MAAOqE,EAAOrE,SAGxB,kBAAC7I,GAAD,CAASI,KAAK,KAAKC,QAAM,GACvB,kBAACuC,GAAD,CACEmD,GAAIiE,YlC5CY,akC4CsB,CACpCpD,SAAUsG,EAAOtG,YAGnB,kBAAC,GAAD,KAAWsG,EAAOvG,aAKvBlP,EAAKN,KAAK4S,KAAOmD,EAAOnD,IAAM,kBAAC,GAAD,CAAQ5S,KAAM+V,M,wxBC1CnD,IAAMyG,GAAelU,IAAOiB,OAAV,MAWZkB,GAAOnC,IAAOC,IAAV,MAGG,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQlC,OACnB,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKE,MAE1Bsb,IAKNjK,GAAWjK,IAAOC,IAAV,MACH,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOK,QAAQC,QACtB,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAGpC0b,GAAiBnU,IAAOC,IAAV,MAIL,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQ9B,MAAM,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQlC,OACzD,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MACL,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOe,KAAK,QAC5B,SAAAiG,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOhC,MACtB,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQlC,OAC3B,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAO/B,KAAKqC,QAmFrB4a,GA7EC,SAAC,GAAqC,IAAnC5G,EAAkC,EAAlCA,QAASqE,EAAyB,EAAzBA,OAAQwC,EAAiB,EAAjBA,WAAiB,EAChCnc,IAAVF,EAD0C,oBAC1CA,KACHgV,EAAe0E,KAgBrB,OACE,kBAAC,IAAD,CACEvM,SAAUqM,GACVpM,UAAW,CAAE/D,MAAO,CAAEiJ,GAAIkD,EAAQlD,KAClC8C,eAAgB,iBAAM,CACpB,CAAE7E,MAAO7M,EAAoB0J,UAAW,CAAEqF,OAAQzS,EAAKN,KAAK4S,KAC5D,CAAE/B,MAAOxM,GAAUqJ,UAAW,CAAE+B,SAAUqG,EAAQC,OAAOtG,WACzD,CAAEoB,MAAOtM,IACT,CAAEsM,MAAO5M,EAAWyJ,UAAW,CAAE8N,WAAYlb,EAAKN,KAAK4S,KACvD,CAAE/B,MAAO3M,EAAUwJ,UAAW,CAAEkF,GAAIuH,QAGrC,SAAAyC,GACC,OACE,kBAAC,GAAD,KACE,kBAACnR,GAAD,CACEmD,GAAIiE,YnCvFU,amCuFwB,CACpCpD,SAAUqG,EAAQC,OAAOtG,YAG3B,kBAAC,GAAD,CAAQiC,MAAOoE,EAAQC,OAAOrE,SAGhC,kBAAC+K,GAAD,KACG3G,EAAQC,OAAOnD,KAAOtS,EAAKN,KAAK4S,IAC/B,kBAAC4J,GAAD,CACErR,QAAS,kBAxCG,SAAMyR,GAAN,eAAA5O,EAAAC,OAAA,kEAAAD,EAAA,MACpB4O,KADoB,OAItBtc,EAAKN,KAAK4S,KAAO+J,EAAW/J,KACxB+H,EAAagC,EAAW/B,cAAcC,MAC1C,SAAAC,GAAC,OAAIA,EAAEhF,SAAWgF,EAAEhF,QAAQlD,KAAOkD,EAAQlD,MAE7C0C,EAAaiF,OAAO,CAClBC,eAAgBG,EAAW/H,MATL,qCAwCGiK,CAAoBD,KAEnC,kBAAC,GAAD,CAAW7W,MAAM,QAIrB,kBAAC8C,GAAD,CAASC,IAAI,QAEb,kBAACD,GAAD,CAASK,QAAM,EAACH,MAAM,OACpB,kBAAC0C,GAAD,CACEmD,GAAIiE,YnC3GM,amC2G4B,CACpCpD,SAAUqG,EAAQC,OAAOtG,YAG3B,kBAAC,GAAD,KAAWqG,EAAQC,OAAOvG,YAI7BsG,EAAQA,c,sYCtHvB,IAAMrL,GAAOnC,IAAOC,IAAV,MAIU,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAElB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MAKrCyb,GAAWxU,IAAOC,IAAV,MACE,SAAAC,GAAC,OAAKA,EAAEuU,YAAc,OAAS,WAIhC,SAAAvU,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MA6BrB6b,GAvBW,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAU9C,EAAb,EAAaA,OAAQwC,EAArB,EAAqBA,WAAYI,EAAjC,EAAiCA,YAAjC,OACxB,kBAAC,GAAD,CAAMA,YAAaA,GACjB,kBAAClU,GAAD,CAASC,IAAI,OAEb,kBAACgU,GAAD,CAAUC,YAAaA,GACpBE,EAAS1M,KAAI,SAAAuF,GAAO,OACnB,kBAAC,GAAD,CACEtF,IAAKsF,EAAQlD,GACbkD,QAASA,EACTqE,OAAQA,EACRwC,WAAYA,U,gVClCf,IAAMO,GAAcnZ,IAAH,MAWXoZ,GAAcpZ,IAAH,M,4FCGxB,IAAMqZ,GAAe9U,YAAOgB,GAAPhB,CAAH,MACL,SAAAE,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAmFnBkc,GA7EF,SAAC,GAAkD,IAAhDlD,EAA+C,EAA/CA,OAAQna,EAAuC,EAAvCA,KAAMsd,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAAU9T,EAAgB,EAAhBA,UAAgB,EAC/BoD,oBAAS,GADsB,mBACtDe,EADsD,KAC7CuG,EAD6C,OAG1C3T,IAAVF,EAHoD,oBAGpDA,KAEHgV,EAAe0E,KAEfwD,EAAWF,EAAMzC,MACrB,SAAA4C,GAAC,OAAIA,EAAEzd,OAASM,EAAKN,KAAK4S,IAAM6K,EAAEzH,OAASmE,KAoBvCpc,EAAYyf,EAAW,SAAW,SAClCzC,EAAU,CACdb,OAAQ,CACNzM,SAAUyP,GACVxP,UAAW,CAAEyM,SAAQpH,OAAQzS,EAAKN,KAAK4S,KAEzCoI,OAAQ,CACNvN,SAAU0P,GACVzP,UAAW,CAAEkF,GAAI4K,EAAWA,EAAS5K,GAAK,QAI9C,OACE,kBAAC,IAAD,CACEnF,SAAUsN,EAAQhd,GAAW0P,SAC7BC,UAAW,CAAE/D,MAAM,eAAMoR,EAAQhd,GAAW2P,YAC5CgI,eAAgB,iBAAM,CACpB,CAAE7E,MAAOtM,IACT,CAAEsM,MAAO5M,EAAWyJ,UAAW,CAAE8N,WAAYlb,EAAKN,KAAK4S,KACvD,CAAE/B,MAAO7M,EAAoB0J,UAAW,CAAEqF,OAAQzS,EAAKN,KAAK4S,SAG7D,SAAA6C,GACC,OACE,kBAAC2H,GAAD,CACE3T,UAAWA,GAAaA,EACxBvH,SAAU0L,EACVnO,MAAI,EACJ0L,QAAS,kBA7CO,SAAMsK,GAAN,iBAAAzH,EAAAC,OAAA,uDACxBkG,GAAW,GADa,WAAAnG,EAAA,MAEDyH,KAFC,mBAEhBvH,EAFgB,EAEhBA,KAGJ5N,EAAKN,KAAK4S,KAAO5S,EAAK4S,GALF,yCAKauB,GAAW,IALxB,yBAAAnG,EAAA,MAMlBsH,EAAamF,OAAO,CACxBza,OACAma,SACAO,QAAS8C,EACTpD,iBAAkBL,GAClBM,mBAAoBnM,EAAKwP,WAAaxP,EAAKwP,WAAW9K,GAAK,QAXrC,OAaxBuB,GAAW,GAba,sCA6CDwJ,CAAkBlI,IACjCzP,MAAOwX,GAAY,gBAEnB,kBAAC,GAAD,CAAUxX,MAAOwX,GAAY,iBAC7B,kBAAC3U,GAAD,CAASK,QAAM,EAACD,KAAK,QACpBsU,GAAY,wC,kbC/EzB,IAAM9S,GAAOnC,IAAOC,IAAV,MACgB,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QACxB,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QACpC,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAGnCyc,GAAQtV,IAAOC,IAAV,MAIM,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAGhCyc,GAAQvV,IAAOC,IAAV,MACI,SAAAC,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKE,OACpB,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MA0BxB0c,GApBU,SAAC,GAAuC,IAArC3D,EAAoC,EAApCA,OAAQwC,EAA4B,EAA5BA,WAAYoB,EAAgB,EAAhBA,UAC9C,OACE,kBAAC,GAAD,KACE,kBAACH,GAAD,KACE,kBAAC,GAAD,CAAMzD,OAAQA,EAAQna,KAAM2c,EAAYW,MAAOS,IAC/C,kBAAClV,GAAD,CAASE,MAAM,OACf,kBAAC,GAAD,OAGF,kBAAC8U,GAAD,KAAQE,EAAUnO,OAAlB,Y,6lDCpBN,IAAMnF,GAAOnC,IAAOC,IAAV,MAEE,SAAAC,GAAC,OAAKA,EAAEuU,aAAevU,EAAE9E,MAAMN,QAAQ9B,MACnC,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMR,QAAQ9B,MAClB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOlC,MAC1B,SAAAoH,GAAC,OAAKA,EAAEuU,YAAcvU,EAAE9E,MAAMH,OAAOhC,GAAK,aAIhC,SAAAiH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MAKrCgH,GAAYC,IAAOC,IAAV,MACC,SAAAC,GAAC,OAAKA,EAAEuU,YAAc,QAAU,UAChC,SAAAvU,GAAC,OAAKA,EAAEuU,YAAc,OAAS,aAEzB,SAAAvU,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAInB,SAAA8G,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MACrB,SAAAmH,GAAC,OAAKA,EAAEuU,YAAc,MAAQ,YAClC,SAAAvU,GAAC,OAAKA,EAAEuU,YAAc,QAAU,UAK5CiB,GAAO1V,IAAOC,IAAV,MAGO,SAAAC,GAAC,OAAKA,EAAEuU,YAAc,SAAW,gBAE5B,SAAAvU,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOC,SAGnB,SAAA+G,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MAG7B,SAAAmH,GAAC,OAAKA,EAAEuU,YAAc,QAAU,UAIxCxL,GAAQjJ,IAAOkJ,IAAV,MAGA,SAAAhJ,GAAC,OAAKA,EAAEuU,aAAe,UAClB,SAAAvU,GAAC,OAAKA,EAAEuU,YAAc,QAAU,UAG1CkB,GAAQ3V,IAAOC,IAAV,MAMW,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAEnB,SAAA8G,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MAC9B,SAAAmH,GAAC,OAAKA,EAAEuU,YAAc,QAAU,UAKvCmB,GAAa5V,IAAOC,IAAV,MAQV4V,GAAQ7V,IAAOC,IAAV,MACI,SAAAC,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKG,MACT,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAOvB,SAC3C,SAAA2H,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAO5Bid,GAAY,SAAC,GAAqC,IAAnCxL,EAAkC,EAAlCA,GAAIyL,EAA8B,EAA9BA,WAAYtB,EAAkB,EAAlBA,YACnC,OACE,kBAAC,IAAD,CAAOlM,MAAO3M,EAAUwJ,UAAW,CAAEkF,QAClC,YAA+B,IAA5B1E,EAA2B,EAA3BA,KAAMN,EAAqB,EAArBA,QAAS1O,EAAY,EAAZA,MACjB,GAAI0O,EAAS,OAAO,kBAACrC,GAAD,CAASzC,IAAI,OACjC,GAAI5J,EAAO,OAAO,kBAAC,GAAD,MAElB,IAAM8W,EAAO9H,EAAKoQ,QAElB,OACE,kBAAC,GAAD,CAAMvB,YAAaA,GACjB,kBAAC,GAAD,CACE5N,MAAO6G,EAAK7G,MAAQ6G,EAAK7G,MAAlB,UAA6B6G,EAAKD,OAAOtG,SAAzC,aAGR4O,GACC,kBAACH,GAAD,CAAY/S,QAASkT,GACnB,kBAAC,GAAD,CAAWtY,MAAM,KAAKC,MAAM,WAIhC,kBAAC,GAAD,CAAW+W,YAAaA,GACtB,kBAACiB,GAAD,CAAMjB,YAAaA,GACjB,kBAAC,GAAD,CAAOpL,IAAKqE,EAAKtE,MAAOqL,YAAaA,KAGvC,kBAACkB,GAAD,CAAOlB,YAAaA,GAClB,kBAAClU,GAAD,KACE,kBAAC,GAAD,CAAekN,OAAQC,EAAKD,SAE3BC,EAAK7G,OAAS,kBAACgP,GAAD,KAAQnI,EAAK7G,OAE5B,kBAAC,GAAD,CACE4N,YAAaA,EACbE,SAAUjH,EAAKiH,SACf9C,OAAQnE,EAAKpD,GACb+J,WAAY3G,EAAKD,UAIrB,kBAAClN,GAAD,KACE,kBAAC,GAAD,CACEsR,OAAQnE,EAAKpD,GACb+J,WAAY3G,EAAKD,OACjBgI,UAAW/H,EAAKsH,QAGlB,kBAAC,GAAD,CAAetH,KAAMA,YAiBvCoI,GAAUhT,aAAe,CACvB2R,aAAa,GAGAtQ,mBAAW2R,I,gUCnK1B,IAAM3T,GAAOnC,IAAOC,IAAV,MAEY,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAC7B,SAAA8G,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MACf,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOlC,MAC1B,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMH,OAAOnC,MAG3Bmd,GAAkBjW,IAAOC,IAAV,MASfiW,GAAU,SAAC,GAAD,IAAGrP,EAAH,EAAGA,MAAOsP,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,WAAYC,EAAtC,EAAsCA,OAAtC,OACd,kBAAC,GAAD,KACE,6BAAMzP,GAEN,kBAACtG,GAAD,CAASC,IAAI,OAEb,kBAACyV,GAAD,KACE,kBAACjV,GAAD,CAAQ6B,QAASsT,GAAWE,GAE5B,kBAAC9V,GAAD,CAASI,KAAK,MACZ,kBAACK,GAAD,CAAQtD,MAAM,MAAMmF,QAASuT,GAC1BE,OAeXJ,GAAQpT,aAAe,CACrB+D,MAAO,0CACPwP,WAAY,SACZC,OAAQ,UAGKJ,U,iVChDf,IAAM/T,GAAOnC,IAAOC,IAAV,MAED,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAIjB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMH,OAAOjC,MAMV,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MA4B5Bwd,GAnBD,SAAC,GAAsD,IAApDjU,EAAmD,EAAnDA,SAAUkU,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,QAASvf,EAA0B,EAA1BA,KAASwf,EAAiB,qDAClE,OAAKF,EAGH,kBAAC,GAAD,KACE,kBAAC1V,GAAD,CAAS+B,QAAS4T,IAER,YAATvf,EAAqB,kBAAC,GAAYwf,GAAiBpU,GANtC,M,umBCjBpB,IAAMH,GAAOnC,IAAOC,IAAV,MAIY,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SACvB,SAAA8G,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOlC,MAC1B,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMH,OAAOjC,MACjB,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMR,QAAQ3B,MAG/B0d,GAAa3W,IAAOC,IAAV,MACH,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAI5Bgc,GAAe9U,YAAOgB,GAAPhB,CAAH,MACL,SAAAE,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAER,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QAO7B,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOe,KAAK,QACpC,SAAAiG,GAAC,OAAIA,EAAE9E,MAAMlC,OAAO/B,KAAKoC,WAwDvBqd,GAjDQ,SAAC,GAAiD,IAA/C/E,EAA8C,EAA9CA,OAAQpE,EAAsC,EAAtCA,OAAQoJ,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WAAiB,EACnD5e,IAAVF,EAD6D,oBAC7DA,KAgBT,OACE,kBAAC,GAAD,KACGA,EAAKN,KAAK4S,KAAOmD,EAAOnD,IACvB,kBAACqM,GAAD,KACE,kBAAC,GAAD,CAAQjf,KAAM+V,KAIlB,kBAAC,GAAD,CAActM,WAAS,EAAChK,MAAI,EAAC0L,QAtBT,WACtB,IACEkU,UAAUC,UAAUC,UAApB,UACKC,iCADL,OAC0C3M,YAAaC,GAAa,CAChEF,GAAIuH,MAGR,MAAOjb,GACP+a,QAAQ/a,MAAM,sCAAuCA,GAGvDigB,MAWE,aAIC7e,EAAKN,KAAK4S,KAAOmD,EAAOnD,IACvB,kBAAC,GAAD,CAAcnJ,WAAS,EAAChK,MAAI,EAAC0L,QAASiU,GAAtC,eAKF,kBAAC,GAAD,CAAc3V,WAAS,EAAC0B,QAASgU,EAAa1f,MAAI,GAAlD,Y,i8DChDN,IAAMgL,GAAOnC,IAAOC,IAAV,MAES,SAAAC,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOlC,MACnB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MACnB,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SACpB,SAAA8G,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QAG3C2d,GAASnX,IAAOC,IAAV,MAKC,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAAM,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAGvDgW,GAAY9O,IAAOC,IAAV,MACA,SAAAC,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKE,OAC3B,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAO/B,KAAK0C,QACP,SAAAqG,GAAC,OAAIA,EAAE9E,MAAMlC,OAAO/B,KAAKwC,aAKhDqa,GAAShU,YAAOmD,GAAPnD,CAAH,MAMNgK,GAAOhK,IAAO8P,KAAV,MACK,SAAA5P,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKG,MACrB,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAC/B,SAAAyH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOK,QAAQC,QAGjC4d,GAASpX,IAAOkJ,IAAV,MAMO,SAAAhJ,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAGlCue,GAAYrX,IAAOC,IAAV,MAITqX,GAAgBtX,IAAOC,IAAV,MACJ,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAG9Byc,GAAQvV,IAAOC,IAAV,MAKS,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAC1B,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKG,MAC3B,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAO/B,KAAKwC,aAG9B2b,GAAQtV,IAAOC,IAAV,MAKe,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QAG/Cgb,GAAWxU,IAAOC,IAAV,MACC,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAG9Bgc,GAAe9U,YAAOgB,GAAPhB,CAAH,MAGH,SAAAE,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKE,OAGhC2e,GAAcvX,IAAOC,IAAV,MAES,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QAyKtC8S,gBAnKE,SAAC,GAWX,IAVLmB,EAUI,EAVJA,OACA+J,EASI,EATJA,cACA7C,EAQI,EARJA,SACA9N,EAOI,EAPJA,MACA4Q,EAMI,EANJA,UACArO,EAKI,EALJA,MACA4L,EAII,EAJJA,MACAnD,EAGI,EAHJA,OACA6F,EAEI,EAFJA,UACApM,EACI,EADJA,OACI,EACepT,IAAVF,EADL,oBACKA,KADL,EAEsCuM,oBAAS,GAF/C,mBAEGoT,EAFH,KAEkBC,EAFlB,OAGoCrT,oBAAS,GAH7C,mBAGGsT,EAHH,KAGiBC,EAHjB,KAaEjB,EAAc,kBAAMiB,GAAgB,IAkC1C,OACE,oCACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOrB,QAASI,EAAaL,KAAMqB,GACjC,kBAAC,GAAD,CACEhG,OAAQA,EACRgF,YAAaA,EACbpJ,OAAQA,EACRqJ,WAtCS,oBAAApR,EAAAC,OAAA,2EAAAD,EAAA,MAET4F,EAAO6B,OAAO,CAClBhI,SAAUtJ,EACVuJ,UAAW,CAAE/D,MAAO,CAAEiJ,GAAIuH,EAAQ2F,kBAClCpK,eAAgB,iBAAM,CACpB,CACE7E,MAAO7M,EACP0J,UAAW,CACTqF,OAAQzS,EAAKN,KAAK4S,GAClBsJ,KAAM,EACNC,MX5JuB,IW+J3B,CAAEtL,MAAOtM,IACT,CACEsM,MAAOvM,GACPoJ,UAAW,CACT+B,SAAUnP,EAAKN,KAAKyP,SACpByM,KAAM,EACNC,MX7J0B,SWyInB,6DA2BjBiE,GAAgB,GA3BC,2DA0Cb,kBAACX,GAAD,KACE,kBAAC,GAAD,CACE7Q,GAAIiE,Y5CvLY,a4CuLsB,CACpCpD,SAAUsG,EAAOtG,YAGnB,kBAAC,GAAD,CAAQiC,MAAOqE,EAAOrE,QAEtB,kBAAC7I,GAAD,CAASI,KAAK,MACZ,kBAAC,GAAD,KAAO8M,EAAOvG,UACd,kBAAC,GAAD,KAAY8G,GAAQyJ,MAIxB,kBAACzW,GAAD,CAAQE,OAAK,EAAC2B,QA1DH,kBAAMiV,GAAgB,KA2D/B,kBAAC,GAAD,QAIJ,kBAACvX,GAAD,CAASI,KAAK,KAAKD,OAAO,KAAKF,IAAI,MACjC,kBAACoD,GAAD,KAAKiD,IAGNuC,GAAS,kBAACgO,GAAD,CAAQ/N,IAAKD,EAAOvG,QAAS6U,IAEvC,kBAACL,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,KACGtC,EAAM1N,OADT,SAEE,kBAAC/G,GAAD,MACA,kBAAC,GAAD,CAAcsC,QAhFJ,WACpB+U,GAAkBD,IA+E8BxgB,MAAI,GACvCwd,EAASrN,OADZ,cAKF,kBAAC,GAAD,KACE,kBAAC,GAAD,CACEnG,WAAS,EACT8T,UAAQ,EACRvd,KAAM+V,EACNoE,OAAQA,EACRmD,MAAOA,IAGT,kBAAChU,GAAD,CAAQG,WAAS,EAAChK,MAAI,EAAC0L,QAlGP,WAC1B+U,GAAiB,KAkGL,kBAAC,GAAD,MADF,IACsB,kBAACrX,GAAD,CAASK,QAAM,EAACD,KAAK,QAD3C,IACoD,yCAKvDgX,GACC,oCACE,kBAACpX,GAAD,CAASC,IAAI,MACX,kBAAC+W,GAAD,MACA,kBAAC,GAAD,CACE7J,KAAM,CAAEpD,GAAIuH,EAAQpE,UACpBkF,MAAOgF,KAIVhD,EAASrN,OAAS,GAAK,kBAACiQ,GAAD,MAExB,kBAAC,GAAD,KACG5C,EAAS1M,KAAI,SAAAuF,GAAO,OACnB,kBAAC,GAAD,CACEtF,IAAKsF,EAAQlD,GACbkD,QAASA,EACTqE,OAAQA,EACRwC,WAAY5G,e,mBC5P1BsK,GAAiB,SAAC,GAOjB,IANLnS,EAMI,EANJA,KACAoS,EAKI,EALJA,QACAC,EAII,EAJJA,UACA7S,EAGI,EAHJA,UACA8S,EAEI,EAFJA,MACA5V,EACI,EADJA,SAEM6V,EAAeC,mBACnB,kBAAM,kCAAA1S,EAAAC,OAAA,mDACE0S,EAAW,WACf,OAAOJ,EAAU,CACf7S,UAAU,eAAMA,EAAP,CAAkBwO,KAAMhO,EAAK0B,SACtCgR,YAAa,SAACC,EAAD,GAAgC,IAAvBC,EAAsB,EAAtBA,gBACdC,EAAeta,eAAIoa,EAAMP,GACzBU,EAAgBva,eAAIqa,EAAiBR,GAC3C,OAAOW,eACLJ,EACAP,EACAY,kBAAO,GAAD,mBAAKH,GAAL,YAAsBC,IAAgB,WAM9CG,EAAeC,OAAOC,YACtBC,EAAYpO,SAASqO,gBAAgBD,UACrCE,EAAetO,SAASqO,gBAAgBC,aACxCC,EACJN,EAAeG,EAAYE,EAAeA,EAAe,IAGvDtT,EAAK0B,QAAU4Q,GAvBf,uBAwBFY,OAAO/N,oBAAoB,SAAUoN,GAxBnC,0BA6BAgB,IACFL,OAAO/N,oBAAoB,SAAUoN,GACrCE,KA/BE,wCAkCN,CAACH,EAAOtS,EAAK0B,OAAQ0Q,EAASC,EAAW7S,IAY3C,OATA5C,qBACE,WAGE,OAFAsW,OAAOjO,iBAAiB,SAAUsN,GAE3B,kBAAMW,OAAO/N,oBAAoB,SAAUoN,MAEpD,CAACA,IAGI7V,EAASsD,IAGlBmS,GAAeqB,UAAY,CACzBxT,KAAMyT,KAAUC,MAAMC,WACtBvB,QAASqB,KAAUG,OAAOD,WAC1BrB,MAAOmB,KAAUI,OAAOF,WACxBtB,UAAWoB,KAAUK,KAAKH,WAC1BnU,UAAWiU,KAAUM,OAAOJ,WAC5BjX,SAAU+W,KAAUK,KAAKH,YAGZxB,U,gQCtEf,IAAMhY,GAAYC,IAAOC,IAAV,MACJ,SAAAC,GAAC,OAAIA,EAAEzC,OAAF,UAAcyC,EAAEzC,MAAhB,SACJ,SAAAyC,GAAC,OAAIA,EAAEd,QAAF,UAAec,EAAEd,OAAjB,SACJ,SAAAc,GAAC,OAAIA,EAAEU,QAAF,kBACF,SAAAV,GAAC,OAAIA,EAAE9E,MAAMN,QAAQoF,EAAEM,QACtB,SAAAN,GAAC,OAAIA,EAAE9E,MAAMN,QAAQoF,EAAES,SACtB,SAAAT,GAAC,OAAIA,EAAE9E,MAAMN,QAAQoF,EAAEO,UACtB,SAAAP,GAAC,OAAIA,EAAE9E,MAAMN,QAAQoF,EAAEQ,WACpB,SAAAR,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOe,KAAK,QAC5B,SAAAiG,GAAC,OAChBA,EAAElF,OAASkF,EAAE9E,MAAMJ,OAAOkF,EAAElF,QAAUkF,EAAE9E,MAAMJ,OAAOlC,MAMnD8gB,GAAW,SAAC,GAUX,IATL1B,EASI,EATJA,MACAza,EAQI,EARJA,MACA2B,EAOI,EAPJA,OACAwB,EAMI,EANJA,OACAJ,EAKI,EALJA,IACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,KACA3F,EACI,EADJA,OAsBA,OApBqB,WAEnB,IADA,IAAI6e,EAAW,GACNC,EAAI,EAAGA,EAAI5B,EAAO4B,IACzBD,EAAS/T,KACP,kBAAC,GAAD,CACEoC,IAAK4R,EACLtZ,IAAKA,EACLG,KAAMA,EACNF,MAAOA,EACPhD,MAAOA,EACP2B,OAAQA,EACRwB,OAAQA,EACRF,OAAQA,EACR1F,OAAQA,KAId,OAAO6e,EAGFE,IAcTH,GAAS9W,aAAe,CACtBoV,MAAO,GAGM0B,U,+bC9Df,IAAMrQ,GAAQvJ,IAAOqB,MAAV,MAIL2Y,GAAQha,IAAOia,MAAV,MAOM,SAAA/Z,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKE,OAAOG,QACvB,SAAAyH,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOhC,MACjB,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOe,KAAK,QAChC,SAAAiG,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKE,OAGd,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOe,KAAK,QA8BlCigB,GAvBS,SAAC,GAAD,IAAGpV,EAAH,EAAGA,aAAcmV,EAAjB,EAAiBA,MAAjB,OACtB,oCACE,kBAAC,GAAD,CACEhV,KAAK,QACLmB,SAAUtB,EACV5N,KAAK,OACLoT,GAAG,aACH6P,OAAO,2BAGT,kBAACH,GAAD,CAAOI,QAAQ,cACb,kBAAC,GAAD,MAECH,GAAS,kBAAC1Z,GAAD,CAASI,KAAK,MAAMsZ,MCrCvBI,GAAmB,WAAO,IAAD,EACfniB,IAAZqK,EAD2B,oBAG9B+X,EAAiB,SAACnjB,EAAMojB,EAAanjB,GACzCmL,EAAS,CACPrL,KrFTqB,cqFUrBM,QAAS,CACPN,KAAMqjB,EACNpjB,KAAMA,EACNC,gBAiBN,MAAO,CAAEiC,QAZO,SAAClC,EAAMC,GAAP,OACdkjB,EAAenjB,EAAMsK,GAAYE,QAASvK,IAW1B4C,KATL,SAAC7C,EAAMC,GAAP,OACXkjB,EAAenjB,EAAMsK,GAAYG,KAAMxK,IAQjB2C,QANR,SAAC5C,EAAMC,GAAP,OACdkjB,EAAenjB,EAAMsK,GAAYI,QAASzK,IAKXR,MAHnB,SAACO,EAAMC,GAAP,OACZkjB,EAAenjB,EAAMsK,GAAYK,MAAO1K,M,qrCCT5C,IAAM+K,GAAOnC,YAAOD,GAAPC,CAAH,MAEY,SAAAE,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QAG3CiW,GAAUzP,IAAOC,IAAV,MAIA,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAG5ByI,GAAWvB,IAAOwB,SAAV,MAEA,SAAAtB,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MACjB,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MACtB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAK1B,SAAAqH,GAAC,OAAKA,EAAEyS,MAAQ,OAAS,UACtB,SAAAzS,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKG,MAChB,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOe,KAAK,QAC5B,SAAAiG,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOjC,MAGjCyhB,GAAwBxa,IAAOC,IAAV,MAKX,SAAAC,GAAC,OAAIA,EAAE9E,MAAMR,QAAQ9B,MAG/B2hB,GAAeza,IAAOkJ,IAAV,MAMZwR,GAAU1a,IAAOC,IAAV,MAIa,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QACxC,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAG5B6hB,GAAU3a,IAAOC,IAAV,MAyJE2a,GAjJI,WAAO,IAAD,EACJ1iB,IAAVF,EADc,oBACdA,KADc,EAEGuM,mBAAS,IAFZ,mBAEhBsC,EAFgB,KAETgU,EAFS,OAGGtW,mBAAS,IAHZ,mBAGhB6E,EAHgB,KAGT0R,EAHS,OAIWvW,oBAAS,GAJpB,mBAIhBwW,EAJgB,KAILC,EAJK,OAKGzW,mBAAS,IALZ,mBAKhB3N,EALgB,KAKTgO,EALS,KAOjB7M,EAAUsiB,KAEVY,EAAc,WAClBJ,EAAS,IACTC,EAAS,IACTE,GAAa,GACbpW,EAAS,KAGLsW,EAAgB,kBAAMF,GAAa,IAEnCG,EAAwB,SAAApW,GAC5B,IAAMqW,EAAOrW,EAAEC,OAAOqW,MAAM,GAEvBD,IAEDA,EAAK1iB,MClGsB,IDmG7BX,EAAQnB,MAAR,wCACmC0kB,EADnC,QAMFR,EAASM,GAETJ,GAAa,GACbjW,EAAEC,OAAOE,MAAQ,QAGbqW,EAAoB,SAAAxW,GAAC,OAAI8V,EAAS9V,EAAEC,OAAOE,QAQjD,OACE,kBAAC,IAAD,CACEC,SAAU3J,EACV4J,UAAW,CAAE/D,MAAO,CAAEwF,QAAOuC,QAAO4I,SAAUha,EAAKN,KAAK4S,KACxD8C,eAAgB,iBAAM,CACpB,CACE7E,MAAO7M,EACP0J,UAAW,CACTqF,OAAQzS,EAAKN,KAAK4S,GAClBsJ,KAAM,EACNC,MhBjIyB,IgBoI7B,CAAEtL,MAAOtM,IACT,CACEsM,MAAOvM,GACPoJ,UAAW,CACT+B,SAAUnP,EAAKN,KAAKyP,SACpByM,KAAM,EACNC,MhBlI4B,QgBuIjC,SAAC2H,EAAD,GAA+C,IAAhClW,EAA+B,EAA/BA,QAAgBC,EAAe,EAAtB3O,MACjB6kB,EAAkBnW,IAAaA,IAAY8D,IAAUvC,EAE3D,OACE,oCACGkU,GAAa,kBAACja,GAAD,CAAS+B,QAASoY,IAEhC,kBAAC,GAAD,CACEhgB,OAAQ8f,EAAY,KAAO,KAC3Brd,MAAM,QACN1C,OAAO,KACPqF,QAAQ,MAER,0BAAMmF,SAAU,SAAAT,GAAC,OA3CR,SAAOA,EAAGyW,GAAV,SAAA9V,EAAAC,OAAA,gDACnBZ,EAAEU,iBACF+V,IACAP,IAHmB,qCA2CYlV,CAAahB,EAAGyW,KACnC,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAQpS,MAAOpR,EAAKN,KAAK0R,MAAO1Q,KAAM,KAEtC,kBAAC,GAAD,CACExB,KAAK,WACL+N,KAAK,QACL0N,MAAOoI,EACP7V,MAAO2B,EACP8C,QAASuR,EACT9U,SAAUmV,EACVlV,YAAY,gBAGZ0U,GACA,kBAAC,GAAD,CAAiBjW,aAAcqW,KAIlC/R,GACC,kBAAC7I,GAAD,CAASG,OAAO,MACd,kBAAC8Z,GAAD,KACE,kBAACC,GAAD,CAAcpR,IAAKqS,IAAIC,gBAAgBvS,OAK5C2R,GACC,kBAACL,GAAD,KACE,kBAAC,GAAD,CACET,MAAM,QACNnV,aAAcqW,IAGhB,kBAACR,GAAD,KACE,kBAAC3Z,GAAD,CAAQ7J,MAAI,EAACD,KAAK,SAAS2L,QAASoY,GAApC,UAGA,kBAACja,GAAD,CAAQpH,SAAU6hB,EAAiBvkB,KAAK,UAAxC,WAOLqO,GACE3O,GACC,kBAAC2J,GAAD,CAASC,IAAI,KAAKE,OAAO,MACvB,kBAAC2C,GAAD,CAAO3K,KAAK,MACT6M,EACG,0CACA3O,W,sTE3L5B,IAAM+W,GAAQ3N,IAAOC,IAAV,MACE,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MACZ,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QAC9B,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOlC,MACvB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQ9B,MACf,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAGpC0Q,GAAU9J,YAAOmD,GAAPnD,CAAH,MAEI,SAAAE,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAsH3BmjB,GAhHF,WAAO,IAAD,EACE1jB,IAAVF,EADQ,oBACRA,KADQ,EAEqBuM,mBAAS,MAF9B,mBAEVsX,EAFU,KAEGC,EAFH,KAIX/F,EAAa,WACjB+C,OAAO1U,QAAQ2X,UAAU,GAAI,GAAI,KACjCD,EAAe,OAQX1W,EAAY,CAChBqF,OAAQzS,EAAKN,KAAK4S,GAClBsJ,KAAM,EACNC,MlBrDiC,GkBwDnC,OACE,kBAAC9T,GAAD,CAAWK,SAAS,MAClB,kBAAC,GAAD,MAEA,kBAACG,GAAD,CAASC,IAAI,OAEb,kBAAC,GAAD,MAEA,kBAAC,IAAD,CACE+H,MAAO7M,EACP0J,UAAWA,EACX4W,6BAA2B,IAE1B,YAAkD,IAA/CpW,EAA8C,EAA9CA,KAAMN,EAAwC,EAAxCA,QAAS2S,EAA+B,EAA/BA,UAAWgE,EAAoB,EAApBA,cAC5B,GAAI3W,GAA6B,IAAlB2W,EACb,OACE,kBAAC,GAAD,CACE7c,OAAQ,IACRsB,OAAO,KACPF,IAAI,KACJ0X,MlB5EqB,IkBqEqB,MAYvBtS,EAAKsW,iBAAtBC,EAZwC,EAYxCA,MAAOjE,EAZiC,EAYjCA,MAEf,OAAKiE,EAAM7U,OAeT,kBAAC,GAAD,CACE1B,KAAMuW,EACNnE,QAAQ,yBACRE,MAAO9J,SAAS8J,GAChB9S,UAAWA,EACX6S,UAAWA,IAEV,SAAArS,GACC,IAAMwW,EACJ9W,GAA6B,IAAlB2W,GAAuB/D,IAAUtS,EAAK0B,OAEnD,OACE,kBAAC,WAAD,KACG1B,EAAKqC,KAAI,SAAAyF,GAAI,OACZ,kBAAC,WAAD,CAAUxF,IAAKwF,EAAKpD,IAClB,kBAAC,GAAD,CACEkM,KAAMqF,IAAgBnO,EAAKpD,GAC3BmM,QAASV,GAET,kBAAC,GAAD,CAAWzL,GAAIoD,EAAKpD,GAAIyL,WAAYA,KAGtC,kBAACxV,GAAD,CAASG,OAAO,KAAKF,IAAI,MACvB,kBAAC,GAAD,CACEiN,OAAQC,EAAKD,OACb+J,cAAe9J,EAAK8J,cACpB3F,OAAQnE,EAAKpD,GACbqK,SAAUjH,EAAKiH,SACf8C,UAAW/J,EAAK+J,UAChB5Q,MAAO6G,EAAK7G,MACZuC,MAAOsE,EAAKtE,MACZ4L,MAAOtH,EAAKsH,MACZ0C,UAAW,kBArFnB7F,EAqFmCnE,EAAKpD,GApFxDwO,OAAO1U,QAAQ2X,UAAU,GAAI,GAAIxR,YAAaC,GAAa,CAAEF,GAAIuH,UACjEiK,EAAejK,GAFC,IAAAA,UA2FCuK,GAAmB,kBAACnZ,GAAD,CAASzC,IAAI,WAnDvC,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAS8F,GAAIiE,YnD9EN,amD8EP,qBAEW,IAHb,KAIK,IACH,kBAAC,GAAD,CAASjE,GAAIiE,YnDhFP,YmDgFN,yB,g7BC7EhB,IAAMhB,GAAQvJ,IAAOqB,MAAV,MAILP,GAAUd,IAAOC,IAAV,MAYF,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAKzB4gB,GAAQha,IAAOia,MAAV,MAMC,SAAA/Z,GAAC,OAAIA,EAAEmc,UAAY,aAET,SAAAnc,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QAC3B,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,QAE9B0H,IAMNmI,GAAQjJ,IAAOkJ,IAAV,MAkGIoD,gBAzFY,SAAC,GAMrB,IALL7B,EAKI,EALJA,OACArB,EAII,EAJJA,MACAoO,EAGI,EAHJA,cAEAlM,GACI,EAFJnE,SAEI,EADJmE,QACI,EACepT,IAAVF,EADL,oBACKA,KADL,EAG0BuM,oBAAS,GAHnC,mBAGGe,EAHH,KAGYuG,EAHZ,KAKE9T,EAAUsiB,KAgDVgC,EAAWrkB,EAAKN,KAAK4S,KAAOG,EAElC,OACE,oCACG4R,GACC,kBAAC,GAAD,CACEpX,KAAK,QACL/N,KAAK,OACLoT,GAAG,QACH6P,OAAO,yBACP/T,SAxDkB,SAAMrB,GAAN,eAAAW,EAAAC,OAAA,mDACxBkG,GAAW,GAELuP,EAAOrW,EAAEC,OAAOqW,MAAM,GAC5BtW,EAAEC,OAAOE,MAAQ,GAEZkW,EANmB,sDAQpBA,EAAK1iB,MF7E8B,KEqEf,uBAStBmT,GAAW,GACX9T,EAAQnB,MAAR,wCACmC0lB,EADnC,OAVsB,sDAAA5W,EAAA,MAkBhB4F,EAAO6B,OAAO,CAClBhI,SAAU/I,GACVgJ,UAAW,CAAE/D,MAAO,CAAEiJ,GAAItS,EAAKN,KAAK4S,GAAIlB,MAAOgS,EAAM5D,kBACrDpK,eAAgB,iBAAM,CACpB,CAAE7E,MAAO7M,EAAoB0J,UAAW,CAAEqF,OAAQzS,EAAKN,KAAK4S,KAC5D,CAAE/B,MAAOtM,IACT,CAAEsM,MAAOxM,GAAUqJ,UAAW,CAAE+B,SAAUnP,EAAKN,KAAKyP,gBAxBlC,0DA4BtBpP,EAAQnB,MAAM,KAAIqP,cAAc,GAAGlO,SA5Bb,QA+BxB8T,GAAW,GA/Ba,4DA4DtB,kBAAC,GAAD,CAAOwQ,SAAUA,EAAUjC,QAAQ,SAChCiC,GAAY,kBAAC,GAAD,KAAUjT,EAAQ,SAAW,UA1B1C9D,EACK,kBAACrC,GAAD,CAASzC,IAAI,OAGf4I,EACL,kBAAC,GAAD,CAAOC,IAAKD,EAAOmT,IAAI,UAAUpC,OAAO,2BAExC,kBAAC,GAAD,CAAU1c,MAAM,a,s0BCpGtB,IAAM0E,GAAOnC,IAAOC,IAAV,MAIgB,SAAAC,GAAC,OAAKA,EAAEkJ,MAAQlJ,EAAEkJ,MAAQoT,QAGrB,SAAAtc,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOjC,MACnB,SAAAmH,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOjC,MACpC,SAAAmH,GAAC,OAAIA,EAAE9E,MAAMR,QAAQ9B,MAG/ByQ,GAAQvJ,IAAOqB,MAAV,MAIL2Y,GAAQha,IAAOia,MAAV,MAOD,SAAA/Z,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MACtB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MACjB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQlC,OAAO,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAC3C,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOlC,MA4FxBwT,gBAhFY,SAAC,GAKrB,IAJLhB,EAII,EAJJA,OACAmR,EAGI,EAHJA,mBACAC,EAEI,EAFJA,WACAjS,EACI,EADJA,OACI,EACevS,IAAVF,EADL,oBACKA,KADL,EAG0BuM,oBAAS,GAHnC,mBAGGe,EAHH,KAGYuG,EAHZ,KAKE9T,EAAUsiB,KA0ChB,OACE,kBAAC,GAAD,CAAMjR,MAAOsT,GACX,kBAAC,GAAD,CACEzX,KAAK,aACL/N,KAAK,OACLoT,GAAG,aACHlE,SA9CoB,SAAMrB,GAAN,eAAAW,EAAAC,OAAA,mDACxBkG,GAAW,GAELuP,EAAOrW,EAAEC,OAAOqW,MAAM,GAC5BtW,EAAEC,OAAOE,MAAQ,GAEZkW,EANmB,sDAQpBA,EAAK1iB,MHvE4B,KG+Db,uBAStBX,EAAQnB,MAAR,wCACmC+lB,EADnC,OAGA9Q,GAAW,GAZW,sDAAAnG,EAAA,MAiBhB4F,EAAO6B,OAAO,CAClBhI,SAAU/I,GACVgJ,UAAW,CACT/D,MAAO,CACLiJ,GAAItS,EAAKN,KAAK4S,GACdlB,MAAOgS,EACP5D,cAAeiF,EACfG,SAAS,IAGbxP,eAAgB,iBAAM,CACpB,CAAE7E,MAAO7M,EAAoB0J,UAAW,CAAEqF,OAAQzS,EAAKN,KAAK4S,KAC5D,CAAE/B,MAAOtM,IACT,CAAEsM,MAAOxM,GAAUqJ,UAAW,CAAE+B,SAAUnP,EAAKN,KAAKyP,gBA9BlC,0DAkCtBpP,EAAQnB,MAAM,KAAIqP,cAAc,GAAGlO,SAlCb,QAqCxB8T,GAAW,GArCa,0DA+CpBsO,OAAO,2BAGR7U,GAAW,kBAACrC,GAAD,CAASzC,IAAI,KAAK9H,KAAK,OAElCV,EAAKN,KAAK4S,KAAOG,GAChB,kBAAC,GAAD,CAAO2P,QAAQ,cACb,kBAAC,GAAD,CAAiB3c,MAAM,KAAKC,MAAM,e,i5CCzG5C,IAAMyE,GAAOnC,IAAOC,IAAV,MAMJ4c,GAAe7c,IAAOC,IAAV,MAOZ2O,GAAW5O,IAAOC,IAAV,MAIE,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,KAGjC0K,IACa,SAAAtD,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKM,MAGjB,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,KACrCyK,IACa,SAAAtD,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKO,MAKpC6jB,GAAmB9c,IAAOC,IAAV,MAIL,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAGhCuJ,GAAUrC,YAAOoD,IAAPpD,CAAH,MAEE,SAAAE,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKG,MAGhCkkB,GAAS/c,IAAOC,IAAV,MAGU,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOG,WACzB,SAAA6G,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAIhC6V,GAAO3O,IAAOC,IAAV,MAIK,SAAAC,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKG,MACtB,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAG/B0X,GAAOxQ,IAAOC,IAAV,MACK,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MACzB,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOe,KAAK,QAGb,SAAAiG,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MAC1B,SAAAmH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQ9B,MAwEvBgkB,GAjEK,SAAC,GAAc,IAAZtlB,EAAW,EAAXA,KAAW,EACbQ,IAAVF,EADuB,oBACvBA,KADuB,EAGNilB,YAAgBrgB,GAA6B,CACrEwI,UAAW,CAAE8N,WAAYlb,EAAKN,KAAK4S,GAAIG,OAAQ/S,EAAK4S,MAD9C1E,EAHwB,EAGxBA,KAAMN,EAHkB,EAGlBA,QAIV4X,EAAexlB,EAAKylB,SAKxB,OAJK7X,GAAWM,IACdsX,EAAetX,EAAKsX,aAAaC,UAIjC,kBAAC,GAAD,KACE,kBAAC,GAAD,CACE1S,OAAQ/S,EAAK4S,GACboS,WAAYhlB,EAAKglB,WACjBD,mBAAoB/kB,EAAK+kB,qBAG3B,kBAACI,GAAD,KACE,kBAAC,GAAD,CACEpS,OAAQ/S,EAAK4S,GACblB,MAAO1R,EAAK0R,MACZoO,cAAe9f,EAAK8f,cACpBrQ,SAAUzP,EAAKyP,WAGjB,kBAAC,GAAD,KACE,kBAAC3D,GAAD,KAAK9L,EAAKwP,UAETgW,GAAgBllB,EAAKN,KAAK4S,KAAO5S,EAAK4S,IAAM,kBAACyS,GAAD,MAE5C/kB,EAAKN,KAAK4S,KAAO5S,EAAK4S,IACrB,kBAACwS,GAAD,KACE,kBAAC,GAAD,CAAQplB,KAAMA,IAEd,kBAAC6I,GAAD,CAASI,KAAK,OACd,kBAAC,GAAD,CAAS2F,GAAIiE,YAAaC,GAAiB,CAAEC,OAAQ/S,EAAK4S,MAA1D,cAQR,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,2BAAI5S,EAAKykB,MAAM7U,OAAf,KADF,UAGA,kBAAC,GAAD,KACE,2BAAI5P,EAAK0lB,UAAU9V,OAAnB,KADF,cAGA,kBAAC,GAAD,KACE,2BAAI5P,EAAK+b,UAAUnM,OAAnB,KADF,iB,8IC1IR,IAAMvH,GAAYC,IAAOC,IAAV,MAqBA0N,GAZD,SAAC,GAAD,IAAGxW,EAAH,EAAGA,KAAH,OACZ,kBAAC,GAAD,KACE,kBAAC,GAAD,MAECA,ICyGUkmB,GApGM,SAAC,GAAkB,IAAhBlW,EAAe,EAAfA,SAAe,EACS5C,oBAAS,GADlB,mBAC9B+Y,EAD8B,KACbC,EADa,OAEChZ,mBAAS,IAFV,mBAE9BsX,EAF8B,KAEjBC,EAFiB,KAU/B/F,EAAa,WACjB+C,OAAO1U,QAAQ2X,UACb,GACA,GACAxR,YxD3BsB,awD2BY,CAAEpD,cAEtCoW,GAAmB,IAGfnY,EAAY,CAAE+B,WAAUyM,KAAM,EAAGC,MvB9BD,GuBgCtC,OACE,kBAAC,IAAD,CACEtL,MAAOvM,GACPoJ,UAAWA,EACX4W,6BAA2B,IAE1B,YAAkD,IAA/CpW,EAA8C,EAA9CA,KAAMN,EAAwC,EAAxCA,QAAS2S,EAA+B,EAA/BA,UAAWgE,EAAoB,EAApBA,cAC5B,GAAI3W,GAA6B,IAAlB2W,EACb,OACE,kBAAC,GAAD,CACE7c,OAAQ,IACRsB,OAAO,KACPF,IAAI,KACJ0X,MvB7C0B,IuBsCgB,MAYvBtS,EAAK4X,aAAtBrB,EAZwC,EAYxCA,MAAOjE,EAZiC,EAYjCA,MAEf,OAAKiE,EAAM7U,OAAS,EAEhB,kBAAC/G,GAAD,CAASG,OAAO,MACd,kBAAC,GAAD,CAAOvJ,KAAK,mBAMhB,kBAAC,GAAD,CACEyO,KAAMuW,EACNnE,QAAQ,qBACRE,MAAO9J,SAAS8J,GAChB9S,UAAWA,EACX6S,UAAWA,IAEV,SAAArS,GACC,OAAOA,EAAKqC,KAAI,SAACyF,EAAMoM,GACrB,IAAMsC,EACJ9W,GAA6B,IAAlB2W,GAAuBrW,EAAK0B,OAAS,IAAMwS,EAExD,OACE,kBAAC,WAAD,CAAU5R,IAAKwF,EAAKpD,IACjBuR,IAAgBnO,EAAKpD,IACpB,kBAAC,GAAD,CAAOkM,KAAM8G,EAAiB7G,QAASV,GACrC,kBAAC,GAAD,CAAWzL,GAAIoD,EAAKpD,GAAIyL,WAAYA,KAIxC,kBAACxV,GAAD,CAASG,OAAO,MACd,kBAAC,GAAD,CACE+M,OAAQC,EAAKD,OACboE,OAAQnE,EAAKpD,GACbkN,cAAe9J,EAAK8J,cACpB7C,SAAUjH,EAAKiH,SACf9N,MAAO6G,EAAK7G,MACZuC,MAAOsE,EAAKtE,MACZ4L,MAAOtH,EAAKsH,MACZyC,UAAW/J,EAAK+J,UAChBC,UAAW,kBA5Ef7F,EA4E+BnE,EAAKpD,GA3EpDwO,OAAO1U,QAAQ2X,UAAU,GAAI,GAAIxR,YAAaC,GAAa,CAAEF,GAAIuH,KACjEiK,EAAejK,QACf0L,GAAmB,GAHH,IAAA1L,MAgFCuK,GAAmB,kBAACnZ,GAAD,CAASzC,IAAI,kB,qKCzFrD,IAAM2B,GAAOnC,IAAOC,IAAV,MAGa,SAAAC,GAAC,OAAIA,EAAE9E,MAAMP,OAAO7B,MACxB,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQ9B,MAwDzBmL,gBAhDC,SAAC,GAAe,IAAbsZ,EAAY,EAAZA,MAAY,EACVvlB,IAAVF,EADoB,oBACpBA,KACDmP,EAAasW,EAAMC,OAAnBvW,SAER,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAMN,MAAOM,IAEb,kBAAC,IAAD,CAAOoB,MAAOxM,GAAUqJ,UAAW,CAAE+B,cAClC,YAA+B,IAA5BvB,EAA2B,EAA3BA,KAAMN,EAAqB,EAArBA,QAAS1O,EAAY,EAAZA,MACjB,OAAI0O,EAEA,kBAACvF,GAAD,CAAWM,QAAQ,OACjB,kBAAC,GAAD,CAAUjB,OAAQ,MAClB,kBAACW,GAAD,CAAWK,SAAS,MAClB,kBAACG,GAAD,CAASC,IAAI,KAAKE,OAAO,MACvB,kBAAC,GAAD,CAAUtB,OAAQ,QAOxBxI,IAAUgP,EAAK+X,QAAgB,kBAAC,GAAD,MAGjC,kBAAC5d,GAAD,CAAWM,QAAQ,OACjB,kBAAC,GAAD,CAAa3I,KAAMkO,EAAK+X,UAExB,kBAAC5d,GAAD,CAAWK,SAAS,MAClB,kBAACG,GAAD,CAASC,IAAI,KAAKE,OAAO,MACtByG,IAAanP,EAAKN,KAAKyP,UAAY,kBAAC,GAAD,OAGtC,kBAAC,GAAD,CAAcA,SAAUA,a,uyBCzDxC,IAAMrG,GAAUd,IAAOC,IAAV,MAaF,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAGzB+I,GAAOnC,IAAOC,IAAV,MAIS,SAAAC,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOlC,KAG3BgI,IAKN8c,GAAQ5d,IAAOC,IAAV,MAMW,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOe,KAAK,QAgDhC4jB,GA1CK,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,cAAe1U,EAAuC,EAAvCA,MAAO2U,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAAoB,EACrCzZ,oBAAS,GAD4B,mBACpE0Z,EADoE,KACvDC,EADuD,KAgB3E,OAbA1b,qBAAU,WACR,IAAM0G,EAAM,IAAID,MAOhB,OANAC,EAAIG,IAAMD,EAEVF,EAAIiV,OAAS,WACXD,GAAe,IAGV,WACLhV,EAAIiV,OAAS,QAEd,CAAC/U,IAGF,kBAAC,GAAD,KACE,kBAACwU,GAAD,CAAOQ,MAAOH,EAAc,CAAEvV,gBAAgB,OAAD,OAASU,EAAT,MAAsB,KAEnE,kBAAC,GAAD,CAASvG,QAASib,GAChB,kBAAC,GAAD,CAAUpgB,MAAM,UAEhB,kBAAC6C,GAAD,CAASI,KAAK,KAAKF,MAAM,MACtBsd,GAGH,kBAAC,GAAD,CAAiBrgB,MAAM,UAEvB,kBAAC6C,GAAD,CAASI,KAAK,MAAMqd,M,wYCrD5B,IAAM7b,GAAOnC,YAAOD,GAAPC,CAAH,MACM,SAAAE,GAAC,OAAIA,EAAE9E,MAAMN,QAAQ9B,MAClB,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAEjB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO7B,MACxB,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQ9B,MAKlCqlB,GAAiBre,IAAOC,IAAV,MAmGLqe,GAzFC,WAAO,IAAD,EACDpmB,IAAVF,EADW,oBACXA,KADW,EAGkBuM,mBAAS,MAH3B,mBAGbsX,EAHa,KAGAC,EAHA,KAKd/F,EAAa,WACjB+C,OAAO1U,QAAQ2X,UAAU,GAAI,GAAI,YACjCD,EAAe,OAQX1W,EAAY,CAChB8N,WAAYlb,EAAKN,KAAK4S,GACtBsJ,KAAM,EACNC,M1BvDoC,I0B0DtC,OACE,kBAAC,GAAD,CAAMzT,SAAS,MACb,kBAAC,GAAD,CAAMyG,MAAM,gCAEZ,kBAAC,IAAD,CACE0B,MAAO5M,EACPyJ,UAAWA,EACX4W,6BAA2B,IAE1B,YAAkD,IAA/CpW,EAA8C,EAA9CA,KAAMN,EAAwC,EAAxCA,QAAS2S,EAA+B,EAA/BA,UAAWgE,EAAoB,EAApBA,cAC5B,GAAI3W,GAA6B,IAAlB2W,EACb,OACE,kBAACoC,GAAD,KACE,kBAAC,GAAD,CAAUjf,OAAQ,IAAK8Y,M1BvEC,M0BmEkB,MASvBtS,EAAK2Y,SAAtBpC,EATwC,EASxCA,MAAOjE,EATiC,EASjCA,MAEf,OAAKiE,EAAM7U,OAAS,EAAU,kBAAC,GAAD,CAAOnQ,KAAK,kBAGxC,kBAAC,GAAD,CACEyO,KAAMuW,EACNnE,QAAQ,iBACRE,MAAO9J,SAAS8J,GAChB9S,UAAWA,EACX6S,UAAWA,IAEV,SAAArS,GACC,IAAMwW,EACJ9W,GAA6B,IAAlB2W,GAAuB/D,IAAUtS,EAAK0B,OAEnD,OACE,kBAAC,WAAD,KACE,kBAAC+W,GAAD,KACGzY,EAAKqC,KAAI,SAAAyF,GAAI,OACZ,kBAAC,WAAD,CAAUxF,IAAKwF,EAAKpD,IAClB,kBAAC,GAAD,CACEkM,KAAMqF,IAAgBnO,EAAKpD,GAC3BmM,QAASV,GAET,kBAAC,GAAD,CAAWzL,GAAIoD,EAAKpD,GAAIyL,WAAYA,KAGtC,kBAAC,GAAD,CACE3M,MAAOsE,EAAKtE,MACZ2U,WAAYrQ,EAAKsH,MAAM1N,OACvB0W,cAAetQ,EAAKiH,SAASrN,OAC7BwW,cAAe,kBA7DvBjM,EA6DuCnE,EAAKpD,GA5D5DwO,OAAO1U,QAAQ2X,UAAU,GAAI,GAAIxR,YAAaC,GAAa,CAAEF,GAAIuH,UACjEiK,EAAejK,GAFC,IAAAA,UAmECuK,GAAmB,kBAACnZ,GAAD,CAASzC,IAAI,gB,ojCC5GrD,IAAM2B,GAAOnC,IAAOC,IAAV,MAOG,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MACf,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOlC,MACjB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QAI3CglB,GAAiBxe,IAAOC,IAAV,MAQdgJ,GAAQjJ,IAAOkJ,IAAV,MAMLuV,GAAiBze,IAAOC,IAAV,MAOT,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAChB,SAAA8G,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKM,MAChB,SAAAkH,GAAC,OAAIA,EAAExC,SAGvBkR,GAAW5O,IAAO8P,KAAV,MAEG,SAAA5P,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAGpCwR,GAAWjK,IAAO8P,KAAV,MACC,SAAA5P,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKG,MAiEvB6lB,GA3DI,SAAC,GAAc,IAAZhnB,EAAW,EAAXA,KAAW,EACL6M,mBAAS,IADJ,mBACxB7G,EADwB,KACjBihB,EADiB,KAGvBzX,EAA8BxP,EAA9BwP,SAAUC,EAAoBzP,EAApByP,SAAUiC,EAAU1R,EAAV0R,MAE5B5G,qBAAU,WAAO,IAAD,EACiCpH,EAAMlC,OAA7CK,EADM,EACNA,QAASI,EADH,EACGA,UAAWN,EADd,EACcA,QAASzC,EADvB,EACuBA,MAC/BsC,EAAS,CAACK,EAAQC,KAAMG,EAAUH,KAAMH,EAASzC,EAAM4C,MACvDolB,EAActQ,KAAKC,MAAMD,KAAKuQ,SAAW3lB,EAAOoO,QACtDqX,EAASzlB,EAAO0lB,MACf,IAkBH,OACE,kBAAC,GAAD,KACE,kBAACzb,GAAD,CAAGmD,GAAIiE,Y5DnFe,a4DmFmB,CAAEpD,cACzC,kBAACqX,GAAD,KACGpV,EACC,kBAAC,GAAD,CAAOC,IAAKD,IAEZ,kBAACqV,GAAD,CAAgB/gB,MAAOA,GArBZwJ,EAChB4X,MAAM,KACNC,MAAM,EAAG,GACTC,KAAK,KAILF,MAAM,KACN7W,KAAI,SAAAvC,GAAC,OAAIA,EAAEuZ,OAAO,MAClBD,KAAK,QAiBN,kBAACze,GAAD,CAASC,IAAI,KAAKE,OAAO,MACvB,kBAACyC,GAAD,CAAGmD,GAAIiE,Y5D9Fa,a4D8FqB,CAAEpD,cACzC,kBAAC,GAAD,KAAWD,KAIf,kBAAC,GAAD,SAAYC,GAEZ,kBAAC5G,GAAD,CAASC,IAAI,OAEb,kBAAC,GAAD,CAAQ9I,KAAMA,M,wYC9FpB,IAAMyK,GAAOnC,YAAOD,GAAPC,CAAH,MACM,SAAAE,GAAC,OAAIA,EAAE9E,MAAMN,QAAQ9B,MAEd,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO7B,MACxB,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQ9B,MAKlCkmB,GAAkBlf,IAAOC,IAAV,MAKF,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQ9B,MAoEzBmmB,GA9DA,WAAO,IAAD,EACAjnB,IACbkN,EAAY,CAChBqF,OAHiB,oBACVzS,KAEMN,KAAK4S,GAClBsJ,KAAM,EACNC,M5BpCmC,I4BuCrC,OACE,kBAAC,GAAD,CAAMzT,SAAS,MACb,kBAAC,GAAD,CAAMyG,MAAM,oBAEZ,kBAAC,IAAD,CACE0B,MAAOrM,GACPkJ,UAAWA,EACX4W,6BAA2B,IAE1B,YAAkD,IAA/CpW,EAA8C,EAA9CA,KAAMN,EAAwC,EAAxCA,QAAS2S,EAA+B,EAA/BA,UAAWgE,EAAoB,EAApBA,cAC5B,GAAI3W,GAA6B,IAAlB2W,EACb,OACE,kBAACiD,GAAD,KACE,kBAAC,GAAD,CAAU9f,OAAQ,IAAK8Y,M5BpDA,M4BgDmB,MASvBtS,EAAKwZ,SAAtBhV,EATwC,EASxCA,MAAO8N,EATiC,EASjCA,MAEf,OAAK9N,EAAM9C,OAAS,EAAU,kBAAC,GAAD,CAAOnQ,KAAK,mBAGxC,kBAAC,GAAD,CACEyO,KAAMwE,EACN4N,QAAQ,iBACRE,MAAO9J,SAAS8J,GAChB9S,UAAWA,EACX6S,UAAWA,IAEV,SAAArS,GACC,IAAMwW,EACJ9W,GAA6B,IAAlB2W,GAAuB/D,IAAUtS,EAAK0B,OAEnD,OACE,kBAAC,WAAD,KACE,kBAAC4X,GAAD,KACGtZ,EAAKqC,KAAI,SAAAvQ,GAAI,OACZ,kBAAC,GAAD,CAAYwQ,IAAKxQ,EAAK4S,GAAI5S,KAAMA,QAInC0kB,GAAmB,kBAACnZ,GAAD,CAASzC,IAAI,gB,4OCvErD,IAAM2B,GAAOnC,YAAOD,GAAPC,CAAH,MACM,SAAAE,GAAC,OAAIA,EAAE9E,MAAMN,QAAQ9B,MAG/BwX,GAAOxQ,IAAOC,IAAV,MAES,SAAAC,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOlC,MACjB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QA+ElC6lB,GAzEO,WAAO,IAAD,EACPnnB,IAAVF,EADiB,oBACjBA,KAEHoN,EAAY,CAChBqF,OAAQzS,EAAKN,KAAK4S,GAClBsJ,KAAM,EACNC,M7B3BiD,I6B8BnD,OACE,kBAACvT,GAAD,KACE,kBAAC,GAAD,CAAMF,SAAS,MACb,kBAAC,GAAD,CAAMyG,MAAK,UAAK7O,EAAKN,KAAKyP,SAAf,sBAEX,kBAAC,IAAD,CACEoB,MAAOlL,GACP+H,UAAWA,EACX4W,6BAA2B,IAE1B,YAAkD,IAA/CpW,EAA8C,EAA9CA,KAAMN,EAAwC,EAAxCA,QAAS2S,EAA+B,EAA/BA,UAAWgE,EAAoB,EAApBA,cAC5B,GAAI3W,GAA6B,IAAlB2W,EACb,OACE,kBAAC,GAAD,CACE7c,OAAQ,GACRsB,OAAO,MACPwX,M7B9CmC,K6BwCO,MAWftS,EAAK0Z,qBAA9BhN,EAXwC,EAWxCA,cAAe4F,EAXyB,EAWzBA,MAEvB,OAAK5F,EAAchL,OAKjB,kBAAC,GAAD,CACE1B,KAAM0M,EACN0F,QAAQ,qCACRE,MAAO9J,SAAS8J,GAChB9S,UAAWA,EACX6S,UAAWA,IAEV,SAAArS,GACC,IAAMwW,EACJ9W,GAA6B,IAAlB2W,GAAuB/D,IAAUtS,EAAK0B,OAEnD,OACE,oCACE,kBAAC,GAAD,KACG1B,EAAKqC,KAAI,SAAA+E,GAAY,OACpB,kBAAC,GAAD,CACE9E,IAAK8E,EAAa1C,GAClB0C,aAAcA,EACdC,MAAO,kBAAM,SAKlBmP,GAAmB,kBAACnZ,GAAD,CAASzC,IAAI,WA3BlC,kBAAC,GAAD,CAAOrJ,KAAK,gCC1ClBgN,gBAZF,SAAC,GAAe,IAAbsZ,EAAY,EAAZA,MACd,OACE,kBAACnd,GAAD,KACE,kBAAC,GAAD,CAAWmU,aAAa,EAAOnK,GAAImT,EAAMC,OAAOpT,S,83ECGtD,IAAMnI,GAAOnC,IAAOC,IAAV,MAGkB,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QAEhC,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMP,OAAO7B,MAKrCumB,GAAmBvf,IAAOC,IAAV,MACO,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QAEzC,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAMb,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO7B,MAKrCgO,GAAUhH,IAAO6D,GAAV,MAEF,SAAA3D,GAAC,OAAIA,EAAE9E,MAAMlC,OAAO/B,KAAKoC,WAGb,SAAA2G,GAAC,OAAIA,EAAE9E,MAAMP,OAAO7B,MAKrCwmB,GAAaxf,YAAO0O,IAAP1O,CAAH,MAGM,SAAAE,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOe,KAAK,QAQzCwlB,GAAkBzf,IAAOC,IAAV,MAEQ,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QAEjC,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMP,OAAO7B,MAKrC0mB,GAAgB1f,IAAOC,IAAV,MACH,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MACtB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQlC,OAG9B6V,GAAOzO,YAAO0O,IAAP1O,CAAH,MAEG,SAAAE,GAAC,OAAIA,EAAE9E,MAAMN,QAAQlC,OAAO,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQlC,OAC3C,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQlC,OACrB,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOjC,MAM5B,SAAAmH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAO/B,KAAKoC,WAEb,SAAA2G,GAAC,OAAIA,EAAE9E,MAAMP,OAAO7B,MACrC,SAAAkH,GAAC,OACAA,EAAEyf,MAAH,sCAEsBzf,EAAE9E,MAAMlC,OAAOK,QAAQhB,MAF7C,gBAOkB,SAAA2H,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOe,KAAK,QAI3C0U,GAAO3O,IAAOC,IAAV,MAGK,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAEb,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO7B,MAKrC4mB,GAAiB5f,IAAOC,IAAV,MAEL,SAAAC,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKI,MAOhC8V,GAAW5O,IAAOC,IAAV,MAKR4f,GAAS7f,IAAOC,IAAV,MAGU,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOK,QAAQhB,SAI5CsW,GAAc7O,IAAOC,IAAV,MACD,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQlC,OACtB,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKE,OAC3B,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOe,KAAK,QAyGrBkK,gBAlGO,SAAC,GAA4B,IAA1BE,EAAyB,EAAzBA,SAAUgY,EAAe,EAAfA,SAAe,EACLyD,YAASnjB,GAAmB,CACrEyI,UAAW,CAAE8N,WAAYmJ,EAAS/R,MAD5ByV,EADwC,EACxCA,gBAAiBna,EADuB,EACvBA,KAAMN,EADiB,EACjBA,QA+B/B,OA3BA9C,qBAAU,WACR,IAAMzL,EAAcgpB,EAAgB,CAClCnV,SAAU5N,GACVsb,YAAa,SAACC,EAAD,GAAiC,IAAxByH,EAAuB,EAAvBA,iBACpB,IAAKA,EAAiBpa,KAAM,OAAO2S,EADQ,IAGnC0H,EAAoBD,EAAiBpa,KAArCqa,gBACFC,EAAmB3H,EAAK4H,iBAE9B,OAAID,EAAiBE,MAAK,SAAAC,GAAC,OAAIA,EAAE/V,KAAO2V,EAAgB3V,MAC/CiO,UAIa0H,EACF,WAGb,CAAEE,iBAFgB,CAAIF,GAAJ,mBAAwBC,SAMrD,OAAO,WACLnpB,OAED,CAACgpB,IAGF,kBAAC,GAAD,KACE,kBAACR,GAAD,KACE,kBAAC,GAAD,cAEA,kBAACC,GAAD,CACE3W,OAAK,EACLgI,gBAAgB,WAChBvK,GAAIiE,YAAaC,GAAiB,CAAEC,OhE5JlB,SgE8JlB,kBAAC,GAAD,QAIJ,kBAACgV,GAAD,KACE,kBAAC,GAAD,CACEpb,SAAUA,EACVoF,gBAAgB,QAChBY,YAAU,EACVhE,YAAY,oBAIff,GAAW,kBAACpC,GAAD,CAAa1C,IAAI,QAE3B8E,GACA,kBAACoa,GAAD,KACG9Z,EAAKua,iBAAiBlY,KAAI,SAAAvQ,GACzB,IAAM4oB,GAAU5oB,EAAK6oB,oBAAsB7oB,EAAKioB,KAEhD,OACE,kBAAC,GAAD,CACEzX,IAAKxQ,EAAK4S,GACVuG,gBAAgB,WAChBvK,GAAE,oBAAe5O,EAAK4S,IACtBqV,KAAMW,EAAS,EAAI,GAEnB,8BACE,kBAAC,GAAD,CAAQlX,MAAO1R,EAAK0R,MAAO1Q,KAAM,MAGnC,kBAAC,GAAD,KACE,kBAACknB,GAAD,KACE,kBAAC,GAAD,KAAWloB,EAAKwP,UAEfoZ,GAAU,kBAACT,GAAD,OAGb,kBAAC,GAAD,KACGnoB,EAAK6oB,mBAAqB,OAD7B,IACsC7oB,EAAKuX,uB,ysDC7M7D,IAAM9M,GAAOnC,IAAOC,IAAV,MACK,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAaZ,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOe,KAAK,QAC5B,SAAAiG,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOhC,MAIf,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOe,KAAK,QAW7CumB,GAAexgB,IAAOC,IAAV,MAIZwgB,GAAczgB,IAAO8P,KAAV,MAEJ,SAAA5P,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MACxB,SAAAoH,GAAC,OAAKA,EAAEwgB,aAAexgB,EAAE9E,MAAMN,QAAQ9B,MACrC,SAAAkH,GAAC,OAAIA,EAAEwgB,aAAe,KAEnB,SAAAxgB,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKC,QAC3B,SAAAuH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAO/B,KAAKwC,aAG9BgnB,GAAiB3gB,IAAOC,IAAV,MAGC,SAAAC,GAAC,OAAIA,EAAEwgB,aAAe,cAC/B,SAAAxgB,GAAC,OAAIA,EAAE9E,MAAMN,QAAQ/B,KAErB0nB,IAKNpe,GAAUrC,IAAOC,IAAV,MAME,SAAAC,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKG,MACzB,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQlC,OAAO,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAC3C,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOhC,MAC5B,SAAAkH,GAAC,OAAIA,EAAEwgB,aAAexgB,EAAE9E,MAAMlC,OAAOE,SAC1B,SAAA8G,GAAC,OACnBA,EAAEwgB,YAAcxgB,EAAE9E,MAAMlC,OAAOK,QAAQhB,MAAQ2H,EAAE9E,MAAMlC,OAAOe,KAAK,QAGjEgN,GAAOjH,IAAO0B,KAAV,MACY,SAAAxB,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAK7B,SAAA8G,GAAC,OAAIA,EAAE9E,MAAMN,QAAQlC,OAG5BgoB,GAAiB5gB,YAAOuB,GAAPvB,CAAH,MAED,SAAAE,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOhC,MACjB,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOe,KAAK,QAGzC4mB,GAAa7gB,YAAOgB,GAAPhB,CAAH,MACC,SAAAE,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MAgHvBgoB,GAzGkB,SAAC,GAM3B,IALLC,EAKI,EALJA,SACA1E,EAII,EAJJA,SACA2E,EAGI,EAHJA,SACApb,EAEI,EAFJA,KACA6X,EACI,EADJA,MAEMwD,EAAYnV,iBAAO,MADrB,EAGkCvH,mBAAS,IAH3C,mBAGG2c,EAHH,KAGgBC,EAHhB,OAKoBC,YAAYrkB,IAA7BskB,EALH,oBAOJ7e,qBAAU,WACJye,EAAUhW,SACZgW,EAAUhW,QAAQqW,mBAEnB,CAACL,EAAWrb,IAEf,IAAM2b,EAAc,SAAAxc,GAClBA,EAAEU,iBAEGyb,IAELC,EAAe,IACfE,EAAc,CACZjc,UAAW,CACT/D,MAAO,CACLmgB,OAAQnF,EAAS/R,GACjBmX,SAAUT,EAAWA,EAAS1W,GAAK,KACnCvS,QAASmpB,IAGb9T,eAAgB,YAAe,IAAZxH,EAAW,EAAXA,KACjB,GAAIA,GAAQA,EAAKyb,eAAiBzb,EAAKyb,cAAcK,eACnD,MAAO,CACL,CACEnZ,MAAO5L,GACPyI,UAAW,CAAE8N,WAAYmJ,EAAS/R,WAc9C,OACE,kBAAC,GAAD,KACE,kBAACkW,GAAD,KACGO,EAAS9Y,KAAI,SAAAlQ,GACZ,IAAM4pB,EAAqBtF,EAAS/R,KAAOvS,EAAQypB,OAAOlX,GAE1D,OACE,kBAACqW,GAAD,CAAgBD,YAAaiB,EAAoBzZ,IAAKnQ,EAAQuS,KAC1DqX,GACA,kBAACphB,GAAD,CAASE,MAAM,MACb,kBAAC,GAAD,CAAQ2I,MAAOrR,EAAQypB,OAAOpY,SAIlC,kBAAC,GAAD,CAASsX,YAAaiB,GACnB5pB,EAAQA,SAGX,kBAAC0oB,GAAD,CAAaC,YAAaiB,G/CxIb,SAAA1T,GACzB,IAAMC,EAAO,IAAIC,KAAKC,SAASH,IAgBzB2T,EAfS,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGmB1T,EAAK2T,WAAa,GACjCC,EAAM5T,EAAK6T,SACXC,EAAO9T,EAAK+T,cACZC,EAAOhU,EAAKiU,eAAe,QAAS,CACxCC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGV,MAAM,GAAN,OAAUV,EAAV,YAAmBE,EAAnB,aAA2BE,EAA3B,YAAmCE,G+C+GpBK,CAAYxqB,EAAQ0f,gBAK7B,yBAAK5N,IAAKoX,KjEhKU,QiEmKrBxD,EAAMC,OAAOjT,QAAkCuW,GAC9C,kBAAC,GAAD,CAAMxb,SAAU+b,GACd,kBAACX,GAAD,CACEva,YAAY,iBACZnB,MAAOgc,EACP9a,SAAU,SAAArB,GAAC,OAAIoc,EAAepc,EAAEC,OAAOE,QACvCkO,UAvCW,SAAArO,GACD,KAAdA,EAAEiO,UAAiC,IAAfjO,EAAEyd,UACxBjB,EAAYxc,MAwCR,kBAAC8b,GAAD,CAAY3pB,KAAK,SAASgK,OAAK,GAC7B,kBAAC,GAAD,CAAUzD,MAAM,W,sxCCvL5B,IAAM0E,GAAOnC,IAAOC,IAAV,MAEY,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAKb,SAAA8G,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QAIlDwK,GAAiBhE,IAAOC,IAAV,MAKL,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MACzB,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAO/B,KAAKwC,aACrB,SAAAuG,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKG,MAGhC4pB,GAAKziB,IAAOC,IAAV,MAIFwO,GAAOzO,YAAOoD,IAAPpD,CAAH,MACI,SAAAE,GAAC,OAAIA,EAAE9E,MAAMN,QAAQlC,OACtB,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQlC,OAAO,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQlC,OAC3C,SAAAsH,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOjC,MAOjC4V,GAAO3O,IAAOC,IAAV,MACQ,SAAAC,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAOjC+V,GAAW5O,IAAOC,IAAV,MACC,SAAAC,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKM,KAAKI,MAC3B,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAO/B,KAAKoC,WACnB,SAAA2G,GAAC,OAAIA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAGpCskB,GAAS/c,IAAOC,IAAV,MAIU,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOG,WACzB,SAAA6G,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAqEvBsL,gBA9Da,SAAC,GAAmC,IAAjCE,EAAgC,EAAhCA,SAAUoZ,EAAsB,EAAtBA,MAAOuD,EAAe,EAAfA,SAAe,EAC1C9oB,IAAVF,EADoD,oBACpDA,KADoD,EAGnCilB,YAAgBrgB,GAA6B,CACrEwI,UAAW,CACT8N,WAAYlb,EAAKN,KAAK4S,GACtBG,OAAQuW,EAAWA,EAAS1W,GAAK,MAEnCsJ,MAAOoN,IALDpb,EAHqD,EAGrDA,KAaR,OAhB6D,EAG/CN,SASEM,GAAQob,IACtBA,EAAS7D,SAAWvX,EAAKsX,aAAaC,UlEhEd,QkEmEtBM,EAAMC,OAAOjT,QAAmCuW,EAkBhDA,EAEA,kBAAC,GAAD,KACE,kBAAC,GAAD,CACE1a,GAAIiE,YlExGc,akEwGoB,CACpCpD,SAAU6Z,EAAS7Z,YAGrB,kBAAC,GAAD,CAAQiC,MAAO4X,EAAS5X,MAAO1Q,KAAM,KAErC,kBAAC,GAAD,KACE,kBAAC,GAAD,KAAWsoB,EAAS9Z,UAEnB8Z,EAAS7D,UAAY,kBAAC,GAAD,SAOzB,KApCH,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACsF,GAAD,YACA,kBAAC,GAAD,CACEpe,SAAUA,EACVoF,gBAAgB,QAChBD,UAAQ,EACRa,YAAU,EACVhE,YAAY,4BACZF,WAAS,S,0GCrFrB,IAAMhE,GAAOnC,IAAOC,IAAV,MA6GKyiB,GArGM,SAAC,GAAyB,IAAvBjF,EAAsB,EAAtBA,MAAOpB,EAAe,EAAfA,SACrB5R,EAAWgT,EAAMC,OAAjBjT,OAEFa,EAASC,cAH6B,EAKlBuU,YAAS/jB,GAAU,CAC3CqJ,UAAW,CAAEkF,GAAIG,GACjBmJ,KnERwB,QmEQlBnJ,IAFA7E,EALoC,EAKpCA,KAAMN,EAL8B,EAK9BA,QAL8B,EAcxCwa,YAASjjB,GAAc,CACzBuI,UAAW,CAAE8N,WAAYmJ,EAAS/R,GAAIG,UACtCmJ,KnEjBwB,QmEiBlBnJ,EACNkY,YAAa,iBANb5C,EAX0C,EAW1CA,gBACMgB,EAZoC,EAY1Cnb,KACSgd,EAbiC,EAa1Ctd,QAOIud,EAAoBC,uBAAY,oBAAApd,EAAAC,OAAA,2EAAAD,EAAA,MAE5B4F,EAAO6B,OAAO,CAClBhI,SAAUlI,GACVmI,UAAW,CACT/D,MAAO,CACLogB,SAAUpF,EAAS/R,GACnBkX,OAAQ/W,IAGZ2C,eAAgB,iBAAM,CACpB,CACE7E,MAAO5L,GACPyI,UAAW,CAAE8N,WAAYmJ,EAAS/R,KAEpC,CAAE/B,MAAOtM,SAfqB,+GAmBnC,CAACogB,EAAS/R,GAAIgB,EAAQb,IA6BzB,GA3BAjI,qBAAU,WACR,IAAMzL,EAAcgpB,EAAgB,CAClCnV,SAAU9N,GACVsI,UAAW,CAAE8N,WAAYmJ,EAAS/R,GAAIG,UACtC6N,YAAa,SAACC,EAAD,GAAiC,IAAxByH,EAAuB,EAAvBA,iBACpB,IAAKA,EAAiBpa,KAAM,OAAO2S,EAEnCsK,IAEA,IAAME,EAAa/C,EAAiBpa,KAAKod,eAGzC,MAAO,CAAEC,YAFW,sBAAO1K,EAAK0K,aAAZ,CAAyBF,QAMjD,OAAO,WACLhsB,OAED,CAACslB,EAAS/R,GAAIG,EAAQsV,EAAiB8C,IAE1CrgB,qBAAU,WnE/DgB,QmEgEpBiI,GACFoY,MAED,CAACpY,EAAQoY,IAERvd,GAAWsd,EACb,OACE,kBAAC,GAAD,KACE,kBAAC1f,GAAD,OAKN,IAAI8d,EAAW,KAKf,OAJIpb,GAAQA,EAAK+X,UACfqD,EAAWpb,EAAK+X,SAIhB,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAqBF,MAAOA,EAAOuD,SAAUA,IAE7C,kBAAC,GAAD,CACE3E,SAAUA,EACV0E,SAAUA,EAAWA,EAASkC,YAAc,GAC5CjC,SAAUA,EACVpb,KAAMmb,EACNtD,MAAOA,M,kXCzGf,IAAMtb,GAAOnC,IAAOC,IAAV,MACY,SAAAC,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,Q9CFb,O8CWN,SAAA8G,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MACxB,SAAAmH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQ9B,MACX,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QAC1B,SAAA0G,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOY,OAAON,QAuB1C0pB,GAhBE,SAAC,GAAe,IAAbzF,EAAY,EAAZA,MAAY,EACXvlB,IAAVF,EADqB,oBACrBA,KAET,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAeqkB,SAAUrkB,EAAKN,KAAM+lB,MAAOA,IAE3C,kBAAC,GAAD,CAAcA,MAAOA,EAAOpB,SAAUrkB,EAAKN,S,uRCTjD,IAAMyK,GAAOnC,IAAOC,IAAV,MAOa,SAAAC,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MAC9B,SAAAmH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO9B,MAGV,SAAAmH,GAAC,OAAIkO,SAASlO,EAAE9E,MAAMP,OAAO7B,GAAI,IAAM,GAAK,QACtD,SAAAkH,GAAC,OAAIA,EAAE9E,MAAMP,OAAO7B,MA4ElBmL,gBArEG,SAAC,GAA4B,IAA1BE,EAAyB,EAAzBA,SAAUgY,EAAe,EAAfA,SAAe,EACfnkB,IADe,mBACnCF,EADmC,KACnCA,KAAQuK,EAD2B,KAItC4gB,EC/CqB,WAC3B,IAAMC,EAA6B,kBAAXtK,OAElBuK,EAAUP,uBACd,WACE,MAAO,CACLrlB,MAAO2lB,EAAWtK,OAAOwK,gBAAaC,EACtCnkB,OAAQgkB,EAAWtK,OAAOC,iBAAcwK,KAG5C,CAACH,IAV8B,EAaG7e,mBAAS8e,GAbZ,mBAa1BG,EAb0B,KAadC,EAbc,KA+BjC,OAhBAjhB,qBACE,WACE,IAAK4gB,EACH,OAAO,EAGT,SAASM,IACPD,EAAcJ,KAIhB,OADAvK,OAAOjO,iBAAiB,SAAU6Y,GAC3B,kBAAM5K,OAAO/N,oBAAoB,SAAU2Y,MAEpD,CAACL,EAASD,IAGLI,EDeYG,GACUlmB,OAAS2Q,SAAShT,EAAMP,OAAO9B,GAAI,IAJpB,EAKFwL,mBAAS4e,GALP,mBAKrCS,EALqC,KAKtBC,EALsB,KAOtC5S,EAAanF,iBAAO,IAwB1B,OAtBAtJ,qBAAU,WACRD,EAAS,CAAErL,KzGvDc,gByGuDOM,QAAS6kB,MACxC,CAAC9Z,EAAU8Z,IAEd3R,GAAgBuG,GAAY,YACrBkS,GAAaS,GAChBC,GAAiB,MAIrBrhB,qBAAU,WACRqhB,EAAiBV,KAChB,CAACA,IAEJ3gB,qBAAU,WACR,OAAO,WACA2gB,GACHU,GAAiB,MAGpB,CAACxf,EAASQ,SAAUse,IAElBnrB,EAAKN,KAGR,oCACE,kBAAC,GAAD,CAAQsY,cAAe,kBAAM6T,GAAkBD,MAE/C,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAS7S,OAAQ6S,EAAe3S,WAAYA,IAE5C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOpI,OAAK,EAACC,KrErFH,IqEqFsBE,UAAW4S,KAE3C,kBAAC,IAAD,CAAO/S,OAAK,EAACC,KrE/EA,WqE+EsBE,UAAWsV,KAE9C,kBAAC,IAAD,CAAOzV,OAAK,EAACC,KrE/ED,UqE+EsBE,UAAWmW,KAE7C,kBAAC,IAAD,CAAOtW,OAAK,EAACC,KrE/EM,iBqE+EsBE,UAAWqW,KAEpD,kBAAC,IAAD,CAAOxW,OAAK,EAACC,KAAM0B,GAAiBxB,UAAWka,KAE/C,kBAAC,IAAD,CAAOra,OAAK,EAACC,KrEzFK,aqEyFsBE,UAAW8a,KAEnD,kBAAC,IAAD,CAAOjb,OAAK,EAACC,KAAM0B,GAAaxB,UAAW+a,KAE3C,kBAAC,IAAD,CAAO/a,UAAWuH,MAGpB,kBAAC,GAAD,CAAiB1L,SAAUR,EAASQ,aA3BnB,QE9DVV,gBAXK,SAAC,GAA0C,IAAxC7B,EAAuC,EAAvCA,SAAsBuC,EAAiB,EAA7BR,SAAYQ,SAQ3C,OAPArC,qBACE,WACEsW,OAAOkL,SAAS,EAAG,KAErB,CAACnf,IAGIvC,GAAY,QCgIN2hB,GAzHH,WAAO,IAAD,EACM/rB,IAAbH,EADO,oBACPA,QADO,EAGoC+nB,YAAS7jB,IAArDqJ,EAHQ,EAGRA,QAASya,EAHD,EAGCA,gBAAiBna,EAHlB,EAGkBA,KAAMtB,EAHxB,EAGwBA,QAuFxC,OArFA9B,qBAAU,WACR,IAAMzL,EAAcgpB,EAAgB,CAClCnV,SAAUrN,GACV+a,YAAa,SAAOC,EAAP,kCAAA7S,EAAAC,OAAA,oDAAeqa,EAAf,EAAeA,kBACJpa,KADX,yCACwB2S,GADxB,UAGL2L,EAAmB3L,EAAK4L,YAAY9W,iBAH/B,EAOP2S,EAAiBpa,KAAKwe,6BAFxB3uB,EALS,EAKTA,UACAuX,EANS,EAMTA,aAKgB,WAAdvX,EAXO,oBAakC,kBAAvCqjB,OAAOzU,SAASggB,KAAKvF,MAAM,KAAK,GAb3B,yCAcAvG,GAdA,OAkBTlL,EAAgB,CAAIL,GAAJ,mBAAqBkX,IAlB5B,yBAsBHI,GADAhS,EAAgB4R,GACMK,WAAU,SAAA/R,GAAC,OAAIA,EAAElI,KAAO0C,EAAa1C,QACpD,GACXgI,EAAckS,OAAOF,EAAO,GAG9BjX,EAAmBiF,EA3BV,eA+BL+J,EAAW9D,EAAK4L,aACb9W,iBAAmBA,EAhCjB,kBAkCJ,CAAE8W,YAAa9H,IAlCX,yCAsCf,OAAO,WACLtlB,OAED,CAACgpB,IAEJvd,qBAAU,WACR,IAAMzL,EAAcgpB,EAAgB,CAClCnV,SAAU5N,GACVsb,YAAa,SAACC,EAAD,GAAiC,IAAxByH,EAAuB,EAAvBA,iBACpB,IAAKA,EAAiBpa,KAAM,OAAO2S,EAEnC,IAAM2H,EAAmB3H,EAAK4L,YAAY7T,iBAClC2P,EAAoBD,EAAiBpa,KAArCqa,gBAGR,GAA2C,aAAvCnH,OAAOzU,SAASggB,KAAKvF,MAAM,KAAK,GAClC,OAAOvG,EAKT,IAAM+L,EAAQpE,EAAiBqE,WAC7B,SAAAlE,GAAC,OAAIA,EAAE/V,KAAO2V,EAAgB3V,MAE5Bga,GAAS,GACXpE,EAAiBsE,OAAOF,EAAO,GAIjC,IAAMG,EAAkB,CAAIxE,GAAJ,mBAAwBC,IAG1C7D,EAAW9D,EAAK4L,YAGtB,OAFA9H,EAAS/L,iBAAmBmU,EAErB,CAAEN,YAAa9H,MAI1B,OAAO,WACLtlB,OAED,CAACgpB,IAEAza,EAAgB,kBAACrC,GAAD,CAASzC,IAAI,OAG/B,kBAAC,IAAD,KACE,kBAACtF,EAAD,MAEA,kBAAC,GAAD,KACE,kBAAC,IAAD,KACG0K,EAAKue,YACJ,kBAAC,IAAD,CACEtb,OAAK,EACLE,OAAQ,kBAAM,kBAAC,GAAD,CAAWsT,SAAUzW,EAAKue,iBAG1C,kBAAC,IAAD,CAAOtb,OAAK,EAACE,OAAQ,kBAAM,kBAAC,GAAD,CAAYzE,QAASA,SAKrDvM,EAAQd,QAAQE,MACf,kBAAC,GAAD,CACED,KAAMa,EAAQd,QAAQC,KACtBE,UAAWW,EAAQd,QAAQG,WAE1BW,EAAQd,QAAQE,QCzHrButB,GAAUxN,uCAUVyN,G/GuC4B,SAACC,EAAQC,GACzC,IAAMC,EAAQ,IAAIC,IAEZC,EAnBCC,aAAQ,YAAsC,IAAnChf,EAAkC,EAAlCA,cAAeif,EAAmB,EAAnBA,aAC3Bjf,GACF0L,QAAQwT,IAAI,gBAAiBlf,GAE3Bif,GACFvT,QAAQwT,IAAI,eAAgBD,MAe1BE,EAAW7vB,IACX8vB,EAAaC,2BAAiB,CAAEC,IAAKX,IAGrCY,EAAYrvB,aAAaC,QAAQ,SACjCqvB,EAAS,IAAIC,IAAc,CAC/BH,IAAKV,EACLpS,QAAS,CACPkT,QAAS,IACTC,WAAW,EACXC,iBAAkB,CAChBtvB,cAAeivB,MAOrBC,EAAOK,mBAAmBC,wBAAwBC,SAAW,kBAC3DP,EAAOK,mBAAmBC,wBAAwBE,KAIpD,IAAMC,EAAkBpH,iBACtB,YAAgB,IAAbvW,EAAY,EAAZA,MAAY,EACe4d,YAAkB5d,GAAtC6d,EADK,EACLA,KAAM3wB,EADD,EACCA,UACd,MAAgB,wBAAT2wB,GAAgD,iBAAd3wB,IAE3CgwB,EACAJ,GAGF,OAAO,IAAIgB,IAAa,CACtBC,KAAM9wB,aAAW+wB,KAAK,CAACvB,EAAWI,EAAUc,IAC5CpB,U+G7EiB0B,CAAmB9B,GANdxN,qCAQ1BnO,iBACE,kBAAC,IAAD,CAAgBuC,OAAQqZ,IACtB,kBAAC,IAAD,CAAqBrZ,OAAQqZ,IAC3B,kBAAC,IAAD,CAAevpB,MAAOA,GACpB,mB5GFqB,SAAC,GAAD,IAAGkH,EAAH,EAAGA,SAAH,OAC3B,kBAAC1K,EAAa6uB,SAAd,CAAuBvhB,MAAOwhB,qBAAWzuB,EAAUH,IAChDwK,K4GAG,KACE,kBAAC,GAAD,UAKRsI,SAAS+b,eAAe,W","file":"static/js/main.8608e5c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.d60d852e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/background.79b4d48d.jpg\";","import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { onError } from 'apollo-link-error';\nimport { ApolloLink, Observable, split } from 'apollo-link';\nimport { createUploadLink } from 'apollo-upload-client';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { WebSocketLink } from 'apollo-link-ws';\n\n/**\n * Creates a Apollo Link, that adds authentication token to request\n */\nconst createAuthLink = () => {\n  const request = operation => {\n    const token = localStorage.getItem('token');\n    operation.setContext({\n      headers: {\n        authorization: token,\n      },\n    });\n  };\n\n  return new ApolloLink(\n    (operation, forward) =>\n      new Observable(observer => {\n        let handle;\n        Promise.resolve(operation)\n          .then(oper => request(oper))\n          .then(() => {\n            handle = forward(operation).subscribe({\n              next: observer.next.bind(observer),\n              error: observer.error.bind(observer),\n              complete: observer.complete.bind(observer),\n            });\n          })\n          .catch(observer.error.bind(observer));\n\n        return () => {\n          if (handle) handle.unsubscribe();\n        };\n      })\n  );\n};\n\n/**\n * Helper functions that handles error cases\n */\nconst handleErrors = () => {\n  return onError(({ graphQLErrors, networkError }) => {\n    if (graphQLErrors) {\n      console.log('graphQLErrors', graphQLErrors);\n    }\n    if (networkError) {\n      console.log('networkError', networkError);\n    }\n  });\n};\n\n/**\n * Creates a Apollo Client\n *\n * @param {string} apiUrl, GraphQL api url\n * @param {string} websocketApiUrl, GraphQL WebSocket api url\n */\nexport const createApolloClient = (apiUrl, websocketApiUrl) => {\n  const cache = new InMemoryCache();\n\n  const errorLink = handleErrors();\n  const authLink = createAuthLink();\n  const uploadLink = createUploadLink({ uri: apiUrl }); // Upload link also creates an HTTP link\n\n  // Create WebSocket link\n  const authToken = localStorage.getItem('token');\n  const wsLink = new WebSocketLink({\n    uri: websocketApiUrl,\n    options: {\n      timeout: 60000,\n      reconnect: true,\n      connectionParams: {\n        authorization: authToken,\n      },\n    },\n  });\n\n  // Temporary fix for early websocket closure resulting in websocket connections not being instantiated\n  // https://github.com/apollographql/subscriptions-transport-ws/issues/377\n  wsLink.subscriptionClient.maxConnectTimeGenerator.duration = () =>\n    wsLink.subscriptionClient.maxConnectTimeGenerator.max;\n\n  // Split links, so we can send data to each link\n  // depending on what kind of operation is being sent\n  const terminatingLink = split(\n    ({ query }) => {\n      const { kind, operation } = getMainDefinition(query);\n      return kind === 'OperationDefinition' && operation === 'subscription';\n    },\n    wsLink,\n    uploadLink\n  );\n\n  return new ApolloClient({\n    link: ApolloLink.from([errorLink, authLink, terminatingLink]),\n    cache,\n  });\n};\n","/**\n * Actions types\n */\nexport const SET_MESSAGE = 'SET_MESSAGE';\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE';\n\n/**\n * Initial State\n */\nexport const messageInitialState = {\n  content: {\n    type: '',\n    text: '',\n    autoClose: true,\n  },\n};\n\n/**\n * Message Reducer\n */\nexport const messageReducer = (state = messageInitialState, action) => {\n  switch (action.type) {\n    case SET_MESSAGE:\n      return {\n        ...state,\n        content: {\n          type: action.payload.type,\n          text: action.payload.text,\n          autoClose: action.payload.autoClose,\n        },\n      };\n    case CLEAR_MESSAGE: {\n      return {\n        ...state,\n        ...messageInitialState,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","/**\n * Actions types\n */\nexport const SET_AUTH_USER = 'SET_AUTH_USER';\nexport const CLEAR_AUTH_USER = 'CLEAR_AUTH_USER';\n\n/**\n * Initial State\n */\nexport const authInitialState = {\n  user: null,\n};\n\n/**\n * User Reducer\n */\nexport const authReducer = (state = authInitialState, action) => {\n  switch (action.type) {\n    case SET_AUTH_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case CLEAR_AUTH_USER: {\n      return {\n        ...state,\n        ...authInitialState,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useContext, useReducer } from 'react';\nimport { messageReducer, messageInitialState } from './message';\nimport { authReducer, authInitialState } from './auth';\n\n/**\n * React context for store\n */\nconst StoreContext = createContext();\n\n/**\n * Combine initial states\n */\nconst store = {\n  message: messageInitialState,\n  auth: authInitialState,\n};\n\n/**\n * Combine reducers\n */\nconst reducers = (store, action) => ({\n  message: messageReducer(store.message, action),\n  auth: authReducer(store.auth, action),\n});\n\n/**\n * Store context provider\n */\nexport const StoreProvider = ({ children }) => (\n  <StoreContext.Provider value={useReducer(reducers, store)}>\n    {children}\n  </StoreContext.Provider>\n);\n\n/**\n * React hook for consuming store\n */\nexport const useStore = () => useContext(StoreContext);\n","/**\n * Theme for applying consistent styling to the app\n */\n\nexport default {\n  /**\n   * Font\n   */\n  font: {\n    family: \"'Open Sans', sans-serif\",\n    weight: {\n      light: '300',\n      normal: '400',\n      bold: '600',\n    },\n    size: {\n      tiny: '11px',\n      xxs: '13px',\n      xs: '14px',\n      sm: '16px',\n      md: '18px',\n      lg: '20px',\n      xl: '34px',\n    },\n  },\n\n  /**\n   * Colors\n   */\n  colors: {\n    black: '#000000',\n    white: '#fff',\n    success: '#34a853',\n    body: '#fcfbfe',\n\n    primary: {\n      light: '#7986cb',\n      main: '#3f51b5',\n      dark: '#303f9f',\n      contrastText: '#fff',\n    },\n\n    secondary: {\n      light: '#ff4081',\n      main: '#f50057',\n      dark: '#c51162',\n      contrastText: '#fff',\n    },\n\n    text: {\n      primary: 'rgba(0, 0, 0, 0.87)',\n      secondary: 'rgba(0, 0, 0, 0.54)',\n      disabled: 'rgba(0, 0, 0, 0.38)',\n      hint: 'rgba(0, 0, 0, 0.38)',\n    },\n\n    border: {\n      light: '#f5f5f5',\n      main: '#e0e0e0',\n      dark: '#bdbdbd',\n    },\n\n    error: {\n      light: '#e57373',\n      main: '#f44336',\n      dark: '#d32f2f',\n      contrastText: '#fff',\n    },\n\n    warning: '#FFB818',\n\n    info: '#4169E1',\n\n    grey: {\n      50: '#fafafa',\n      100: '#f5f5f5',\n      200: '#eeeeee',\n      300: '#e0e0e0',\n      400: '#bdbdbd',\n      500: '#9e9e9e',\n      600: '#757575',\n      700: '#616161',\n      800: '#424242',\n      900: '#212121',\n    },\n  },\n\n  /**\n   * Shadows\n   */\n  shadows: {\n    sm: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)',\n    md: 'rgba(0, 0, 0, 0.3) 0px 1px 8px 0px',\n    lg: '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)',\n    xl: '0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)',\n  },\n\n  /**\n   * Breakpoints\n   */\n  screen: {\n    xs: '540px',\n    sm: '640px',\n    md: '1007px',\n    lg: '1100px',\n    xl: '1230px',\n  },\n\n  /**\n   * Spacing\n   */\n  spacing: {\n    none: 0,\n    xxs: '5px',\n    xs: '10px',\n    sm: '20px',\n    md: '30px',\n    lg: '40px',\n    xl: '60px',\n  },\n\n  /**\n   * Radius\n   */\n  radius: {\n    sm: '3px',\n    md: '6px',\n    lg: '12px',\n  },\n\n  /**\n   * zIndex\n   */\n  zIndex: {\n    xs: 10,\n    sm: 20,\n    md: 30,\n    lg: 40,\n    xl: 50,\n  },\n};\n","import { createGlobalStyle } from 'styled-components';\nimport theme from 'theme';\n\n/**\n * Global styles for the application\n */\nexport const GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Open+Sans:300,400,600');\n\n  html {\n    box-sizing: border-box;\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n\n  body {\n    font-family: open sans;\n    color: ${theme.colors.text.primary};\n    background-color: ${theme.colors.body};\n  }\n\n  #root {\n    position: relative;\n    min-height: 100vh;\n  }\n`;\n","import gql from 'graphql-tag';\n\n/**\n * Records to select from post comments\n */\nexport const postCommentsPayload = `\n  comments {\n    id\n    comment\n    author {\n      id\n      username\n      fullName\n      image\n    }\n  }\n`;\n\n/**\n * Records to select from post author\n */\nexport const postAuthorPayload = `\n  author {\n    id\n    username\n    fullName\n    image\n    following {\n      id\n      user\n    }\n    followers {\n      id\n      user\n    }\n    notifications {\n      id\n      author {\n        id\n        username\n      }\n      follow {\n        id\n      }\n      like {\n        id\n      }\n      comment {\n        id\n      }\n    }\n  }\n`;\n\n/**\n * Records to select from post likes\n */\nexport const postLikesPayload = `\n  likes {\n    id\n    user\n    post\n  }\n`;\n\n/**\n * Creates a post\n */\nexport const CREATE_POST = gql`\n  mutation($input: CreatePostInput!) {\n    createPost(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Gets all posts from followed users\n */\nexport const GET_FOLLOWED_POSTS = gql`\n  query($userId: String!, $skip: Int, $limit: Int) {\n    getFollowedPosts(userId: $userId, skip: $skip, limit: $limit) {\n      count\n      posts {\n        id\n        title\n        image\n        imagePublicId\n        createdAt\n        ${postAuthorPayload}\n        ${postCommentsPayload}\n        ${postLikesPayload}\n      }\n    }\n  }\n`;\n\n/**\n * Gets all available posts\n */\nexport const GET_POSTS = gql`\n  query($authUserId: ID!, $skip: Int, $limit: Int) {\n    getPosts(authUserId: $authUserId, skip: $skip, limit: $limit) {\n      count\n      posts {\n        id\n        title\n        image\n        ${postAuthorPayload}\n        ${postCommentsPayload}\n        ${postLikesPayload}\n      }\n    }\n  }\n`;\n\n/**\n * Gets specific post by id\n */\nexport const GET_POST = gql`\n  query($id: ID!) {\n    getPost(id: $id) {\n      id\n      title\n      image\n      createdAt\n      ${postAuthorPayload}\n      ${postCommentsPayload}\n      ${postLikesPayload}\n    }\n  }\n`;\n\n/**\n * Deletes a post\n */\nexport const DELETE_POST = gql`\n  mutation($input: DeletePostInput!) {\n    deletePost(input: $input) {\n      id\n    }\n  }\n`;\n","import gql from 'graphql-tag';\nimport {\n  postCommentsPayload,\n  postAuthorPayload,\n  postLikesPayload,\n} from './post';\n\n/**\n * Records to select from user\n */\nconst userPayload = `\n  id\n  username\n  email\n  fullName\n  image\n  imagePublicId\n  coverImage\n  coverImagePublicId\n  createdAt\n`;\n\n/**\n * Gets specific user by username\n */\nexport const GET_USER = gql`\n  query($username: String, $id: ID) {\n    getUser(username: $username, id: $id) {\n      ${userPayload}\n      isOnline\n      posts {\n        id\n      }\n      following {\n        id\n      }\n      followers {\n        id\n      }\n      notifications {\n        id\n        author {\n          id\n          username\n        }\n        follow {\n          id\n        }\n        like {\n          id\n        }\n        comment {\n          id\n        }\n      }\n    }\n  }\n`;\n\n/**\n * Gets user posts\n */\nexport const GET_USER_POSTS = gql`\n  query($username: String!, $skip: Int, $limit: Int) {\n    getUserPosts(username: $username, skip: $skip, limit: $limit) {\n      count\n      posts {\n        id\n        title\n        image\n        imagePublicId\n        createdAt\n        ${postAuthorPayload}\n        ${postCommentsPayload}\n        ${postLikesPayload}\n      }\n    }\n  }\n`;\n\n/**\n * Gets authenticated user\n */\nexport const GET_AUTH_USER = gql`\n  query {\n    getAuthUser {\n      ${userPayload}\n      newNotifications {\n        id\n        createdAt\n        author {\n          id\n          fullName\n          username\n          image\n        }\n        follow {\n          id\n        }\n        comment {\n          id\n          post {\n            id\n            image\n          }\n        }\n        like {\n          id\n          post {\n            id\n            image\n          }\n        }\n      }\n      newConversations {\n        id\n        username\n        fullName\n        image\n        lastMessage\n        lastMessageCreatedAt\n      }\n      likes {\n        id\n        user\n        post\n      }\n      posts {\n        id\n      }\n      following {\n        id\n        user\n      }\n      followers {\n        id\n      }\n    }\n  }\n`;\n\n/**\n * Gets all available users\n */\nexport const GET_USERS = gql`\n  query($userId: String!, $skip: Int, $limit: Int) {\n    getUsers(userId: $userId, skip: $skip, limit: $limit) {\n      count\n      users {\n        id\n        fullName\n        username\n        image\n        following {\n          id\n          user\n        }\n        followers {\n          id\n        }\n        notifications {\n          id\n          author {\n            id\n            username\n          }\n          follow {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\n/**\n * Searches users by username or fullName\n */\nexport const SEARCH_USERS = gql`\n  query($searchQuery: String!) {\n    searchUsers(searchQuery: $searchQuery) {\n      id\n      fullName\n      username\n      image\n    }\n  }\n`;\n\n/**\n * Uploads user photo\n */\nexport const UPLOAD_PHOTO = gql`\n  mutation($input: UploadUserPhotoInput!) {\n    uploadUserPhoto(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Sign up user\n */\nexport const SIGN_UP = gql`\n  mutation($input: SignUpInput!) {\n    signup(input: $input) {\n      token\n    }\n  }\n`;\n\n/**\n * Sign in user\n */\nexport const SIGN_IN = gql`\n  mutation($input: SignInInput!) {\n    signin(input: $input) {\n      token\n    }\n  }\n`;\n\n/**\n * Request reset password\n */\nexport const REQUEST_PASSWORD_RESET = gql`\n  mutation($input: RequestPasswordResetInput!) {\n    requestPasswordReset(input: $input) {\n      message\n    }\n  }\n`;\n\n/**\n * Verify reset password token\n */\nexport const VERIFY_RESET_PASSWORD_TOKEN = gql`\n  query($email: String!, $token: String!) {\n    verifyResetPasswordToken(email: $email, token: $token) {\n      message\n    }\n  }\n`;\n\n/**\n * Reset password\n */\nexport const RESET_PASSWORD = gql`\n  mutation($input: ResetPasswordInput!) {\n    resetPassword(input: $input) {\n      token\n    }\n  }\n`;\n\n/**\n * People suggestions for auth user\n */\nexport const USER_SUGGESTIONS = gql`\n  query($userId: String!) {\n    suggestPeople(userId: $userId) {\n      id\n      fullName\n      username\n      image\n    }\n  }\n`;\n\n/**\n * Get users with whom authUser had a conversation\n */\nexport const GET_CONVERSATIONS = gql`\n  query($authUserId: ID!) {\n    getConversations(authUserId: $authUserId) {\n      id\n      username\n      fullName\n      image\n      isOnline\n      seen\n      lastMessage\n      lastMessageSender\n      lastMessageCreatedAt\n    }\n  }\n`;\n\n/**\n * Checks if user is online in real time\n */\nexport const IS_USER_ONLINE_SUBSCRIPTION = gql`\n  subscription($authUserId: ID!, $userId: ID!) {\n    isUserOnline(authUserId: $authUserId, userId: $userId) {\n      userId\n      isOnline\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\n/**\n * Gets user's specific conversation\n */\nexport const GET_MESSAGES = gql`\n  query($authUserId: ID!, $userId: ID!) {\n    getMessages(authUserId: $authUserId, userId: $userId) {\n      id\n      receiver {\n        id\n        username\n        fullName\n        image\n        createdAt\n      }\n      sender {\n        id\n        username\n        fullName\n        image\n        createdAt\n      }\n      message\n      createdAt\n    }\n  }\n`;\n\n/**\n * Gets user's specific conversation in real time\n */\nexport const GET_MESSAGES_SUBSCRIPTION = gql`\n  subscription($authUserId: ID!, $userId: ID!) {\n    messageCreated(authUserId: $authUserId, userId: $userId) {\n      id\n      receiver {\n        id\n        username\n        fullName\n        image\n        createdAt\n      }\n      sender {\n        id\n        username\n        fullName\n        image\n        createdAt\n      }\n      message\n      createdAt\n    }\n  }\n`;\n\n/**\n * Creates a message\n */\nexport const CREATE_MESSAGE = gql`\n  mutation($input: CreateMessageInput!) {\n    createMessage(input: $input) {\n      id\n      isFirstMessage\n    }\n  }\n`;\n\n/**\n * Get user's new conversation in real time\n */\nexport const GET_NEW_CONVERSATIONS_SUBSCRIPTION = gql`\n  subscription {\n    newConversation {\n      id\n      username\n      fullName\n      image\n      isOnline\n      seen\n      lastMessage\n      lastMessageSender\n      lastMessageCreatedAt\n    }\n  }\n`;\n\n/**\n * Updates message seen property\n */\nexport const UPDATE_MESSAGE_SEEN = gql`\n  mutation($input: UpdateMessageSeenInput!) {\n    updateMessageSeen(input: $input)\n  }\n`;\n","import gql from 'graphql-tag';\n\n/**\n * Records to select from notifications\n */\nconst notificationPayload = `\n  id\n  createdAt\n  author {\n    id\n    fullName\n    username\n    image\n  }\n  follow {\n    id\n  }\n  comment {\n    id\n    post {\n      id\n      image\n    }\n  }\n  like {\n    id\n    post {\n      id\n      image\n    }\n  }\n`;\n\n/**\n * Creates a notification for user\n */\nexport const CREATE_NOTIFICATION = gql`\n  mutation($input: CreateNotificationInput!) {\n    createNotification(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Deletes a notification\n */\nexport const DELETE_NOTIFICATION = gql`\n  mutation($input: DeleteNotificationInput!) {\n    deleteNotification(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Gets notifications for user\n */\nexport const GET_USER_NOTIFICATION = gql`\n  query($userId: ID!, $skip: Int, $limit: Int) {\n    getUserNotifications(userId: $userId, skip: $skip, limit: $limit) {\n      count\n      notifications {\n        ${notificationPayload}\n      }\n    }\n  }\n`;\n\n/**\n * Updates notification seen property\n */\nexport const UPDATE_NOTIFICATION_SEEN = gql`\n  mutation($input: UpdateNotificationSeenInput!) {\n    updateNotificationSeen(input: $input)\n  }\n`;\n\n/**\n * Get user's notifications in real time\n */\nexport const NOTIFICATION_CREATED_OR_DELETED = gql`\n  subscription {\n    notificationCreatedOrDeleted {\n      operation\n      notification {\n        ${notificationPayload}\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * User icon, that uses theme color options\n *\n * @param {string} width\n * @param {string} color\n */\nexport const UserIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '24';\n  const DEFAULT_COLOR = theme.colors.grey[600];\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width || DEFAULT_WIDTH}\n      viewBox=\"0 0 53 53\"\n    >\n      <path\n        d=\"M18.613 41.552l-7.907 4.313a7.106 7.106 0 0 0-1.269.903A26.377 26.377 0 0 0 26.5 53c6.454 0 12.367-2.31 16.964-6.144a7.015 7.015 0 0 0-1.394-.934l-8.467-4.233a3.229 3.229 0 0 1-1.785-2.888v-3.322c.238-.271.51-.619.801-1.03a19.482 19.482 0 0 0 2.632-5.304c1.086-.335 1.886-1.338 1.886-2.53v-3.546c0-.78-.347-1.477-.886-1.965v-5.126s1.053-7.977-9.75-7.977-9.75 7.977-9.75 7.977v5.126a2.644 2.644 0 0 0-.886 1.965v3.546c0 .934.491 1.756 1.226 2.231.886 3.857 3.206 6.633 3.206 6.633v3.24a3.232 3.232 0 0 1-1.684 2.833z\"\n        fill=\"#e7eced\"\n      />\n      <path\n        d=\"M26.953.004C12.32-.246.254 11.414.004 26.047-.138 34.344 3.56 41.801 9.448 46.76a7.041 7.041 0 0 1 1.257-.894l7.907-4.313a3.23 3.23 0 0 0 1.683-2.835v-3.24s-2.321-2.776-3.206-6.633a2.66 2.66 0 0 1-1.226-2.231v-3.546c0-.78.347-1.477.886-1.965v-5.126S15.696 8 26.499 8s9.75 7.977 9.75 7.977v5.126c.54.488.886 1.185.886 1.965v3.546c0 1.192-.8 2.195-1.886 2.53a19.482 19.482 0 0 1-2.632 5.304c-.291.411-.563.759-.801 1.03V38.8c0 1.223.691 2.342 1.785 2.888l8.467 4.233a7.05 7.05 0 0 1 1.39.932c5.71-4.762 9.399-11.882 9.536-19.9C53.246 12.32 41.587.254 26.953.004z\"\n        fill={theme.colors[color] || DEFAULT_COLOR}\n      />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Close (X) icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const CloseIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '12';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 47.971 47.971\"\n    >\n      <path d=\"M28.228 23.986L47.092 5.122a2.998 2.998 0 0 0 0-4.242 2.998 2.998 0 0 0-4.242 0L23.986 19.744 5.121.88a2.998 2.998 0 0 0-4.242 0 2.998 2.998 0 0 0 0 4.242l18.865 18.864L.879 42.85a2.998 2.998 0 1 0 4.242 4.241l18.865-18.864L42.85 47.091c.586.586 1.354.879 2.121.879s1.535-.293 2.121-.879a2.998 2.998 0 0 0 0-4.242L28.228 23.986z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Upload image icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const UploadImageIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '20';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 100 100\"\n      width={width || DEFAULT_WIDTH}\n    >\n      <path\n        d=\"M50 40c-8.285 0-15 6.718-15 15 0 8.285 6.715 15 15 15 8.283 0 15-6.715 15-15 0-8.282-6.717-15-15-15zm40-15H78c-1.65 0-3.428-1.28-3.949-2.846l-3.102-9.309C70.426 11.28 68.65 10 67 10H33c-1.65 0-3.428 1.28-3.949 2.846l-3.102 9.309C25.426 23.72 23.65 25 22 25H10C4.5 25 0 29.5 0 35v45c0 5.5 4.5 10 10 10h80c5.5 0 10-4.5 10-10V35c0-5.5-4.5-10-10-10zM50 80c-13.807 0-25-11.193-25-25 0-13.806 11.193-25 25-25 13.805 0 25 11.194 25 25 0 13.807-11.195 25-25 25zm36.5-38.007a3.5 3.5 0 1 1 0-7 3.5 3.5 0 0 1 0 7z\"\n        fill={theme.colors[color] || DEFAULT_COLOR}\n      />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\nimport { get } from 'lodash';\n\n/**\n * Post like icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const LikeIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '18';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width || DEFAULT_WIDTH}\n      fill={get(theme.colors, color) || DEFAULT_COLOR}\n      viewBox=\"0 0 511.999 511.999\"\n    >\n      <path d=\"M83.578 167.256H16.716C7.524 167.256 0 174.742 0 183.971v300.881c0 9.225 7.491 16.713 16.716 16.713h66.862c9.225 0 16.716-7.489 16.716-16.713V183.971c0-9.229-7.525-16.715-16.716-16.715zM470.266 167.256c-2.692-.456-128.739 0-128.739 0l17.606-48.032c12.148-33.174 4.283-83.827-29.424-101.835-10.975-5.864-26.309-8.809-38.672-5.697-7.09 1.784-13.321 6.478-17.035 12.767-4.271 7.233-3.83 15.676-5.351 23.696-3.857 20.342-13.469 39.683-28.354 54.2-25.952 25.311-106.571 98.331-106.571 98.331v267.45h278.593c37.592.022 62.228-41.958 43.687-74.749 22.101-14.155 29.66-43.97 16.716-66.862 22.102-14.155 29.66-43.97 16.716-66.862 38.134-24.423 25.385-84.871-19.172-92.407z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Post comment icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const PostCommentIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '18';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 58 58\"\n      width={width || DEFAULT_WIDTH}\n    >\n      <path\n        d=\"M29 1.5c-16.016 0-29 11.641-29 26 0 5.292 1.768 10.211 4.796 14.318C4.398 46.563 3.254 53.246 0 56.5c0 0 9.943-1.395 16.677-5.462l.022.009c2.764-1.801 5.532-3.656 6.105-4.126.3-.421.879-.548 1.33-.277.296.178.483.503.489.848.01.622-.005.784-5.585 4.421A31.914 31.914 0 0 0 29 53.5c16.016 0 29-11.641 29-26s-12.984-26-29-26z\"\n        fill={theme.colors[color] || DEFAULT_COLOR}\n      />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Explore page icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const ExploreIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '28';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 487.601 487.601\"\n    >\n      <path d=\"M379 229.65c-25.6 0-46.3 20.8-46.3 46.3 0 6.1 5 11.1 11.1 11.1s11.1-5 11.1-11.1c0-13.3 10.9-24.2 24.2-24.2 6.1 0 11.1-5 11.1-11.1-.1-6.1-5.1-11-11.2-11z\" />\n      <path d=\"M454.5 197.75c-2.7-2.6-5.6-5.1-8.6-7.5l-41-34.8c-15.8-11.2-34.6-18.3-55-19.7l2.2 2.2-24.9-25h-.2c-6.9-6.3-16.2-10.2-26.3-10.2-17.4 0-32.1 11.3-37.1 27-5-3.2-10.8-5.1-17.1-5.5-1-.1-2.1-.1-3.1-.1-7.1 0-13.7 2.1-19.3 5.6-5.1-15.6-19.8-26.9-37.1-26.9-10.1 0-19.3 3.8-26.3 10.2h-.2l-24.9 25 2.2-2.2c-20.4 1.4-39.3 8.6-55 19.7l-41 34.8c-3 2.3-5.9 4.8-8.6 7.5-20.5 19.8-33.2 47.5-33.2 78.2 0 60 48.8 108.8 108.8 108.8 55.4 0 101.3-41.7 107.9-95.4 8 4.6 17.3 7.2 27.1 7.2 9.9 0 19.1-2.6 27.1-7.2 6.7 53.6 52.5 95.3 107.9 95.3 60 0 108.8-48.8 108.8-108.8.1-30.7-12.6-58.4-33.1-78.2zm-345.7 152.5c-41 0-74.2-33.2-74.2-74.2s33.2-74.2 74.2-74.2 74.2 33.2 74.2 74.2c.1 40.9-33.2 74.2-74.2 74.2zm135.1-84.4c-13.3 0-24.1-10.8-24.1-24.1s10.8-24.1 24.1-24.1 24.1 10.8 24.1 24.1-10.8 24.1-24.1 24.1zm135.1 84.4c-41 0-74.2-33.2-74.2-74.2s33.2-74.2 74.2-74.2 74.2 33.2 74.2 74.2c0 40.9-33.2 74.2-74.2 74.2z\" />\n      <path d=\"M108.8 229.65c-25.6 0-46.3 20.8-46.3 46.3 0 6.1 5 11.1 11.1 11.1s11.1-5 11.1-11.1c0-13.3 10.9-24.2 24.2-24.2 6.1 0 11.1-5 11.1-11.1-.1-6.1-5.1-11-11.2-11z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Notifications icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const NotificationIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '23';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 611.999 611.999\"\n    >\n      <path d=\"M570.107 500.254c-65.037-29.371-67.511-155.441-67.559-158.622v-84.578c0-81.402-49.742-151.399-120.427-181.203C381.969 34 347.883 0 306.001 0c-41.883 0-75.968 34.002-76.121 75.849-70.682 29.804-120.425 99.801-120.425 181.203v84.578c-.046 3.181-2.522 129.251-67.561 158.622a17.257 17.257 0 0 0 7.103 32.986h164.88c3.38 18.594 12.172 35.892 25.619 49.903 17.86 18.608 41.479 28.856 66.502 28.856 25.025 0 48.644-10.248 66.502-28.856 13.449-14.012 22.241-31.311 25.619-49.903h164.88a17.26 17.26 0 0 0 16.872-13.626 17.25 17.25 0 0 0-9.764-19.358zm-85.673-60.395c6.837 20.728 16.518 41.544 30.246 58.866H97.32c13.726-17.32 23.407-38.135 30.244-58.866h356.87zM306.001 34.515c18.945 0 34.963 12.73 39.975 30.082-12.912-2.678-26.282-4.09-39.975-4.09s-27.063 1.411-39.975 4.09c5.013-17.351 21.031-30.082 39.975-30.082zM143.97 341.736v-84.685c0-89.343 72.686-162.029 162.031-162.029s162.031 72.686 162.031 162.029v84.826c.023 2.596.427 29.879 7.303 63.465H136.663c6.88-33.618 7.286-60.949 7.307-63.606zm162.031 235.749c-26.341 0-49.33-18.992-56.709-44.246h113.416c-7.379 25.254-30.364 44.246-56.707 44.246z\" />\n      <path d=\"M306.001 119.235c-74.25 0-134.657 60.405-134.657 134.654 0 9.531 7.727 17.258 17.258 17.258 9.531 0 17.258-7.727 17.258-17.258 0-55.217 44.923-100.139 100.142-100.139 9.531 0 17.258-7.727 17.258-17.258-.001-9.532-7.728-17.257-17.259-17.257z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Menu icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const MenuIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '18';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n    >\n      <path d=\"M491.318 235.318H20.682C9.26 235.318 0 244.577 0 256s9.26 20.682 20.682 20.682h470.636c11.423 0 20.682-9.259 20.682-20.682 0-11.422-9.259-20.682-20.682-20.682zM491.318 78.439H20.682C9.26 78.439 0 87.699 0 99.121c0 11.422 9.26 20.682 20.682 20.682h470.636c11.423 0 20.682-9.26 20.682-20.682 0-11.422-9.259-20.682-20.682-20.682zM491.318 392.197H20.682C9.26 392.197 0 401.456 0 412.879s9.26 20.682 20.682 20.682h470.636c11.423 0 20.682-9.259 20.682-20.682s-9.259-20.682-20.682-20.682z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Home icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const HomeIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '18';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n    >\n      <path d=\"M506.555 208.064L263.859 30.367a13.3 13.3 0 0 0-15.716 0L5.445 208.064c-5.928 4.341-7.216 12.665-2.875 18.593s12.666 7.214 18.593 2.875L256 57.588l234.837 171.943a13.236 13.236 0 0 0 7.848 2.57c4.096 0 8.138-1.885 10.744-5.445 4.342-5.927 3.054-14.251-2.874-18.592z\" />\n      <path d=\"M442.246 232.543c-7.346 0-13.303 5.956-13.303 13.303v211.749H322.521V342.009c0-36.68-29.842-66.52-66.52-66.52s-66.52 29.842-66.52 66.52v115.587H83.058V245.847c0-7.347-5.957-13.303-13.303-13.303s-13.303 5.956-13.303 13.303V470.9c0 7.347 5.957 13.303 13.303 13.303h133.029c6.996 0 12.721-5.405 13.251-12.267.032-.311.052-.651.052-1.036V342.01c0-22.009 17.905-39.914 39.914-39.914s39.914 17.906 39.914 39.914V470.9c0 .383.02.717.052 1.024.524 6.867 6.251 12.279 13.251 12.279h133.029c7.347 0 13.303-5.956 13.303-13.303V245.847c-.001-7.348-5.957-13.304-13.304-13.304z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * People icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const PeopleIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '20';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 505.4 505.4\"\n    >\n      <path d=\"M437.1 233.45c14.8-10.4 24.6-27.7 24.6-47.2 0-31.9-25.8-57.7-57.7-57.7-31.9 0-57.7 25.8-57.7 57.7 0 19.5 9.7 36.8 24.6 47.2-12.7 4.4-24.3 11.2-34.1 20-13.5-11.5-29.4-20.3-46.8-25.5 21.1-12.8 35.3-36.1 35.3-62.6 0-40.4-32.7-73.1-73.1-73.1-40.4 0-73.1 32.8-73.1 73.1 0 26.5 14.1 49.8 35.3 62.6-17.2 5.2-32.9 13.9-46.3 25.2-9.8-8.6-21.2-15.3-33.7-19.6 14.8-10.4 24.6-27.7 24.6-47.2 0-31.9-25.8-57.7-57.7-57.7s-57.7 25.8-57.7 57.7c0 19.5 9.7 36.8 24.6 47.2-39.7 13.7-68.2 51.4-68.2 95.7v6.6c0 .2.2.4.4.4h122.3c-.7 5.5-1.1 11.2-1.1 16.9v6.8c0 29.4 23.8 53.2 53.2 53.2h155c29.4 0 53.2-23.8 53.2-53.2v-6.8c0-5.7-.4-11.4-1.1-16.9H505c.2 0 .4-.2.4-.4v-6.6c-.2-44.4-28.6-82.1-68.3-95.8zm-74.8-47.3c0-23 18.7-41.7 41.7-41.7s41.7 18.7 41.7 41.7c0 22.7-18.3 41.2-40.9 41.7h-1.6c-22.7-.4-40.9-18.9-40.9-41.7zm-167.4-20.8c0-31.5 25.6-57.1 57.1-57.1s57.1 25.6 57.1 57.1c0 30.4-23.9 55.3-53.8 57h-6.6c-29.9-1.7-53.8-26.6-53.8-57zm-135.6 20.8c0-23 18.7-41.7 41.7-41.7s41.7 18.7 41.7 41.7c0 22.7-18.3 41.2-40.9 41.7h-1.6c-22.6-.4-40.9-18.9-40.9-41.7zm66.2 134H16.2c4.5-42.6 40.5-76 84.2-76.3h1.2c20.8.1 39.8 7.8 54.5 20.3-14.4 15.6-25.1 34.8-30.6 56zm241.3 39.8c0 20.5-16.7 37.2-37.2 37.2h-155c-20.5 0-37.2-16.7-37.2-37.2v-6.8c0-62.1 49.6-112.9 111.3-114.7 1.1.1 2.3.1 3.4.1s2.3 0 3.4-.1c61.7 1.8 111.3 52.6 111.3 114.7v6.8zm11.9-39.8c-5.5-21.1-16-40-30.3-55.6 14.8-12.8 34-20.5 55-20.7h1.2c43.7.3 79.7 33.7 84.2 76.3H378.7z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Search icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const SearchIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '16';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 56.966 56.966\"\n    >\n      <path d=\"M55.146 51.887L41.588 37.786A22.926 22.926 0 0 0 46.984 23c0-12.682-10.318-23-23-23s-23 10.318-23 23 10.318 23 23 23c4.761 0 9.298-1.436 13.177-4.162l13.661 14.208c.571.593 1.339.92 2.162.92.779 0 1.518-.297 2.079-.837a3.004 3.004 0 0 0 .083-4.242zM23.984 6c9.374 0 17 7.626 17 17s-7.626 17-17 17-17-7.626-17-17 7.626-17 17-17z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Dots icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const DotsIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '17';\n  const DEFAULT_COLOR = theme.colors.text.primary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      viewBox=\"0 0 612 612\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle cx=\"69.545\" cy=\"306\" r=\"69.545\" />\n      <circle cx=\"306\" cy=\"306\" r=\"69.545\" />\n      <circle cx=\"542.455\" cy=\"306\" r=\"69.545\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Post like icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const InfoIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '22';\n  const DEFAULT_COLOR = theme.colors.white;\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      viewBox=\"0 0 330 330\"\n    >\n      <path d=\"M165 0C74.019 0 0 74.02 0 165.001 0 255.982 74.019 330 165 330s165-74.018 165-164.999S255.981 0 165 0zm0 300c-74.44 0-135-60.56-135-134.999S90.56 30 165 30s135 60.562 135 135.001C300 239.44 239.439 300 165 300z\" />\n      <path d=\"M164.998 70c-11.026 0-19.996 8.976-19.996 20.009 0 11.023 8.97 19.991 19.996 19.991 11.026 0 19.996-8.968 19.996-19.991 0-11.033-8.97-20.009-19.996-20.009zM165 140c-8.284 0-15 6.716-15 15v90c0 8.284 6.716 15 15 15 8.284 0 15-6.716 15-15v-90c0-8.284-6.716-15-15-15z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Post like icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const WarningIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '22';\n  const DEFAULT_COLOR = theme.colors.white;\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      viewBox=\"0 0 512 512\"\n    >\n      <path d=\"M256 0C114.497 0 0 114.507 0 256c0 141.503 114.507 256 256 256 141.503 0 256-114.507 256-256C512 114.497 397.493 0 256 0zm0 472c-119.393 0-216-96.615-216-216 0-119.393 96.615-216 216-216 119.393 0 216 96.615 216 216 0 119.393-96.615 216-216 216z\" />\n      <path d=\"M256 128.877c-11.046 0-20 8.954-20 20V277.67c0 11.046 8.954 20 20 20s20-8.954 20-20V148.877c0-11.046-8.954-20-20-20z\" />\n      <circle cx=\"256\" cy=\"349.16\" r=\"27\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Post like icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const ErrorIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '22';\n  const DEFAULT_COLOR = theme.colors.white;\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 486.463 486.463\"\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n    >\n      <path d=\"M243.225 333.382c-13.6 0-25 11.4-25 25s11.4 25 25 25c13.1 0 25-11.4 24.4-24.4.6-14.3-10.7-25.6-24.4-25.6z\" />\n      <path d=\"M474.625 421.982c15.7-27.1 15.8-59.4.2-86.4l-156.6-271.2c-15.5-27.3-43.5-43.5-74.9-43.5s-59.4 16.3-74.9 43.4l-156.8 271.5c-15.6 27.3-15.5 59.8.3 86.9 15.6 26.8 43.5 42.9 74.7 42.9h312.8c31.3 0 59.4-16.3 75.2-43.6zm-34-19.6c-8.7 15-24.1 23.9-41.3 23.9h-312.8c-17 0-32.3-8.7-40.8-23.4-8.6-14.9-8.7-32.7-.1-47.7l156.8-271.4c8.5-14.9 23.7-23.7 40.9-23.7 17.1 0 32.4 8.9 40.9 23.8l156.7 271.4c8.4 14.6 8.3 32.2-.3 47.1z\" />\n      <path d=\"M237.025 157.882c-11.9 3.4-19.3 14.2-19.3 27.3.6 7.9 1.1 15.9 1.7 23.8 1.7 30.1 3.4 59.6 5.1 89.7.6 10.2 8.5 17.6 18.7 17.6s18.2-7.9 18.7-18.2c0-6.2 0-11.9.6-18.2 1.1-19.3 2.3-38.6 3.4-57.9.6-12.5 1.7-25 2.3-37.5 0-4.5-.6-8.5-2.3-12.5-5.1-11.2-17-16.9-28.9-14.1z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Post like icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const SuccessIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '22';\n  const DEFAULT_COLOR = theme.colors.white;\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      viewBox=\"0 0 512 512\"\n    >\n      <path d=\"M468.907 214.604c-11.423 0-20.682 9.26-20.682 20.682v20.831c-.031 54.338-21.221 105.412-59.666 143.812-38.417 38.372-89.467 59.5-143.761 59.5h-.12C132.506 459.365 41.3 368.056 41.364 255.883c.031-54.337 21.221-105.411 59.667-143.813 38.417-38.372 89.468-59.5 143.761-59.5h.12c28.672.016 56.49 5.942 82.68 17.611 10.436 4.65 22.659-.041 27.309-10.474 4.648-10.433-.04-22.659-10.474-27.309-31.516-14.043-64.989-21.173-99.492-21.192h-.144c-65.329 0-126.767 25.428-172.993 71.6C25.536 129.014.038 190.473 0 255.861c-.037 65.386 25.389 126.874 71.599 173.136 46.21 46.262 107.668 71.76 173.055 71.798h.144c65.329 0 126.767-25.427 172.993-71.6 46.262-46.209 71.76-107.668 71.798-173.066v-20.842c0-11.423-9.259-20.683-20.682-20.683z\" />\n      <path d=\"M505.942 39.803c-8.077-8.076-21.172-8.076-29.249 0L244.794 271.701l-52.609-52.609c-8.076-8.077-21.172-8.077-29.248 0-8.077 8.077-8.077 21.172 0 29.249l67.234 67.234a20.616 20.616 0 0 0 14.625 6.058 20.618 20.618 0 0 0 14.625-6.058L505.942 69.052c8.077-8.077 8.077-21.172 0-29.249z\" />\n    </svg>\n  );\n};\n","import React from 'react';\n\n/**\n * Delete (trash) icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const EmptyIcon = () => {\n  return (\n    <svg\n      width=\"100\"\n      height=\"100\"\n      viewBox=\"0 0 184 152\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g fill=\"none\" fillRule=\"evenodd\">\n        <g transform=\"translate(24 31.67)\">\n          <ellipse\n            fillOpacity=\".8\"\n            fill=\"#f5f5f7\"\n            cx=\"67.797\"\n            cy=\"106.89\"\n            rx=\"67.797\"\n            ry=\"12.668\"\n          />\n          <path\n            d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\n            fill=\"#aeb8c2\"\n          />\n          <path\n            d=\"M101.537 86.214L80.63 61.102c-1.001-1.207-2.507-1.867-4.048-1.867H31.724c-1.54 0-3.047.66-4.048 1.867L6.769 86.214v13.792h94.768V86.214z\"\n            fill=\"url(&quot;#linearGradient-1&quot;)\"\n            transform=\"translate(13.56)\"\n          />\n          <path\n            d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\n            fill=\"#f5f5f7\"\n          />\n          <path\n            d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zm.262 39.814h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zm0 11.763h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zm78.873 43.502c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569a7.33 7.33 0 0 1-.221 1.789z\"\n            fill=\"#dce0e6\"\n          />\n        </g>\n        <path\n          d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\n          fill=\"#dce0e6\"\n        />\n        <g transform=\"translate(149.65 15.383)\" fill=\"#fff\">\n          <ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\" />\n          <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\" />\n        </g>\n      </g>\n    </svg>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundIcon = () => {\n  return (\n    <svg\n      width=\"100\"\n      height=\"130\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n    >\n      <path\n        d=\"M86.071 441.452a18.896 18.896 0 0 1 4.213 15.326l-6.891 41.43a8.091 8.091 0 0 1-9.304 6.659c-4.404-.736-7.379-4.91-6.645-9.323l6.891-41.431a2.673 2.673 0 0 0-.601-2.189 2.66 2.66 0 0 0-2.057-.955H32.452a2.66 2.66 0 0 0-2.057.955 2.675 2.675 0 0 0-.603 2.189l6.891 41.431c.734 4.414-2.241 8.587-6.645 9.323-4.401.734-8.569-2.246-9.303-6.659l-6.891-41.431a18.9 18.9 0 0 1 4.215-15.327 18.814 18.814 0 0 1 14.393-6.684H45.81v-83.172c0-4.474 3.62-8.101 8.084-8.101h118.568c4.465 0 8.084 3.627 8.084 8.101s-3.62 8.101-8.084 8.101H61.979v75.071h9.699a18.811 18.811 0 0 1 14.393 6.686zm245.382 39.221H180.547c-4.465 0-8.084 3.627-8.084 8.101 0 4.474 3.62 8.101 8.084 8.101h150.905c4.465 0 8.084-3.627 8.084-8.101.001-4.474-3.619-8.101-8.083-8.101z\"\n        fill=\"#84a7b7\"\n      />\n      <path\n        d=\"M378.65 300.935l-28.255 113.257c-4.799 19.234-22.044 32.727-41.829 32.727H203.431c-19.785 0-37.03-13.493-41.829-32.727l-28.255-113.257c-3.402-13.635 6.889-26.843 20.914-26.843h203.473c14.028 0 24.318 13.209 20.916 26.843z\"\n        fill=\"#547d87\"\n      />\n      <path\n        d=\"M481.302 356.408a8.081 8.081 0 0 1-7.028 4.097H319.97c-10.419 25.812-35.553 43.206-63.97 43.206-31.674 0-59.284-21.602-66.966-52.395l-5.872-23.538c-6.804-27.27 13.779-53.686 41.829-53.686h117.242l-17.516 70.211h135.338L385.263 218.39a42.827 42.827 0 0 1-21.473 5.746H148.212c-23.812 0-43.116-19.344-43.116-43.206v-21.603c0-83.519 67.562-151.223 150.905-151.223s150.905 67.705 150.905 151.223v21.603a43.069 43.069 0 0 1-9.224 26.691l83.539 140.642a8.116 8.116 0 0 1 .081 8.145z\"\n        fill=\"#6b95a0\"\n      />\n      <path\n        d=\"M503.916 328.1c0 17.896-14.477 32.405-32.337 32.405-17.86 0-32.337-14.508-32.337-32.405 0-17.896 14.477-32.405 32.337-32.405 17.86 0 32.337 14.509 32.337 32.405zM40.421 295.695c-17.86 0-32.337 14.508-32.337 32.405s14.477 32.405 32.337 32.405 32.337-14.508 32.337-32.405c0-17.896-14.477-32.405-32.337-32.405z\"\n        fill=\"#547d87\"\n      />\n      <path\n        d=\"M51.2 328.1c0 5.966-4.826 10.802-10.779 10.802s-10.779-4.835-10.779-10.802 4.826-10.802 10.779-10.802S51.2 322.135 51.2 328.1zm420.379-10.801c-5.953 0-10.779 4.835-10.779 10.802s4.826 10.802 10.779 10.802 10.779-4.835 10.779-10.802c0-5.966-4.826-10.802-10.779-10.802z\"\n        fill=\"#6b95a0\"\n      />\n      <path\n        d=\"M199.411 381.029v1.08c0 4.474-3.62 8.101-8.084 8.101-4.465 0-8.084-3.627-8.084-8.101v-1.08c0-4.474 3.62-8.101 8.084-8.101 4.464 0 8.084 3.627 8.084 8.101z\"\n        fill=\"#fc8059\"\n      />\n      <path\n        d=\"M231.747 381.029v1.08c0 4.474-3.62 8.101-8.084 8.101-4.465 0-8.084-3.627-8.084-8.101v-1.08c0-4.474 3.62-8.101 8.084-8.101 4.465 0 8.084 3.627 8.084 8.101z\"\n        fill=\"#ffd880\"\n      />\n      <path\n        d=\"M317.979 381.029v1.08c0 4.474-3.62 8.101-8.084 8.101-4.465 0-8.084-3.627-8.084-8.101v-1.08c0-4.474 3.62-8.101 8.084-8.101 4.464 0 8.084 3.627 8.084 8.101z\"\n        fill=\"#b5e5bc\"\n      />\n      <path\n        d=\"M212.884 349.703h-21.558c-5.953 0-10.779-4.826-10.779-10.779v-21.648c0-5.953 4.826-10.779 10.779-10.779h21.558c5.953 0 10.779 4.826 10.779 10.779v21.648c0 5.954-4.826 10.779-10.779 10.779z\"\n        fill=\"#cfdfe2\"\n      />\n      <path\n        d=\"M158.989 121.519c0-29.827 24.13-54.008 53.895-54.008s53.895 24.18 53.895 54.008-24.13 54.008-53.895 54.008-53.895-24.18-53.895-54.008z\"\n        fill=\"#547d87\"\n      />\n      <path\n        d=\"M180.547 121.519c0-17.896 14.477-32.405 32.337-32.405s32.337 14.508 32.337 32.405-14.477 32.405-32.337 32.405-32.337-14.508-32.337-32.405z\"\n        fill=\"#cfdfe2\"\n      />\n      <path\n        d=\"M212.884 121.519c0-8.949 7.239-16.203 16.168-16.203s16.168 7.254 16.168 16.203-7.239 16.203-16.168 16.203-16.168-7.254-16.168-16.203z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M427.65 41.321c44.199 44.292 44.199 116.104 0 160.396s-115.86 44.292-160.059 0-44.199-116.104 0-160.396 115.86-44.292 160.059 0z\"\n        fill=\"#84a7b7\"\n      />\n      <path\n        d=\"M423.074 121.519c0 41.759-33.781 75.611-75.453 75.611s-75.453-33.852-75.453-75.611 33.781-75.611 75.453-75.611 75.453 33.853 75.453 75.611z\"\n        fill=\"#c3e4ed\"\n      />\n      <path\n        d=\"M392.807 60.962a75.77 75.77 0 0 1 25.89 35.159l-96.422 96.625c-14.102-5.04-26.274-14.155-35.084-25.945L392.807 60.962zm-116.262 85.956a75.226 75.226 0 0 0 4.534 10.256L383.201 54.836a74.936 74.936 0 0 0-10.235-4.542l-96.421 96.624z\"\n        fill=\"#dcf3f9\"\n      />\n      <path\n        d=\"M347.957 64.98c11.906 0 21.558 9.672 21.558 21.603s-9.651 21.603-21.558 21.603c-11.906 0-21.558-9.672-21.558-21.603s9.653-21.603 21.558-21.603z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M339.537 500.928c0 4.474-3.618 8.101-8.084 8.101H180.547c-4.466 0-8.084-3.627-8.084-8.101 0-4.474 3.618-8.101 8.084-8.101h150.905c4.466-.001 8.085 3.626 8.085 8.101zM512 328.101c0 22.335-18.132 40.506-40.421 40.506-15.48 0-28.955-8.765-35.743-21.603H369.36a10.21 10.21 0 0 1-.35 0h-91.452c-4.466 0-8.084-3.626-8.084-8.101s3.618-8.101 8.084-8.101h85.31l7.94-31.831a13.442 13.442 0 0 0-2.45-11.583 13.38 13.38 0 0 0-10.62-5.193H154.263a13.38 13.38 0 0 0-10.62 5.193 13.436 13.436 0 0 0-2.45 11.583l28.255 113.255c3.905 15.658 17.881 26.592 33.985 26.592h105.135c16.104 0 30.08-10.934 33.985-26.592l13.394-53.686a8.09 8.09 0 0 1 9.805-5.895c4.332 1.085 6.965 5.484 5.882 9.825l-13.394 53.686c-5.709 22.882-26.134 38.863-49.672 38.863H203.432c-23.538 0-43.963-15.982-49.672-38.865l-16.51-66.182H76.164c-5.574 10.541-15.659 18.338-27.659 20.79v71.024h11.528a18.815 18.815 0 0 1 14.393 6.685 18.894 18.894 0 0 1 4.215 15.324l-6.892 41.432a8.09 8.09 0 0 1-7.965 6.77c-.441 0-.888-.036-1.339-.112-4.403-.735-7.379-4.909-6.645-9.323l6.891-41.431a2.673 2.673 0 0 0-.601-2.189 2.66 2.66 0 0 0-2.057-.955H20.809a2.66 2.66 0 0 0-2.057.955 2.673 2.673 0 0 0-.601 2.19l6.891 41.43c.734 4.414-2.242 8.588-6.645 9.323-4.42.739-8.569-2.245-9.303-6.658l-6.892-41.431a18.895 18.895 0 0 1 4.215-15.326 18.812 18.812 0 0 1 14.393-6.685h11.528v-71.023C13.909 366.999 0 350.632 0 331.072c0-22.335 18.132-40.506 40.421-40.506s40.421 18.17 40.421 40.506c0 .909-.029 1.807-.088 2.7h52.455l-7.703-30.871c-2.229-8.936-.264-18.225 5.393-25.485 5.657-7.26 14.172-11.424 23.364-11.424h203.474c9.191 0 17.708 4.165 23.364 11.424 5.657 7.261 7.622 16.55 5.393 25.485l-6.961 27.9h51.714a40.969 40.969 0 0 1-.088-2.7c0-13.215 6.348-24.973 16.148-32.37l-40.478-68.148c-33.636 18.839-74.394 20.393-109.202 4.653H148.211c-28.231 0-51.2-23.016-51.2-51.308v-21.603C97.011 71.473 168.333.001 256 .001c16.758 0 33.244 2.602 49.054 7.738 43.144-16.134 93.68-6.852 128.314 27.853 47.28 47.381 47.28 124.473 0 171.854a121.792 121.792 0 0 1-12.977 11.291l41.585 70.013a40.22 40.22 0 0 1 9.603-1.155c22.289 0 40.421 18.171 40.421 40.506zM271.391 216.034a122.731 122.731 0 0 1-9.517-8.588c-15.088-15.122-25.712-33.525-31.204-53.605a40.302 40.302 0 0 1-17.786 4.134c-22.289 0-40.421-18.171-40.421-40.506s18.132-40.506 40.421-40.506a40.408 40.408 0 0 1 19.918 5.276c5.901-17.371 15.745-33.29 29.073-46.647a121.31 121.31 0 0 1 21.024-16.852A143.114 143.114 0 0 0 256 16.203c-78.752 0-142.821 64.205-142.821 143.122v21.603c0 19.358 15.715 35.105 35.032 35.105h123.18v.001zm-45.033-94.515c0-7.695.709-15.282 2.097-22.684-4.351-3.676-9.779-5.67-15.57-5.67-13.372 0-24.253 10.903-24.253 24.303s10.88 24.303 24.253 24.303a24.175 24.175 0 0 0 14.441-4.784 123.37 123.37 0 0 1-.968-15.468zm195.575 74.47c19.851-19.891 30.783-46.339 30.783-74.47s-10.932-54.578-30.783-74.47c-19.849-19.893-46.241-30.847-74.312-30.847-13.492 0-26.594 2.531-38.769 7.367-.401.202-.818.37-1.247.504-12.676 5.227-24.313 12.97-34.296 22.975-19.85 19.891-30.783 46.339-30.783 74.47s10.932 54.578 30.783 74.47c40.974 41.063 107.65 41.063 148.624.001zM64.674 331.072c0-13.4-10.88-24.303-24.253-24.303s-24.253 10.902-24.253 24.303c0 13.4 10.88 24.303 24.253 24.303s24.253-10.903 24.253-24.303zm431.158-2.971c0-13.4-10.88-24.303-24.253-24.303a24.078 24.078 0 0 0-10.018 2.17c-8.388 3.828-14.235 12.308-14.235 22.132a24.293 24.293 0 0 0 1.434 8.24c3.376 9.357 12.33 16.064 22.818 16.064 13.373.001 24.254-10.902 24.254-24.303zm-64.674-206.582c0 22.361-8.69 43.383-24.467 59.194-15.778 15.812-36.756 24.519-59.07 24.519s-43.291-8.708-59.07-24.519c-15.777-15.811-24.467-36.833-24.467-59.194s8.69-43.383 24.467-59.194 36.756-24.519 59.07-24.519 43.291 8.708 59.07 24.519 24.467 36.834 24.467 59.194zm-16.169 0c0-18.032-7.007-34.986-19.733-47.736-12.722-12.753-29.641-19.775-47.635-19.775s-34.913 7.022-47.635 19.774c-12.726 12.75-19.733 29.704-19.733 47.737s7.007 34.986 19.733 47.736c12.723 12.753 29.641 19.774 47.635 19.774s34.913-7.022 47.635-19.774c12.726-12.749 19.733-29.703 19.733-47.736zM212.884 298.397c10.401 0 18.863 8.48 18.863 18.903v21.603c0 10.423-8.463 18.903-18.863 18.903h-21.558c-10.401 0-18.863-8.48-18.863-18.903V317.3c0-10.423 8.463-18.903 18.863-18.903h21.558zm0 16.201h-21.558a2.7 2.7 0 0 0-2.695 2.7v21.603a2.7 2.7 0 0 0 2.695 2.7h21.558a2.7 2.7 0 0 0 2.695-2.7v-21.603a2.7 2.7 0 0 0-2.695-2.7z\"\n        fill=\"#4c4c4c\"\n      />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Envelope (message) icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const EnvelopeIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '18';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512.001 512.001\"\n    >\n      <path d=\"M511.646 126.634c-.021-14.449-11.782-26.189-26.227-26.189h-.034l-459.195.631c-7.005.009-13.588 2.746-18.535 7.706C2.709 113.743-.009 120.334 0 127.337l.355 258.029c.009 7.005 2.746 13.588 7.706 18.535 4.951 4.938 11.526 7.655 18.519 7.655h.035l459.194-.631c14.458-.02 26.207-11.799 26.19-26.261l-.353-258.03zm-55.035.076L256.02 266.154 55.04 127.262l401.571-.552zM340.846 292.471l118.971 92.265-407.972.56 119.696-92.825c5.722-4.439 6.764-12.675 2.326-18.399-4.439-5.722-12.675-6.764-18.399-2.326L26.561 371.715l-.32-232.475 222.344 153.657a13.093 13.093 0 0 0 7.455 2.325c2.617 0 5.236-.783 7.485-2.346l221.912-154.264.336 233.066-128.856-99.931c-5.719-4.437-13.959-3.396-18.397 2.326-4.439 5.722-3.398 13.96 2.326 18.398z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Envelope open (message) icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const EnvelopeOpenIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '23';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n    >\n      <path d=\"M494.2 488V187c0-3.1-3.9-7-7.7-9.9L407.8 120V56.9c0-6.2-5.2-10.4-10.4-10.4h-89.7L262 13.2c-3.1-2.1-8.3-2.1-11.5 0l-45.7 33.3h-89.7c-6.2 0-10.4 5.2-10.4 10.4v62.4L25 177.2c-4.7 2.9-7.7 6.7-7.7 9.9v303c0 5.9 4.7 10 9.6 10.4h456.8c6.7-.1 10.5-5.3 10.5-12.5zm-19.8-282.3v263.6L302.3 331.5l172.1-125.8zm-7.7-18.3l-58.9 42.9v-86.2l58.9 43.3zM255.8 32.9l18.3 13.5h-36.7l18.4-13.5zM387 67.3v178.2l-131.2 95.6-131.2-95.6V67.3H387zM37.2 205.7l172.1 125.8L37.2 470.1V205.7zm67.6 25.4l-60.4-44 60.4-43.9v87.9zM55.9 480.6L226 343.7l23.5 17.2c4.5 3.4 7.9 3.4 12.5 0l23.5-17.2 171.1 136.9H55.9z\" />\n      <path d=\"M186.1 118.3h140.5v19.8H186.1zM186.1 181.8h140.5v19.8H186.1zM186.1 245.3h140.5v19.8H186.1z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Close (X) icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const SendIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '12';\n  const DEFAULT_COLOR = theme.colors.primary.main;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      viewBox=\"0 0 448.011 448.011\"\n    >\n      <path d=\"M438.731 209.463l-416-192c-6.624-3.008-14.528-1.216-19.136 4.48a15.911 15.911 0 00-.384 19.648l136.8 182.4-136.8 182.4c-4.416 5.856-4.256 13.984.352 19.648 3.104 3.872 7.744 5.952 12.448 5.952 2.272 0 4.544-.48 6.688-1.472l416-192c5.696-2.624 9.312-8.288 9.312-14.528s-3.616-11.904-9.28-14.528z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Pencil icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const PencilIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '20';\n  const DEFAULT_COLOR = theme.colors.text.primary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      viewBox=\"0 -1 401.523 401\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M370.59 250.973c-5.524 0-10 4.476-10 10v88.789c-.02 16.562-13.438 29.984-30 30H50c-16.563-.016-29.98-13.438-30-30V89.172c.02-16.559 13.438-29.98 30-30h88.79c5.523 0 10-4.477 10-10 0-5.52-4.477-10-10-10H50c-27.602.031-49.969 22.398-50 50v260.594c.031 27.601 22.398 49.968 50 50h280.59c27.601-.032 49.969-22.399 50-50v-88.793c0-5.524-4.477-10-10-10zm0 0\" />\n      <path d=\"M376.629 13.441c-17.574-17.574-46.067-17.574-63.64 0L134.581 191.848a9.997 9.997 0 00-2.566 4.402l-23.461 84.7a9.997 9.997 0 0012.304 12.308l84.7-23.465a9.997 9.997 0 004.402-2.566l178.402-178.41c17.547-17.587 17.547-46.055 0-63.641zM156.37 198.348L302.383 52.332l47.09 47.09-146.016 146.016zm-9.406 18.875l37.62 37.625-52.038 14.418zM374.223 74.676L363.617 85.28l-47.094-47.094 10.61-10.605c9.762-9.762 25.59-9.762 35.351 0l11.739 11.734c9.746 9.774 9.746 25.59 0 35.36zm0 0\" />\n    </svg>\n  );\n};\n","import styled from 'styled-components';\n\n// prettier-ignore\n\n/**\n * Container div for holding UI, using theme screen options\n *\n * @param {string} maxWidth\n * @param {string} padding\n * @param {boolean} bordered\n * @param {boolean} color\n */\nexport const Container = styled.div`\n  position: relative;\n  margin: 0 auto;\n  margin-top: ${p => p.marginTop ? p.theme.spacing[p.marginTop] : 0};\n  width: 100%;\n  max-width: ${p => (p.maxWidth && p.theme.screen[p.maxWidth])};\n  padding: ${p => p.padding ? `0 ${p.theme.spacing[p.padding]}` : `0 ${p.theme.spacing.sm}`};\n  z-index: ${p => p.zIndex && p.theme.zIndex[p.zIndex]};\n  background-color: ${p => p.color && p.theme.colors[p.color]};\n  border-radius: ${p => p.radius && p.theme.radius[p.radius]};\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  margin: 0 auto;\n  width: 100%;\n  z-index: ${p => p.zIndex && p.theme.zIndex[p.zIndex]};\n  min-height: 500px;\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    width: ${p => p.theme.screen.xs};\n  }\n\n  @media (min-width: ${p => p.theme.screen.lg}) {\n    width: ${p => p.theme.screen.sm};\n  }\n`;\n\n/**\n * Adds margins to UI, using theme spacing options\n *\n * @param {string} top\n * @param {string} right\n * @param {string} bottom\n * @param {string} left\n * @param {boolean} inline, converts block element to inline block\n */\nexport const Spacing = styled.div`\n  ${p => p.top && `margin-top: ${p.theme.spacing[p.top]}`};\n  ${p => p.right && `margin-right: ${p.theme.spacing[p.right]}`};\n  ${p => p.bottom && `margin-bottom: ${p.theme.spacing[p.bottom]}`};\n  ${p => p.left && `margin-left: ${p.theme.spacing[p.left]}`};\n  ${p => p.inline && `display: inline-block;`}\n\n  @media (max-width: ${p => p.theme.screen.sm}) {\n    ${p =>\n      p.hideOnSm &&\n      `\n      display: none;\n    `}\n  }\n`;\n\n/**\n * Overlay, on top of the whole UI\n */\nexport const Overlay = styled.div`\n  position: fixed;\n  width: 100%;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  z-index: ${p => p.theme.zIndex.md};\n  background-color: rgba(\n    0,\n    0,\n    0,\n    ${p => (p.transparency ? p.transparency : '0.8')}\n  );\n`;\n","import styled from 'styled-components';\nimport { get } from 'lodash';\n\n// prettier-ignore\n\n/**\n * Button\n *\n * @param {string} size\n * @param {string} color\n * @param {boolean} disabled\n * @param {boolean} text, style button as a text\n */\nexport const Button = styled.button`\n  letter-spacing: 0.5px;\n  outline: 0;\n  transition: opacity 0.1s;\n  border: 0;\n  color: ${p => p.theme.colors.white};\n  font-size: ${p => p.size ? p.theme.font.size[p.size] : p.theme.font.size.xs};\n  border-radius: ${p => p.theme.radius.sm};\n  padding: ${p => p.theme.spacing.xs} ${p => p.theme.spacing.sm};\n  background-color: ${p => p.color ? p.theme.colors[p.color] : p.theme.colors.primary.main};\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  font-weight: ${p => (p.weight ? p.theme.font.weight[p.weight] : p.theme.font.weight.normal)};\n  white-space: nowrap;\n  align-self: flex-start;\n\n  ${p => p.disabled && `\n    background-color: ${p.theme.colors.grey[500]};\n    cursor: not-allowed;\n  `};\n\n  ${p => !p.disabled && `\n    &:hover {\n      opacity .9;\n      cursor: pointer;\n    }\n  `};\n\n  ${p => p.text && `\n    color: ${p.color ? get(p.theme.colors, p.color) : p.theme.colors.text.secondary};\n    border-radius: 0;\n    background-color: transparent;\n  `};\n\n${p => p.ghost && `\n    color: ${p.color ? get(p.theme.colors[p.color]) : p.theme.colors.text.secondary};\n    border-radius: 0;\n    background-color: transparent;\n    padding: 0;\n    text-align: left;\n  `};\n\n  ${p => p.fullWidth && `\n    width: 100%;\n  `}\n`;\n\n/**\n * Input type text\n */\nexport const InputText = styled.input`\n  outline: 0;\n  height: 36px;\n  width: 100%;\n  transition: border 0.1s;\n  border-radius: ${p => p.theme.radius.sm};\n  padding-left: ${p => p.theme.spacing.xs};\n  border: 1px solid\n    ${p =>\n      p.borderColor\n        ? p.theme.colors[p.borderColor]\n        : p.theme.colors.border.main};\n  color: ${p => p.theme.colors.text.secondary};\n\n  &:focus {\n    border-color: ${p => p.theme.colors.border.main};\n  }\n`;\n\n/**\n * Textarea\n */\nexport const Textarea = styled.textarea`\n  outline: 0;\n  height: 50px;\n  width: 100%;\n  resize: none;\n  border: 0;\n  padding-left: ${p => p.theme.spacing.sm};\n  padding-top: ${p => p.theme.spacing.xs};\n  color: ${p => p.theme.colors.text.main};\n  font-size: ${p => p.theme.font.size.xs};\n\n  &::placeholder {\n    color: ${p => p.theme.colors.text.secondary};\n  }\n`;\n\n/**\n * Form component\n */\nexport const Form = styled.form`\n  display: block;\n  border-radius: ${p => p.theme.radius.sm};\n  padding: ${p => p.theme.spacing.lg} ${p => p.theme.spacing.sm};\n  background-color: ${p => p.theme.colors.white};\n  border: 1px solid ${p => p.theme.colors.border.main};\n`;\n","/**\n * Available Message types\n */\n\nexport const MessageType = {\n  SUCCESS: 'SUCCESS',\n  INFO: 'INFO',\n  WARNING: 'WARNING',\n  ERROR: 'ERROR',\n};\n\nexport const allMessageTypes = Object.keys(MessageType);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { keyframes } from 'styled-components';\n\nimport {\n  SuccessIcon,\n  InfoIcon,\n  WarningIcon,\n  ErrorIcon,\n  CloseIcon,\n} from 'components/icons';\nimport { Spacing } from './Layout';\nimport { Button } from 'components/Form';\n\nimport theme from 'theme';\n\nimport { allMessageTypes } from 'constants/MessageType';\n\nimport { useStore } from 'store';\nimport { CLEAR_MESSAGE } from 'store/message';\n\nconst fade = keyframes`\n  from {\n    bottom: -60px;\n    opacity: 0;\n  }\n  to {\n    bottom: 0;\n    opacity: 1;\n  }\n`;\n\n/**\n * Default styles for message\n */\nconst Root = styled.div`\n  position: fixed;\n  width: 100%;\n  box-shadow: ${p => p.theme.shadows.md};\n  padding: ${p => p.theme.spacing.sm};\n  z-index: ${p => p.theme.zIndex.xl};\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  background-color: ${p => p.color && p.color};\n  animation: ${fade} 0.3s ease-out forwards;\n  color: ${p => p.theme.colors.white};\n`;\n\nconst Close = styled(Button)`\n  position: absolute;\n  right: 20px;\n  top: 24px;\n`;\n\n/**\n * Displays global message as feedback in response to user operations\n */\nconst Message = ({ children, type, autoClose }) => {\n  const [, dispatch] = useStore();\n\n  useEffect(\n    () => {\n      if (autoClose) {\n        const timer = setTimeout(() => {\n          dispatch({ type: CLEAR_MESSAGE });\n        }, 5000);\n\n        return () => {\n          clearTimeout(timer);\n        };\n      }\n    },\n    [dispatch, autoClose]\n  );\n\n  const { success, info, warning, error } = theme.colors;\n\n  const Colors = {\n    SUCCESS: success,\n    INFO: info,\n    WARNING: warning,\n    ERROR: error.main,\n  };\n\n  const MessageType = type => {\n    const icons = {\n      SUCCESS: <SuccessIcon />,\n      INFO: <InfoIcon />,\n      WARNING: <WarningIcon />,\n      ERROR: <ErrorIcon />,\n    };\n\n    return icons[type];\n  };\n\n  return (\n    <Root color={Colors[type]}>\n      {MessageType(type)}\n      <Spacing left={type && 'xs'}>{children}</Spacing>\n      <Close ghost onClick={() => dispatch({ type: CLEAR_MESSAGE })}>\n        <CloseIcon color=\"white\" />\n      </Close>\n    </Root>\n  );\n};\n\nMessage.defaultProps = {\n  autoClose: true,\n};\n\nMessage.propTypes = {\n  children: PropTypes.any.isRequired,\n  type: PropTypes.oneOf(allMessageTypes),\n  autoClose: PropTypes.bool,\n};\n\nexport default Message;\n","import styled, { keyframes } from 'styled-components';\n\n// prettier-ignore\n\nconst Load = keyframes`\n  0% {\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\n  }\n  5%,\n  95% {\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\n  }\n  10%,\n  59% {\n    box-shadow: 0 -0.83em 0 -0.4em, -0.087em -0.825em 0 -0.42em, -0.173em -0.812em 0 -0.44em, -0.256em -0.789em 0 -0.46em, -0.297em -0.775em 0 -0.477em;\n  }\n  20% {\n    box-shadow: 0 -0.83em 0 -0.4em, -0.338em -0.758em 0 -0.42em, -0.555em -0.617em 0 -0.44em, -0.671em -0.488em 0 -0.46em, -0.749em -0.34em 0 -0.477em;\n  }\n  38% {\n    box-shadow: 0 -0.83em 0 -0.4em, -0.377em -0.74em 0 -0.42em, -0.645em -0.522em 0 -0.44em, -0.775em -0.297em 0 -0.46em, -0.82em -0.09em 0 -0.477em;\n  }\n  100% {\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\n  }\n`;\n\nconst Round = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\n/**\n * Displays loading spinner\n */\nexport const Loading = styled.div`\n  text-indent: -9999em;\n  overflow: hidden;\n  width: 1em;\n  height: 1em;\n  border-radius: 50%;\n  position: relative;\n  transform: translateZ(0);\n  animation: ${Load} 1.7s infinite ease, ${Round} 1.7s infinite ease;\n  margin: 0 auto;\n  margin-top: ${p => p.top && p.theme.spacing[p.top]};\n  margin-bottom: ${p => p.bottom && p.theme.spacing[p.bottom]};\n  color: ${p =>\n    p.color ? p.theme.colors[p.color] : p.theme.colors.text.secondary};\n  font-size: ${p =>\n    p.size ? p.theme.font.size[p.size] : p.theme.font.size.sm};\n`;\n\n/**\n * Displays loading dots\n */\nexport const LoadingDots = styled.div`\n  &::after {\n    display: block;\n    animation: ellipsis 1s infinite;\n    content: '.';\n    text-align: center;\n    color: ${p =>\n      p.color ? p.theme.colors[p.color] : p.theme.colors.text.secondary};\n    font-size: ${p => p.theme.font.size.xl};\n  }\n\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n/**\n * Wrapper around React Router's Link component, that uses theme styling\n *\n * @param {string} color\n * @param {string} weight\n * @param {string} size\n */\nexport const A = styled(Link)`\n  text-decoration: none;\n  transition: color 0.1s;\n  display: inline-block;\n  color: ${p =>\n    p.color ? p.theme.colors[p.color] : p.theme.colors.text.secondary};\n  font-weight: ${p =>\n    p.weight ? p.theme.font.weight[p.weight] : p.theme.font.weight.normal};\n  font-size: ${p =>\n    p.size ? p.theme.font.size[p.size] : p.theme.font.size.xs};\n\n  &:hover {\n    color: ${p => p.theme.colors.text.primary};\n  }\n`;\n\n/**\n * Component for wrapping error messages\n */\nexport const Error = styled.div`\n  color: ${p =>\n    p.color ? p.theme.colors[p.color] : p.theme.colors.error.main};\n  font-size: ${p =>\n    p.size ? p.theme.font.size[p.size] : p.theme.font.size.sm};\n`;\n\n/**\n * Helper function for adding styles to Heading components\n *\n * @param {string} size, size of text\n */\nconst getHeadingStyles = size => css`\n  margin: 0;\n  font-size: ${size};\n  font-weight: ${p => p.theme.font.weight.normal};\n  color: ${p =>\n    p.color ? p.theme.colors[p.color] : p.theme.colors.text.primary};\n`;\n\nexport const H1 = styled.h1`\n  ${getHeadingStyles(p => p.theme.font.size.xl)};\n`;\n\nexport const H2 = styled.h2`\n  ${getHeadingStyles(p => p.theme.font.size.lg)};\n`;\n\nexport const H3 = styled.h3`\n  ${getHeadingStyles(p => p.theme.font.size.xs)};\n`;\n","/**\n * All available routes for the app\n */\n\nexport const HOME = '/';\n\nexport const FORGOT_PASSWORD = '/forgot-password';\n\nexport const RESET_PASSWORD = '/reset-password';\n\nexport const USER_PROFILE = '/:username';\n\nexport const EXPLORE = '/explore';\n\nexport const PEOPLE = '/people';\n\nexport const NOTIFICATIONS = '/notifications';\n\nexport const MESSAGES = '/messages/:userId';\n\nexport const POST = '/post/:id';\n\n/**\n * Value that's used in place of id when creating something new.\n */\nexport const NEW_ID_VALUE = 'new';\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Mutation } from 'react-apollo';\nimport styled from 'styled-components';\n\nimport { A } from 'components/Text';\nimport { Spacing } from 'components/Layout';\nimport { Error } from 'components/Text';\nimport { InputText, Button } from 'components/Form';\n\nimport { SIGN_IN } from 'graphql/user';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: space-between;\n  font-size: ${p => p.theme.font.size.xxs};\n  margin-top: ${p => p.theme.spacing.sm};\n`;\n\nconst InputContainer = styled(Spacing)`\n  width: 100%;\n`;\n\nconst ErrorMessage = styled.div`\n  position: absolute;\n  top: 1px;\n`;\n\nconst ForgotPassword = styled.div`\n  font-size: ${p => p.theme.font.size.xxs};\n  margin-top: ${p => p.theme.spacing.xxs};\n  color: ${p => p.theme.colors.white};\n`;\n\n/**\n * Sign In page\n */\nconst SignIn = ({ history, location, refetch }) => {\n  const [values, setValues] = useState({ emailOrUsername: '', password: '' });\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    setError('');\n  }, [location.pathname]);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const handleSubmit = (e, signin) => {\n    e.preventDefault();\n\n    if (!emailOrUsername || !password) {\n      setError('All fields are required');\n      return;\n    }\n\n    setError('');\n    signin().then(async ({ data }) => {\n      localStorage.setItem('token', data.signin.token);\n      await refetch();\n      history.push(Routes.HOME);\n    });\n  };\n\n  const renderErrors = apiError => {\n    let errorMessage;\n\n    if (error) {\n      errorMessage = error;\n    } else if (apiError) {\n      errorMessage = apiError.graphQLErrors[0].message;\n    }\n\n    if (errorMessage) {\n      return (\n        <ErrorMessage>\n          <Error size=\"xxs\" color=\"white\">\n            {errorMessage}\n          </Error>\n        </ErrorMessage>\n      );\n    }\n\n    return null;\n  };\n\n  const { emailOrUsername, password } = values;\n\n  return (\n    <Mutation\n      mutation={SIGN_IN}\n      variables={{ input: { emailOrUsername, password } }}\n    >\n      {(signin, { loading, error: apiError }) => (\n        <form onSubmit={e => handleSubmit(e, signin)}>\n          <Root>\n            <InputContainer>\n              {renderErrors(apiError)}\n\n              <InputText\n                autoFocus\n                type=\"text\"\n                name=\"emailOrUsername\"\n                values={emailOrUsername}\n                onChange={handleChange}\n                placeholder=\"Email or Username\"\n                borderColor=\"white\"\n              />\n            </InputContainer>\n\n            <InputContainer left=\"xs\" right=\"xs\">\n              <InputText\n                type=\"password\"\n                name=\"password\"\n                values={password}\n                onChange={handleChange}\n                placeholder=\"Password\"\n                borderColor=\"white\"\n              />\n              <A to={Routes.FORGOT_PASSWORD}>\n                <ForgotPassword>Forgot password?</ForgotPassword>\n              </A>\n            </InputContainer>\n\n            <Button disabled={loading}>Log in</Button>\n          </Root>\n        </form>\n      )}\n    </Mutation>\n  );\n};\n\nSignIn.propTypes = {\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default withRouter(SignIn);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { A } from 'components/Text';\nimport { Container } from 'components/Layout';\nimport SignIn from './SignIn';\n\nimport * as Routes from 'routes';\n\nimport SiteInfo from 'constants/SiteInfo.json';\n\nconst Root = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 80px;\n  background-color: transparent;\n`;\n\nconst StyledContainer = styled(Container)`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 0 ${p => p.theme.spacing.sm};\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    justify-content: space-between;\n  }\n`;\n\nconst Logo = styled(A)`\n  display: none;\n  color: ${p => p.theme.colors.white};\n  font-size: ${p => p.theme.font.size.sm};\n  font-weight: ${p => p.theme.font.weight.bold};\n\n  &:hover {\n    color: ${p => p.theme.colors.white};\n  }\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    display: block;\n  }\n`;\n\nconst SignInContainer = styled.div`\n  width: 500px;\n`;\n\n/**\n * Header of the App when user isn't authenticated\n */\nconst AuthHeader = ({ refetch }) => {\n  return (\n    <Root>\n      <StyledContainer maxWidth=\"lg\">\n        <Logo to={Routes.HOME}>{SiteInfo.name}</Logo>\n\n        <SignInContainer>\n          <SignIn refetch={refetch} />\n        </SignInContainer>\n      </StyledContainer>\n    </Root>\n  );\n};\n\nAuthHeader.propTypes = {\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default AuthHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\n\nimport SiteInfo from 'constants/SiteInfo.json';\n\n/**\n * Component that manages changes to document head\n * currently we are editing only title, but you can add meta description, image ...\n */\nconst Head = ({ title }) => (\n  <Helmet>\n    <title>{title}</title>\n  </Helmet>\n);\n\nHead.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nHead.defaultProps = {\n  title: SiteInfo.name,\n};\n\nexport default Head;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\nimport { Mutation } from 'react-apollo';\n\nimport { Spacing, Container } from 'components/Layout';\nimport { H1, Error } from 'components/Text';\nimport { InputText, Button } from 'components/Form';\nimport Head from 'components/Head';\n\nimport { SIGN_UP } from 'graphql/user';\n\nimport * as Routes from 'routes';\n\nconst Root = styled(Container)`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  margin-top: 60px;\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    justify-content: space-between;\n    margin-top: 120px;\n  }\n`;\n\nconst Welcome = styled.div`\n  display: none;\n  flex-direction: column;\n  color: ${p => p.theme.colors.white};\n  max-width: ${p => p.theme.screen.xs};\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    display: flex;\n  }\n`;\n\nconst Heading = styled(H1)`\n  margin-bottom: ${p => p.theme.spacing.sm};\n`;\n\nconst Form = styled.div`\n  padding: ${p => p.theme.spacing.md};\n  border-radius: ${p => p.theme.radius.sm};\n  background-color: rgba(255, 255, 255, 0.8);\n  width: 100%;\n\n  @media (min-width: ${p => p.theme.screen.sm}) {\n    width: 450px;\n  }\n`;\n\n/**\n * Sign Up page\n */\nconst SignUp = ({ history, refetch }) => {\n  const [error, setError] = useState('');\n  const [values, setValues] = useState({\n    fullName: '',\n    username: '',\n    email: '',\n    password: '',\n  });\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const validate = () => {\n    if (!fullName || !email || !username || !password) {\n      return 'All fields are required';\n    }\n\n    if (fullName.length > 50) {\n      return 'Full name no more than 50 characters';\n    }\n\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (!emailRegex.test(String(email).toLowerCase())) {\n      return 'Enter a valid email address.';\n    }\n\n    const usernameRegex = /^(?!.*\\.\\.)(?!.*\\.$)[^\\W][\\w.]{0,29}$/;\n    if (!usernameRegex.test(username)) {\n      return 'Usernames can only use letters, numbers, underscores and periods';\n    } else if (username.length > 20) {\n      return 'Username no more than 50 characters';\n    }\n\n    if (password.length < 6) {\n      return 'Password min 6 characters';\n    }\n\n    return false;\n  };\n\n  const handleSubmit = (e, signup) => {\n    e.preventDefault();\n\n    const error = validate();\n    if (error) {\n      setError(error);\n      return false;\n    }\n\n    signup().then(async ({ data }) => {\n      localStorage.setItem('token', data.signup.token);\n      await refetch();\n      history.push(Routes.HOME);\n    });\n  };\n\n  const renderErrors = apiError => {\n    let errorMessage;\n\n    if (error) {\n      errorMessage = error;\n    } else if (apiError) {\n      errorMessage = apiError.graphQLErrors[0].message;\n    }\n\n    if (errorMessage) {\n      return (\n        <Spacing bottom=\"sm\" top=\"sm\">\n          <Error>{errorMessage}</Error>\n        </Spacing>\n      );\n    }\n\n    return null;\n  };\n\n  const { fullName, email, password, username } = values;\n\n  return (\n    <Mutation\n      mutation={SIGN_UP}\n      variables={{ input: { fullName, email, password, username } }}\n    >\n      {(signup, { loading, error: apiError }) => {\n        return (\n          <Root maxWidth=\"lg\">\n            <Head />\n\n            <Welcome>\n              <div>\n                <Heading color=\"white\">\n                  Connect with friends and the world around you.\n                </Heading>\n              </div>\n\n              <p>See photos and updates from your friends.</p>\n              <p>Follow your interests.</p>\n              <p>Hear what people are talking about.</p>\n            </Welcome>\n\n            <Form>\n              <Spacing bottom=\"md\">\n                <H1>Create Account</H1>\n              </Spacing>\n\n              <form onSubmit={e => handleSubmit(e, signup)}>\n                <InputText\n                  type=\"text\"\n                  name=\"fullName\"\n                  values={fullName}\n                  onChange={handleChange}\n                  placeholder=\"Full name\"\n                  borderColor=\"white\"\n                />\n                <Spacing top=\"xs\" bottom=\"xs\">\n                  <InputText\n                    type=\"text\"\n                    name=\"email\"\n                    values={email}\n                    onChange={handleChange}\n                    placeholder=\"Email\"\n                    borderColor=\"white\"\n                  />\n                </Spacing>\n                <InputText\n                  type=\"text\"\n                  name=\"username\"\n                  values={username}\n                  onChange={handleChange}\n                  placeholder=\"Username\"\n                  borderColor=\"white\"\n                />\n                <Spacing top=\"xs\" bottom=\"xs\">\n                  <InputText\n                    type=\"password\"\n                    name=\"password\"\n                    values={password}\n                    onChange={handleChange}\n                    placeholder=\"Password\"\n                    borderColor=\"white\"\n                  />\n                </Spacing>\n\n                {renderErrors(apiError)}\n\n                <Spacing top=\"sm\" />\n                <Button size=\"large\" disabled={loading}>\n                  Sign up\n                </Button>\n              </form>\n            </Form>\n          </Root>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nSignUp.propTypes = {\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default withRouter(SignUp);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Mutation } from 'react-apollo';\n\nimport { Spacing } from 'components/Layout';\nimport { H1, A, Error } from 'components/Text';\nimport { InputText, Button } from 'components/Form';\nimport Head from 'components/Head';\n\nimport { REQUEST_PASSWORD_RESET } from 'graphql/user';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  padding: 0 ${p => p.theme.spacing.sm};\n`;\n\nconst Container = styled.div`\n  width: 450px;\n  margin: 0 auto;\n  background-color: ${p => p.theme.colors.white};\n  padding: ${p => p.theme.spacing.md};\n  border-radius: ${p => p.theme.radius.sm};\n  width: 100%;\n  margin-top: 80px;\n\n  @media (min-width: ${p => p.theme.screen.sm}) {\n    width: 450px;\n  }\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    margin-top: auto;\n  }\n`;\n\nconst Text = styled.p`\n  font-size: ${p => p.theme.font.size.xs};\n  line-height: 22px;\n`;\n\n/**\n * Forgot password page\n */\nconst ForgotPassword = () => {\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const handleSubmit = (e, requestResetPassword) => {\n    e.preventDefault();\n\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (!emailRegex.test(String(email).toLowerCase())) {\n      setError('Enter a valid email address.');\n      return;\n    }\n\n    setError('');\n    setEmail('');\n    requestResetPassword().then(async ({ data }) => {\n      setMessage(data.requestPasswordReset.message);\n    });\n  };\n\n  if (message) {\n    return (\n      <Root>\n        <Container>\n          <Spacing bottom=\"sm\">\n            <H1>{message}</H1>\n          </Spacing>\n        </Container>\n      </Root>\n    );\n  }\n\n  return (\n    <Mutation\n      mutation={REQUEST_PASSWORD_RESET}\n      variables={{ input: { email } }}\n    >\n      {(requestResetPassword, { data, loading, error: apiError }) => (\n        <Root>\n          <Head title=\"Forgot Password\" />\n\n          <Container>\n            <Spacing bottom=\"sm\">\n              <H1>Reset Password</H1>\n              <Text>\n                Enter the email address associated with your account, and we’ll\n                email you a link to reset your password.\n              </Text>\n            </Spacing>\n\n            <form onSubmit={e => handleSubmit(e, requestResetPassword)}>\n              <InputText\n                type=\"text\"\n                name=\"email\"\n                values={email}\n                onChange={handleEmailChange}\n                placeholder=\"Email\"\n              />\n\n              {error && (\n                <Spacing bottom=\"sm\" top=\"sm\">\n                  <Error>{error}</Error>\n                </Spacing>\n              )}\n\n              {apiError && (\n                <Spacing bottom=\"sm\" top=\"sm\">\n                  <Error>\n                    {apiError.graphQLErrors.map(e => (\n                      <div key={e.message}>{e.message}</div>\n                    ))}\n                  </Error>\n                </Spacing>\n              )}\n\n              <Spacing top=\"xs\" />\n\n              <Button disabled={loading}>Send reset link</Button>\n\n              <Spacing top=\"sm\">\n                <A to={Routes.HOME}>&larr; Back to Sign Up</A>\n              </Spacing>\n            </form>\n          </Container>\n        </Root>\n      )}\n    </Mutation>\n  );\n};\n\nForgotPassword.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default ForgotPassword;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Query, Mutation } from 'react-apollo';\n\nimport { Spacing } from 'components/Layout';\nimport { H1, Error } from 'components/Text';\nimport { Loading } from 'components/Loading';\nimport { InputText, Button } from 'components/Form';\nimport Head from 'components/Head';\n\nimport { VERIFY_RESET_PASSWORD_TOKEN, RESET_PASSWORD } from 'graphql/user';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  padding: 0 ${p => p.theme.spacing.sm};\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  background-color: ${p => p.theme.colors.white};\n  padding: ${p => p.theme.spacing.md};\n  border-radius: ${p => p.theme.radius.sm};\n  margin-top: 80px;\n\n  @media (min-width: ${p => p.theme.screen.sm}) {\n    width: 450px;\n  }\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    margin-top: auto;\n  }\n`;\n\n/**\n * Reset password page\n */\nconst ResetPassword = ({ history, location, refetch }) => {\n  const [values, setValues] = useState({ password: '', confirmPassword: '' });\n  const [error, setError] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const handleSubmit = (e, resetPassword) => {\n    e.preventDefault();\n\n    if (!password || !confirmPassword) {\n      setError('Enter password and Confirm password.');\n      return;\n    } else if (password.length < 6) {\n      setError('Password min 6 characters');\n      return;\n    } else if (password !== confirmPassword) {\n      setError(\"Passwords don't match.\");\n      return;\n    }\n\n    setError('');\n    resetPassword()\n      .then(async ({ data }) => {\n        localStorage.setItem('token', data.resetPassword.token);\n        await refetch();\n        history.push(Routes.HOME);\n      })\n      .catch(err => {\n        setError(err);\n      });\n  };\n\n  const { password, confirmPassword } = values;\n\n  const url = new URLSearchParams(location.search);\n  const email = url.get('email');\n  const token = url.get('token');\n\n  return (\n    <Root>\n      <Head title=\"Reset Password\" />\n\n      <Container>\n        <Query query={VERIFY_RESET_PASSWORD_TOKEN} variables={{ email, token }}>\n          {({ loading, error: apiError }) => {\n            if (loading) return <Loading top=\"lg\" />;\n            if (apiError)\n              return <H1>This token is either invalid or expired!</H1>;\n\n            return (\n              <Mutation\n                mutation={RESET_PASSWORD}\n                variables={{ input: { email, password, token } }}\n              >\n                {(resetPassword, { loading, error: apiError }) => {\n                  if (apiError) return <H1>{apiError}</H1>;\n\n                  return (\n                    <>\n                      <Spacing bottom=\"md\">\n                        <H1>Password Reset</H1>\n                      </Spacing>\n\n                      <form onSubmit={e => handleSubmit(e, resetPassword)}>\n                        <InputText\n                          type=\"password\"\n                          name=\"password\"\n                          values={password}\n                          onChange={handleChange}\n                          placeholder=\"Password\"\n                        />\n\n                        <Spacing top=\"xs\" bottom=\"sm\">\n                          <InputText\n                            type=\"password\"\n                            name=\"confirmPassword\"\n                            values={confirmPassword}\n                            onChange={handleChange}\n                            placeholder=\"Confirm Password\"\n                          />\n                        </Spacing>\n\n                        {error && (\n                          <Spacing bottom=\"sm\" top=\"sm\">\n                            <Error>{error}</Error>\n                          </Spacing>\n                        )}\n\n                        <Button disabled={loading}>Reset Password</Button>\n                      </form>\n                    </>\n                  );\n                }}\n              </Mutation>\n            );\n          }}\n        </Query>\n      </Container>\n    </Root>\n  );\n};\n\nResetPassword.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default withRouter(ResetPassword);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { Overlay } from 'components/Layout';\nimport { AuthHeader, SignUp, ForgotPassword, ResetPassword } from 'pages/Auth';\n\nimport * as Routes from 'routes';\n\nimport backgroundImage from './background.jpeg';\n\nconst Root = styled.div`\n  background: url(${backgroundImage}) no-repeat top / cover;\n  width: 100%;\n  height: 100vh;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: ${p => p.theme.zIndex.lg};\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    justify-content: center;\n  }\n`;\n\nconst Pages = styled.div`\n  margin-top: 80px;\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    margin-top: -120px;\n  }\n`;\n\n/**\n * Main Layout for the app, when user isn't authenticated\n */\nconst AuthLayout = ({ refetch }) => {\n  return (\n    <Root>\n      <Overlay transparency=\"0.5\" />\n\n      <Container>\n        <AuthHeader refetch={refetch} />\n\n        <Pages>\n          <Switch>\n            <Route\n              exact\n              path={Routes.HOME}\n              render={() => <SignUp refetch={refetch} />}\n            />\n            <Route\n              exact\n              path={Routes.FORGOT_PASSWORD}\n              component={ForgotPassword}\n            />\n            <Route\n              exact\n              path={Routes.RESET_PASSWORD}\n              render={() => <ResetPassword refetch={refetch} />}\n            />\n            <Redirect to={Routes.HOME} />\n          </Switch>\n        </Pages>\n      </Container>\n    </Root>\n  );\n};\n\nAuthLayout.propTypes = {\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default AuthLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { UserIcon } from './icons';\n\nconst Root = styled.div`\n  width: ${p => (p.size ? `${p.size}px` : '30px')};\n  height: ${p => (p.size ? `${p.size}px` : '30px')};\n  border-radius: 50%;\n  overflow: hidden;\n  flex-shrink: 0;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\n/**\n * Component for rendering user's image\n */\nconst Avatar = ({ size, image }) => (\n  <Root size={size}>\n    {image ? (\n      <Image src={image} />\n    ) : (\n      <UserIcon width={size ? `${size}px` : 30} />\n    )}\n  </Root>\n);\n\nAvatar.propTypes = {\n  size: PropTypes.number,\n  image: PropTypes.string,\n};\n\nexport default Avatar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { SearchIcon } from 'components/icons';\n\nconst Root = styled.div`\n  width: 100%;\n  position: relative;\n  z-index: ${p => p.theme.zIndex.xl};\n`;\n\nconst IconContainer = styled.div`\n  position: absolute;\n  top: 12px;\n  left: 10px;\n`;\n\nconst Input = styled.input`\n  outline: 0;\n  height: 40px;\n  width: 100%;\n  border: 0;\n  border-radius: ${p => p.theme.radius.md};\n  padding-left: ${p => (p.hideIcon ? p.theme.spacing.xs : p.theme.spacing.lg)};\n  padding-right: ${p => p.theme.spacing.lg};\n  color: ${p => p.theme.colors.text.main};\n  font-size: ${p => p.theme.font.size.xs};\n  background-color: ${p =>\n    p.backgroundColor\n      ? p.theme.colors[p.backgroundColor]\n      : p.theme.colors.grey[200]};\n  transition: border-color 0.1s;\n\n  &:focus {\n    &::placeholder {\n      color: ${p => p.theme.colors.grey[500]};\n    }\n  }\n`;\n\n/**\n * Component for rendering search input\n */\nconst SearchInput = ({\n  onChange,\n  onFocus,\n  value,\n  inputRef,\n  backgroundColor,\n  placeholder,\n  hideIcon,\n  children,\n  autoFocus,\n}) => {\n  return (\n    <Root>\n      {!hideIcon && (\n        <IconContainer>\n          <SearchIcon />\n        </IconContainer>\n      )}\n\n      <Input\n        onChange={onChange}\n        onFocus={onFocus}\n        value={value}\n        ref={inputRef}\n        backgroundColor={backgroundColor}\n        type=\"text\"\n        placeholder={placeholder}\n        hideIcon={hideIcon}\n        autoFocus={autoFocus}\n      />\n\n      {children}\n    </Root>\n  );\n};\n\nSearchInput.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onFocus: PropTypes.func,\n  value: PropTypes.string.isRequired,\n  ref: PropTypes.object,\n  backgroundColor: PropTypes.string,\n  placeholder: PropTypes.string,\n  hideIcon: PropTypes.bool,\n  children: PropTypes.node,\n  autoFocus: PropTypes.bool,\n};\n\nexport default SearchInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { generatePath } from 'react-router-dom';\n\nimport { Spacing } from 'components/Layout';\nimport { A } from 'components/Text';\nimport Avatar from 'components/Avatar';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  width: 100%;\n  max-height: 350px;\n  min-height: 40px;\n  overflow: auto;\n  position: absolute;\n  top: 50px;\n  font-size: ${p => p.theme.font.size.xs};\n  box-shadow: ${p => p.theme.shadows.sm};\n  background-color: ${p => p.theme.colors.white};\n`;\n\nconst StyledA = styled(A)`\n  display: block;\n\n  &:hover {\n    background-color: ${p => p.theme.colors.grey[100]};\n  }\n`;\n\nconst Item = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: ${p => p.theme.spacing.xs};\n`;\n\nconst Name = styled.div`\n  font-weight: ${p => p.theme.font.weight.bold};\n`;\n\nconst UserName = styled.div`\n  font-size: ${p => p.theme.font.size.xxs};\n`;\n\nconst NoSearchResult = styled.div`\n  text-align: center;\n  padding: ${p => p.theme.spacing.xs};\n  color: ${p => p.theme.colors.text.main};\n`;\n\n/**\n * Displays search result, meant to be used in Search component\n */\nconst SearchResult = ({ users, forMessage }) => {\n  if (users.length < 1) {\n    return (\n      <Root>\n        <NoSearchResult>No search results.</NoSearchResult>\n      </Root>\n    );\n  }\n\n  return (\n    <Root>\n      {users.map(user => (\n        <StyledA\n          key={user.id}\n          to={\n            forMessage\n              ? generatePath(Routes.MESSAGES, { userId: user.id })\n              : generatePath(Routes.USER_PROFILE, { username: user.username })\n          }\n        >\n          <Item>\n            <Avatar image={user.image} size={34} />\n\n            <Spacing left=\"xs\">\n              <Name>{user.fullName}</Name>\n              <UserName>@{user.username}</UserName>\n            </Spacing>\n          </Item>\n        </StyledA>\n      ))}\n    </Root>\n  );\n};\n\nSearchResult.propTypes = {\n  users: PropTypes.array.isRequired,\n  forMessage: PropTypes.bool,\n};\n\nexport default SearchResult;\n","import { useEffect } from 'react';\n\n/**\n * React hook that detects click outside an element\n *\n * @param {node} ref, element to detect click outside\n * @param {func} handler, function for invoking when click outside element is detected\n */\nexport const useClickOutside = (ref, handler) => {\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, false);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside, false);\n    };\n  });\n\n  const handleClickOutside = event => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      handler();\n    }\n  };\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Loading } from 'components/Loading';\nimport SearchInput from './SearchInput';\nimport SearchResult from './SearchResult';\n\nimport { useClickOutside } from 'hooks/useClickOutside';\nimport { useDebounce } from 'hooks/useDebounce';\n\nimport { SEARCH_USERS } from 'graphql/user';\n\nconst StyledLoading = styled(Loading)`\n  position: absolute;\n  top: 14px;\n  right: 16px;\n`;\n\n/**\n * Renders search input\n */\nconst Search = ({\n  location,\n  hideIcon,\n  forMessage,\n  backgroundColor,\n  placeholder,\n  autoFocus,\n  ...others\n}) => {\n  const client = useApolloClient();\n\n  const [isOpenSearchResult, setIsOpenSearchResult] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Close search result on click outside\n  const inputRef = useRef(null);\n  useClickOutside(inputRef, () => setIsOpenSearchResult(false));\n\n  // Debounce search query value\n  const debounceSearchQuery = useDebounce(searchQuery, 500);\n\n  useEffect(() => {\n    // Clear search input value, after location change\n    setSearchQuery('');\n  }, [location.pathname]);\n\n  useEffect(() => {\n    const search = async () => {\n      const { data } = await client.query({\n        query: SEARCH_USERS,\n        variables: { searchQuery: debounceSearchQuery },\n      });\n\n      setUsers(data.searchUsers);\n      setLoading(false);\n\n      const openSearchResult = debounceSearchQuery !== '';\n      setIsOpenSearchResult(openSearchResult);\n    };\n\n    debounceSearchQuery ? search() : setIsOpenSearchResult(false);\n\n    return () => setLoading(false);\n  }, [debounceSearchQuery, client]);\n\n  const handleInputChange = async e => {\n    // Trim white space only from beginning\n    const value = e.target.value.replace(/^\\s+/g, '');\n    setSearchQuery(value);\n    if (value) {\n      setLoading(true);\n    }\n  };\n\n  const handleInputFocus = () => searchQuery && setIsOpenSearchResult(true);\n\n  return (\n    <SearchInput\n      onChange={handleInputChange}\n      onFocus={handleInputFocus}\n      value={searchQuery}\n      inputRef={inputRef}\n      placeholder={placeholder}\n      hideIcon={hideIcon}\n      backgroundColor={backgroundColor}\n      autoFocus={autoFocus}\n      {...others}\n    >\n      {loading && <StyledLoading size=\"xxs\" />}\n\n      {isOpenSearchResult && (\n        <SearchResult users={users} forMessage={forMessage} />\n      )}\n    </SearchInput>\n  );\n};\n\nSearch.propTypes = {\n  location: PropTypes.object.isRequired,\n  hideIcon: PropTypes.bool,\n  forMessage: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  placeholder: PropTypes.string,\n  autoFocus: PropTypes.bool,\n};\n\nexport default Search;\n","import { useState, useEffect } from 'react';\n\n/**\n * React hook for debouncing\n */\nexport const useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay]\n  );\n\n  return debouncedValue;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withApollo } from 'react-apollo';\nimport { withRouter } from 'react-router-dom';\n\nimport { Button } from 'components/Form';\n\nimport * as Routes from 'routes';\n\nimport { useStore } from 'store';\nimport { CLEAR_AUTH_USER } from 'store/auth';\n\n/**\n * Component that signs out the user\n */\nconst SignOut = ({ client, history }) => {\n  const [, dispatch] = useStore();\n\n  const handleSignOut = () => {\n    dispatch({ type: CLEAR_AUTH_USER });\n    localStorage.removeItem('token');\n    client.resetStore();\n    history.push(Routes.HOME);\n  };\n\n  return (\n    <Button text onClick={handleSignOut}>\n      Sign out\n    </Button>\n  );\n};\n\nSignOut.propTypes = {\n  history: PropTypes.object.isRequired,\n  client: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withApollo(SignOut));\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { generatePath } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport SignOut from 'components/App/SignOut';\nimport { A } from 'components/Text';\n\nimport * as Routes from 'routes';\n\nimport { useStore } from 'store';\n\nconst Root = styled.div`\n  text-align: center;\n  position: absolute;\n  background-color: white;\n  line-height: ${p => p.theme.spacing.md};\n  right: 0;\n  top: 60px;\n  z-index: ${p => p.theme.zIndex.xl};\n  box-shadow: ${p => p.theme.shadows.sm};\n`;\n\nconst CSS = css`\n  transition: background-color 0.1s;\n  display: block;\n  padding: ${p => p.theme.spacing.sm} ${p => p.theme.spacing.xl};\n\n  &:hover {\n    background-color: ${p => p.theme.colors.grey[100]};\n    color: ${p => p.theme.colors.text.secondary};\n  }\n`;\n\nconst Link = styled(A)`\n  ${CSS};\n`;\n\nconst Item = styled.div`\n  ${CSS};\n`;\n\n/**\n * Component that renders Header User's dropdown\n */\nconst HeaderUserDropDown = ({ userRef }) => {\n  const [{ auth }] = useStore();\n\n  return (\n    <Root ref={userRef}>\n      <Link\n        to={generatePath(Routes.USER_PROFILE, {\n          username: auth.user.username,\n        })}\n      >\n        My Profile\n      </Link>\n\n      <Item>\n        <SignOut />\n      </Item>\n    </Root>\n  );\n};\n\nHeaderUserDropDown.propTypes = {\n  userRef: PropTypes.object,\n};\n\nexport default HeaderUserDropDown;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { generatePath } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { withApollo } from 'react-apollo';\n\nimport { A } from 'components/Text';\nimport { Spacing } from 'components/Layout';\nimport Avatar from 'components/Avatar';\n\nimport { useClickOutside } from 'hooks/useClickOutside';\n\nimport { GET_AUTH_USER } from 'graphql/user';\nimport { UPDATE_NOTIFICATION_SEEN } from 'graphql/notification';\n\nimport { useStore } from 'store';\n\nimport * as Routes from 'routes';\n\nconst NotificationItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${p => p.theme.spacing.xs};\n  border-bottom: 1px solid ${p => p.theme.colors.border.main};\n  font-size: ${p => p.theme.font.size.xxs};\n  background-color: ${p => p.theme.colors.white};\n\n  &:last-child {\n    border-bottom: 0;\n  }\n`;\n\nconst LeftSide = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Name = styled.div`\n  font-weight: ${p => p.theme.font.weight.bold};\n`;\n\nconst Action = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  flex: 1;\n  margin-left: ${p => p.theme.spacing.xs};\n`;\n\nconst PostImage = styled.div`\n  width: 40px;\n  height: 40px;\n  overflow: hidden;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  display: block;\n`;\n\n/**\n * Renders user notifications\n */\nconst Notification = ({ notification, close, client }) => {\n  const [{ auth }] = useStore();\n\n  const ref = React.useRef(null);\n\n  useClickOutside(ref, close);\n\n  useEffect(() => {\n    const updateNotificationSeen = async () => {\n      try {\n        await client.mutate({\n          mutation: UPDATE_NOTIFICATION_SEEN,\n          variables: {\n            input: {\n              userId: auth.user.id,\n            },\n          },\n          refetchQueries: () => [{ query: GET_AUTH_USER }],\n        });\n      } catch (err) {}\n    };\n\n    updateNotificationSeen();\n  }, [auth.user.id, auth.user.newNotifications.length, client]);\n\n  if (!notification.follow && !notification.like && !notification.comment) {\n    return null;\n  }\n\n  return (\n    <NotificationItem ref={ref}>\n      <A\n        to={generatePath(Routes.USER_PROFILE, {\n          username: notification.author.username,\n        })}\n      >\n        <LeftSide>\n          <Avatar image={notification.author.image} size={34} />\n\n          <Spacing left=\"xs\" />\n\n          <Name>{notification.author.fullName}</Name>\n        </LeftSide>\n      </A>\n\n      {notification.follow && <Action>started following you</Action>}\n\n      {notification.like && (\n        <Action>\n          likes your photo\n          <A to={generatePath(Routes.POST, { id: notification.like.post.id })}>\n            <PostImage>\n              <Image src={notification.like.post.image} />\n            </PostImage>\n          </A>\n        </Action>\n      )}\n\n      {notification.comment && (\n        <Action>\n          commented on your photo\n          <A\n            to={generatePath(Routes.POST, { id: notification.comment.post.id })}\n          >\n            <PostImage>\n              <Image src={notification.comment.post.image} />\n            </PostImage>\n          </A>\n        </Action>\n      )}\n    </NotificationItem>\n  );\n};\n\nNotification.propTypes = {\n  client: PropTypes.object.isRequired,\n  close: PropTypes.func,\n};\n\nexport default withApollo(Notification);\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport Notification from '../Notification';\n\nconst Root = styled.div`\n  position: absolute;\n  width: 100%;\n  max-height: 350px;\n  overflow-y: auto;\n  background-color: white;\n  right: 0;\n  top: 60px;\n  z-index: ${p => p.theme.zIndex.xl};\n  box-shadow: ${p => p.theme.shadows.sm};\n\n  @media (min-width: ${p => p.theme.screen.sm}) {\n    width: 500px;\n    right: ${p => p.theme.spacing.lg};\n  }\n`;\n\nconst Empty = styled.div`\n  padding: ${p => p.theme.spacing.xs};\n`;\n\n/**\n * Component that renders Header Notification's dropdown\n */\nconst HeaderNotificationDropDown = ({\n  notificationRef,\n  dropdownData,\n  closeDropDown,\n}) => {\n  return (\n    <Root ref={notificationRef}>\n      {!dropdownData.length ? (\n        <Empty>No new notifications.</Empty>\n      ) : (\n        dropdownData.map(notification => (\n          <Notification\n            key={notification.id}\n            notification={notification}\n            close={closeDropDown}\n          />\n        ))\n      )}\n    </Root>\n  );\n};\n\nHeaderNotificationDropDown.propTypes = {\n  notificationRef: PropTypes.object,\n  dropdownData: PropTypes.array,\n  closeDropDown: PropTypes.func,\n};\n\nexport default HeaderNotificationDropDown;\n","/**\n * Converts unix timestamp into a time ago string like 2 hours ago\n *\n * @param {string} date unix timestamp\n */\nexport const timeAgo = unixTimestamp => {\n  const date = new Date(parseInt(unixTimestamp));\n\n  const seconds = Math.floor((new Date() - date) / 1000);\n  let interval = Math.floor(seconds / 31536000);\n\n  if (interval > 1) {\n    return interval + ' years';\n  }\n\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) {\n    return interval + ' months';\n  }\n\n  interval = Math.floor(seconds / 86400);\n  if (interval > 1) {\n    return interval + ' days';\n  }\n\n  interval = Math.floor(seconds / 3600);\n  if (interval > 1) {\n    return interval + ' hours';\n  }\n\n  interval = Math.floor(seconds / 60);\n  if (interval > 1) {\n    return interval + ' mins';\n  }\n\n  return Math.floor(seconds) + ' seconds';\n};\n\n/**\n * Converts unix timestamp to current date\n *\n * @param {string} date unix timestamp\n */\nexport const currentDate = unixTimestamp => {\n  const date = new Date(parseInt(unixTimestamp));\n  const months = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ];\n\n  const month = months[date.getMonth() + 1];\n  const day = date.getDay();\n  const year = date.getFullYear();\n  const time = date.toLocaleString('en-US', {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true,\n  });\n\n  return `${month} ${day}, ${year} ${time}`;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { NavLink, generatePath } from 'react-router-dom';\n\nimport Avatar from 'components/Avatar';\nimport { A } from 'components/Text';\n\nimport { timeAgo } from 'utils/date';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  position: absolute;\n  width: 100%;\n  max-height: 350px;\n  overflow-y: auto;\n  background-color: white;\n  right: 0;\n  top: 60px;\n  z-index: ${p => p.theme.zIndex.xl};\n  box-shadow: ${p => p.theme.shadows.sm};\n\n  @media (min-width: ${p => p.theme.screen.sm}) {\n    width: 500px;\n    right: 90px;\n  }\n`;\n\nconst Heading = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  padding: ${p => p.theme.spacing.xs} ${p => p.theme.spacing.xs};\n`;\n\nconst Link = styled(A)`\n  color: ${p => p.theme.colors.primary.main};\n  font-size: ${p => p.theme.font.size.xs};\n\n  &:hover {\n    color: ${p => p.theme.colors.primary.main};\n    text-decoration: underline;\n  }\n`;\n\nconst User = styled(NavLink)`\n  width: 100%;\n  padding: ${p => p.theme.spacing.xs} ${p => p.theme.spacing.xxs};\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  text-decoration: none;\n  color: ${p => p.theme.colors.text.primary};\n  border-top: 1px solid ${p => p.theme.colors.border.main};\n\n  &:hover {\n    background-color: ${p => p.theme.colors.grey[100]};\n  }\n`;\n\nconst Info = styled.div`\n  width: 100%;\n  padding: 0 ${p => p.theme.spacing.xs};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst FullName = styled.div`\n  text-overflow: ellipsis;\n  width: 100%;\n`;\n\nconst LastMessage = styled.div`\n  margin-top: ${p => p.theme.spacing.xxs};\n  font-size: ${p => p.theme.font.size.xxs};\n  color: ${p => p.theme.colors.grey[500]};\n  text-overflow: ellipsis;\n`;\n\nconst CreatedAt = styled.div`\n  font-size: ${p => p.theme.font.size.tiny};\n  color: ${p => p.theme.colors.text.secondary};\n`;\n\n/**\n * Component that renders Header Message's dropdown\n */\nconst HeaderMessageDropdown = ({ messageRef, dropdownData }) => {\n  return (\n    <Root ref={messageRef}>\n      <Heading>\n        <Link\n          to={generatePath(Routes.MESSAGES, { userId: Routes.NEW_ID_VALUE })}\n        >\n          New Message\n        </Link>\n      </Heading>\n\n      {dropdownData.map(user => (\n        <User\n          key={user.id}\n          to={generatePath(Routes.MESSAGES, { userId: user.id })}\n        >\n          <span>\n            <Avatar image={user.image} size={50} />\n          </span>\n\n          <Info>\n            <div>\n              <FullName>{user.fullName}</FullName>\n\n              <LastMessage>{user.lastMessage}</LastMessage>\n            </div>\n\n            <CreatedAt>{timeAgo(user.lastMessageCreatedAt)}</CreatedAt>\n          </Info>\n        </User>\n      ))}\n    </Root>\n  );\n};\n\nHeaderMessageDropdown.propTypes = {\n  messageRef: PropTypes.object,\n  dropdownData: PropTypes.array,\n};\n\nexport default HeaderMessageDropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport HeaderUserDropDown from './HeaderUserDropDown';\nimport HeaderNotificationDropDown from './HeaderNotificationDropDown';\nimport HeaderMessageDropdown from './HeaderMessageDropdown';\n\n/**\n * Component that renders DropDown's of Header\n */\nconst HeaderDropDowns = ({\n  messageRef,\n  notificationRef,\n  userRef,\n  dropdownOpen,\n  dropdownData,\n  closeDropDown,\n}) => {\n  const DropDowns = {\n    USER: <HeaderUserDropDown userRef={userRef} />,\n    NOTIFICATION: (\n      <HeaderNotificationDropDown\n        notificationRef={notificationRef}\n        dropdownData={dropdownData}\n        closeDropDown={closeDropDown}\n      />\n    ),\n    MESSAGE: (\n      <HeaderMessageDropdown\n        messageRef={messageRef}\n        dropdownData={dropdownData}\n      />\n    ),\n  };\n\n  return dropdownOpen ? DropDowns[dropdownOpen] : null;\n};\n\nHeaderDropDowns.propTypes = {\n  messageRef: PropTypes.object,\n  notificationRef: PropTypes.object,\n  userRef: PropTypes.object,\n  dropdownOpen: PropTypes.string,\n  dropdownData: PropTypes.array,\n  closeDropDown: PropTypes.func,\n};\n\nexport default HeaderDropDowns;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport { withRouter } from 'react-router-dom';\n\nimport { NotificationIcon, MenuIcon, EnvelopeOpenIcon } from 'components/icons';\nimport { Container, Spacing } from 'components/Layout';\nimport { A } from 'components/Text';\nimport { Button } from 'components/Form';\nimport Avatar from 'components/Avatar';\nimport Search from 'components/Search';\nimport HeaderDropDowns from './HeaderDropDowns';\n\nimport { useClickOutside } from 'hooks/useClickOutside';\n\nimport { useStore } from 'store';\n\nimport { HEADER_HEIGHT } from 'constants/Layout';\nimport SiteInfo from 'constants/SiteInfo.json';\n\nimport * as Routes from 'routes';\n\nconst Root = styled(Container)`\n  position: sticky;\n  top: 0;\n  background-color: ${p => p.theme.colors.white};\n  z-index: ${p => p.theme.zIndex.md};\n  height: ${HEADER_HEIGHT}px;\n  border-bottom: 1px solid ${p => p.theme.colors.border.main};\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    z-index: ${p => p.theme.zIndex.md};\n  }\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  height: ${HEADER_HEIGHT}px;\n  margin: 0 auto;\n  width: 100%;\n\n  @media (min-width: ${p => parseInt(p.theme.screen.lg, 10) + 20 + 'px'}) {\n    width: ${p => p.theme.screen.lg};\n  }\n`;\n\nconst LeftSide = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Hamburger = styled.div`\n  cursor: pointer;\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    display: none;\n  }\n`;\n\nconst Logo = styled(A)`\n  display: none;\n  color: ${p => p.theme.colors.primary.main};\n  font-weight: ${p => p.theme.font.weight.bold};\n  font-size: ${p => p.theme.font.size.sm};\n\n  &:hover {\n    color: ${p => p.theme.colors.primary.main};\n  }\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    display: block;\n  }\n`;\n\nconst RightSide = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  position: relative;\n`;\n\nconst countCSS = css`\n  top: -6px;\n  position: absolute;\n  height: 22px;\n  width: 22px;\n  padding: 2px;\n  letter-spacing: -1px;\n  border-radius: 50%;\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.error.main};\n  font-size: ${p => p.theme.font.size.xxs};\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst NotificationCount = styled.span`\n  ${countCSS};\n  right: 54px;\n`;\n\nconst MessageCount = styled.span`\n  ${countCSS};\n  right: 100px;\n`;\n\n/**\n * Header of the App when user is authenticated\n */\nconst Header = ({ location, toggleSideBar }) => {\n  const [{ auth }] = useStore();\n\n  const [dropdownOpen, setDropdownOpen] = useState(null);\n  const [dropdownData, setDropdownData] = useState([]);\n\n  const messageRef = useRef(null);\n  const notificationRef = useRef(null);\n  const userRef = useRef(null);\n\n  const closeOnClickOutside = () => {\n    if (dropdownOpen) {\n      closeDropDown();\n    }\n  };\n\n  useClickOutside(messageRef, closeOnClickOutside);\n  useClickOutside(notificationRef, closeOnClickOutside);\n  useClickOutside(userRef, closeOnClickOutside);\n\n  const closeDropDown = () => {\n    setDropdownOpen(null);\n    setDropdownData([]);\n  };\n\n  useEffect(() => {\n    return () => closeDropDown();\n  }, [location.pathname]);\n\n  const handleIconClick = dropdownType => {\n    if (dropdownOpen) {\n      closeDropDown();\n    } else {\n      if (dropdownType === 'NOTIFICATION') {\n        setDropdownData(auth.user.newNotifications);\n      } else if (dropdownType === 'MESSAGE') {\n        setDropdownData(auth.user.newConversations);\n      }\n\n      setDropdownOpen(dropdownType);\n    }\n  };\n\n  return (\n    <Root>\n      <Wrapper>\n        <LeftSide>\n          <Hamburger onClick={toggleSideBar}>\n            <MenuIcon />\n          </Hamburger>\n\n          <Logo to={Routes.HOME}>{SiteInfo.name}</Logo>\n\n          <Spacing left=\"sm\" right=\"md\">\n            <Search location={location} placeholder=\"Search\" />\n          </Spacing>\n        </LeftSide>\n\n        <RightSide>\n          <Spacing right=\"md\">\n            <Button ghost onClick={() => handleIconClick('MESSAGE')}>\n              {auth.user.newConversations.length > 0 && (\n                <MessageCount>{auth.user.newConversations.length}</MessageCount>\n              )}\n\n              <EnvelopeOpenIcon />\n            </Button>\n          </Spacing>\n\n          <Spacing right=\"md\">\n            <Button ghost onClick={() => handleIconClick('NOTIFICATION')}>\n              {auth.user.newNotifications.length > 0 && (\n                <NotificationCount>\n                  {auth.user.newNotifications.length}\n                </NotificationCount>\n              )}\n              <NotificationIcon />\n            </Button>\n          </Spacing>\n\n          <Button ghost onClick={() => handleIconClick('USER')}>\n            <Avatar image={auth.user.image} />\n          </Button>\n        </RightSide>\n\n        <HeaderDropDowns\n          messageRef={messageRef}\n          notificationRef={notificationRef}\n          userRef={userRef}\n          dropdownOpen={dropdownOpen}\n          dropdownData={dropdownData}\n          closeDropDown={closeDropDown}\n        />\n      </Wrapper>\n    </Root>\n  );\n};\n\nHeader.propTypes = {\n  location: PropTypes.object.isRequired,\n  toggleSideBar: PropTypes.func.isRequired,\n};\n\nexport default withRouter(Header);\n","/**\n * Layout size constants\n */\n\nexport const SIDEBAR_DESKTOP_WIDTH = 180;\n\nexport const SIDEBAR_MOBILE_WIDTH = 240;\n\nexport const USER_SUGGESTIONS_WIDTH = 240;\n\nexport const HEADER_HEIGHT = 60;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { A, H1, H2 } from 'components/Text';\nimport { Spacing } from 'components/Layout';\nimport { NotFoundIcon } from 'components/icons';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: ${p => p.theme.spacing.lg};\n  padding: 0 ${p => p.theme.spacing.sm};\n  text-align: center;\n`;\n\n/**\n * Component for displaying when we couldn't find the page\n */\nconst NotFound = () => (\n  <Root>\n    <H1>Oops!</H1>\n\n    <Spacing top=\"sm\" bottom=\"md\">\n      <H2>We can't seem to find the page you're looking for.</H2>\n    </Spacing>\n\n    <NotFoundIcon width=\"100\" />\n\n    <Spacing bottom=\"md\" />\n\n    <A to={Routes.HOME}>Go back to Home Page</A>\n  </Root>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { NavLink, generatePath } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport * as Routes from 'routes';\n\nimport {\n  ExploreIcon,\n  NotificationIcon,\n  HomeIcon,\n  PeopleIcon,\n  EnvelopeIcon,\n} from 'components/icons';\n\nconst Link = styled(NavLink)`\n  text-decoration: none;\n  transition: color 0.1s;\n  color: ${p => p.theme.colors.text.primary};\n  display: block;\n  padding-left: ${p => p.theme.spacing.xs};\n\n  &:hover,\n  &.selected {\n    color: ${p => p.theme.colors.primary.main};\n    background-color: ${p => p.theme.colors.grey[100]};\n\n    svg path {\n      fill: ${p => p.theme.colors.primary.main};\n    }\n\n    @media (min-width: ${p => p.theme.screen.md}) {\n      background-color: ${p => p.theme.colors.white};\n    }\n  }\n`;\n\nconst List = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  line-height: 40px;\n  font-size: ${p => p.theme.font.size.xs};\n`;\n\nconst ListItem = styled.li`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Name = styled.div`\n  margin-left: ${p => p.theme.spacing.sm};\n`;\n\n/**\n * Navigation component used in SideBar\n */\nconst Navigation = () => {\n  return (\n    <List>\n      <Link exact activeClassName=\"selected\" to={Routes.HOME}>\n        <ListItem>\n          <HomeIcon />\n          <Name>Home</Name>\n        </ListItem>\n      </Link>\n\n      <Link exact activeClassName=\"selected\" to={Routes.EXPLORE}>\n        <ListItem>\n          <ExploreIcon width={20} />\n          <Name>Explore</Name>\n        </ListItem>\n      </Link>\n\n      <Link exact activeClassName=\"selected\" to={Routes.PEOPLE}>\n        <ListItem>\n          <PeopleIcon />\n          <Name>People</Name>\n        </ListItem>\n      </Link>\n\n      <Link exact activeClassName=\"selected\" to={Routes.NOTIFICATIONS}>\n        <ListItem>\n          <NotificationIcon width={18} />\n          <Name>Notifications</Name>\n        </ListItem>\n      </Link>\n\n      <Link\n        exact\n        activeClassName=\"selected\"\n        to={generatePath(Routes.MESSAGES, { userId: Routes.NEW_ID_VALUE })}\n      >\n        <ListItem>\n          <EnvelopeIcon width={18} />\n          <Name>Messages</Name>\n        </ListItem>\n      </Link>\n    </List>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { generatePath, withRouter, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { Spacing } from 'components/Layout';\nimport Navigation from './Navigation';\nimport Avatar from 'components/Avatar';\n\nimport {\n  SIDEBAR_DESKTOP_WIDTH,\n  SIDEBAR_MOBILE_WIDTH,\n  HEADER_HEIGHT,\n} from 'constants/Layout';\n\nimport { useStore } from 'store';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  padding-top: ${HEADER_HEIGHT + 40}px;\n  height: 100%;\n  width: ${SIDEBAR_MOBILE_WIDTH}px;\n  transition: margin-left 0.2s ease-in-out;\n  font-size: ${p => p.theme.font.size.xxs};\n  z-index: ${p => p.theme.zIndex.sm};\n  background-color: ${p => p.theme.colors.white};\n  border-right: 1px solid ${p => p.theme.colors.border.main};\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    padding-top: 0;\n    position: sticky;\n    top: 100px;\n    margin-left: ${p => (p.isOpen ? 0 : `-${SIDEBAR_DESKTOP_WIDTH}px`)};\n    flex-basis: ${SIDEBAR_DESKTOP_WIDTH}px;\n    flex-grow: 0;\n    flex-shrink: 0;\n    border: 0;\n    background-color: transparent;\n  }\n\n  @media (max-width: ${p => p.theme.screen.md}) {\n    margin-left: ${p => (p.isOpen ? 0 : `-${SIDEBAR_MOBILE_WIDTH}px`)};\n  }\n`;\n\nconst User = styled(NavLink)`\n  text-decoration: none;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: ${p => p.theme.spacing.xs};\n  border: 1px solid transparent;\n\n  &:hover,\n  &.selected {\n    background-color: ${p => p.theme.colors.grey[100]};\n\n    @media (min-width: ${p => p.theme.screen.md}) {\n      background-color: ${p => p.theme.colors.white};\n    }\n  }\n`;\n\nconst FullName = styled.div`\n  font-weight: ${p => p.theme.font.weight.bold};\n  color: ${p =>\n    p.active ? p.theme.colors.primary.main : p.theme.colors.text.primary};\n`;\n\n/**\n * Displays left side bar\n */\nconst SideBar = ({ location, isOpen, sideBarRef }) => {\n  const [{ auth }] = useStore();\n\n  const isAuthUsersProfilePage =\n    auth.user.username === location.pathname.substring(1);\n\n  return (\n    <Root isOpen={isOpen} ref={sideBarRef}>\n      <User\n        exact\n        to={generatePath(Routes.USER_PROFILE, { username: auth.user.username })}\n        activeClassName=\"selected\"\n      >\n        <Avatar image={auth.user.image} size={20} />\n\n        <Spacing left=\"xxs\">\n          <FullName active={isAuthUsersProfilePage}>\n            {auth.user.fullName}\n          </FullName>\n        </Spacing>\n      </User>\n\n      <Spacing top=\"sm\" />\n\n      <Navigation />\n    </Root>\n  );\n};\n\nSideBar.propTypes = {\n  location: PropTypes.object.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n};\n\nexport default withRouter(SideBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { matchPath } from 'react-router';\nimport { generatePath } from 'react-router-dom';\nimport { Query } from 'react-apollo';\n\nimport { Loading } from 'components/Loading';\nimport { H3, A } from 'components/Text';\nimport { Spacing } from 'components/Layout';\nimport Avatar from 'components/Avatar';\n\nimport { useStore } from 'store';\n\nimport { USER_SUGGESTIONS } from 'graphql/user';\n\nimport { USER_SUGGESTIONS_WIDTH, HEADER_HEIGHT } from 'constants/Layout';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  display: none;\n  background-color: ${p => p.theme.colors.white};\n  border: 1px solid ${p => p.theme.colors.border.main};\n  position: sticky;\n  top: ${HEADER_HEIGHT + 40}px;\n  right: 0;\n  height: 100%;\n  width: ${USER_SUGGESTIONS_WIDTH}px;\n  padding: ${p => p.theme.spacing.sm};\n  border-radius: ${p => p.theme.radius.sm};\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    display: block;\n  }\n`;\n\nconst List = styled.ul`\n  padding: 0;\n  padding-top: ${p => p.theme.spacing.xs};\n`;\n\nconst ListItem = styled.li`\n  list-style-type: none;\n  display: flex;\n  flex-direction: row;\n  margin-bottom: ${p => p.theme.spacing.sm};\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst FullName = styled.div`\n  font-weight: ${p => p.theme.font.weight.bold};\n  color: ${p =>\n    p.active ? p.theme.colors.primary.main : p.theme.colors.text.primary};\n`;\n\nconst UserName = styled.div`\n  color: ${p => p.theme.colors.text.hint};\n`;\n\n/**\n * Displays user suggestions\n */\nconst UserSuggestions = ({ pathname }) => {\n  const [{ auth }] = useStore();\n\n  const hideUserSuggestions = matchPath(pathname, {\n    path: [Routes.MESSAGES, Routes.PEOPLE, Routes.EXPLORE, Routes.USER_PROFILE],\n  });\n\n  if (hideUserSuggestions) return null;\n\n  return (\n    <Query query={USER_SUGGESTIONS} variables={{ userId: auth.user.id }}>\n      {({ data, loading }) => {\n        if (loading)\n          return (\n            <Root>\n              <Loading />\n            </Root>\n          );\n\n        if (!data.suggestPeople.length > 0) {\n          return null;\n        }\n\n        return (\n          <Root>\n            <H3>Suggestions For You</H3>\n\n            <List>\n              {data.suggestPeople.map(user => (\n                <ListItem key={user.id}>\n                  <A\n                    to={generatePath(Routes.USER_PROFILE, {\n                      username: user.username,\n                    })}\n                  >\n                    <Avatar image={user.image} />\n                  </A>\n\n                  <Spacing left=\"xs\">\n                    <A\n                      to={generatePath(Routes.USER_PROFILE, {\n                        username: user.username,\n                      })}\n                    >\n                      <FullName>{user.fullName}</FullName>\n                      <UserName>@{user.username}</UserName>\n                    </A>\n                  </Spacing>\n                </ListItem>\n              ))}\n            </List>\n          </Root>\n        );\n      }}\n    </Query>\n  );\n};\n\nUserSuggestions.propTypes = {\n  pathname: PropTypes.string.isRequired,\n};\n\nexport default UserSuggestions;\n","import gql from 'graphql-tag';\n\n/**\n * Creates a comment\n */\nexport const CREATE_COMMENT = gql`\n  mutation($input: CreateCommentInput!) {\n    createComment(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Deletes a comment\n */\nexport const DELETE_COMMENT = gql`\n  mutation($input: DeleteCommentInput!) {\n    deleteComment(input: $input) {\n      id\n    }\n  }\n`;\n","/**\n * Available Notification types\n */\n\nexport const NotificationType = {\n  LIKE: 'LIKE',\n  FOLLOW: 'FOLLOW',\n  COMMENT: 'COMMENT',\n};\n","import { useApolloClient } from '@apollo/react-hooks';\nimport { CREATE_NOTIFICATION, DELETE_NOTIFICATION } from 'graphql/notification';\nimport { useStore } from 'store';\n\n/**\n * React hook that Creates or Deletes a notification after like, follow or comment\n */\nexport const useNotifications = () => {\n  const [{ auth }] = useStore();\n\n  const client = useApolloClient();\n\n  /**\n   * Helper function for mutation\n   */\n  const mutate = async (mutation, variables) => {\n    try {\n      return await client.mutate({\n        mutation,\n        variables: { input: { ...variables } },\n      });\n    } catch (error) {\n      console.error('Error while mutating a notification', error);\n    }\n  };\n\n  /**\n   * Creates a notification\n   */\n  const create = ({ user, postId, notificationType, notificationTypeId }) => {\n    return mutate(CREATE_NOTIFICATION, {\n      authorId: auth.user.id,\n      userId: user.id,\n      postId,\n      notificationType,\n      notificationTypeId,\n    });\n  };\n\n  /**\n   * Removes a notification\n   */\n  const remove = ({ notificationId }) =>\n    mutate(DELETE_NOTIFICATION, { id: notificationId });\n\n  /**\n   * Checks if user has already a notification and based on that Creates or Deletes a notification\n   */\n  const toggle = ({\n    user,\n    postId,\n    notificationType,\n    notificationTypeId,\n    hasDone,\n  }) => {\n    const type = notificationType.toLowerCase();\n    const isNotified = user.notifications.find(\n      n => n[type] && hasDone && n[type].id === hasDone.id\n    );\n    const notificationId = isNotified ? isNotified.id : null;\n    const operation = notificationId ? 'delete' : 'create';\n    const options = {\n      create: {\n        mutation: CREATE_NOTIFICATION,\n        variables: {\n          authorId: auth.user.id,\n          userId: user.id,\n          postId,\n          notificationType,\n          notificationTypeId,\n        },\n      },\n      delete: {\n        mutation: DELETE_NOTIFICATION,\n        variables: { id: notificationId },\n      },\n    };\n\n    return mutate(options[operation].mutation, options[operation].variables);\n  };\n\n  return { create, remove, toggle };\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Mutation, withApollo } from 'react-apollo';\n\nimport { GET_AUTH_USER, GET_USER } from 'graphql/user';\nimport { GET_POST, GET_POSTS, GET_FOLLOWED_POSTS } from 'graphql/post';\nimport { CREATE_COMMENT } from 'graphql/comment';\n\nimport { Textarea, Button } from './Form';\n\nimport { NotificationType } from 'constants/NotificationType';\n\nimport { useNotifications } from 'hooks/useNotifications';\n\nimport { useStore } from 'store';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\n\n/**\n * Creates a comment for a post\n */\nconst CreateComment = ({ post, focus }) => {\n  const [{ auth }] = useStore();\n  const notification = useNotifications();\n  const [comment, setComment] = useState('');\n  const buttonEl = useRef(null);\n  const TextareaEl = useRef(false);\n\n  useEffect(\n    () => {\n      focus && TextareaEl.current.focus();\n    },\n    [focus]\n  );\n\n  const handleSubmit = async (e, createComment) => {\n    e.preventDefault();\n    const { data } = await createComment();\n    setComment('');\n\n    // Create notification on comment\n    if (auth.user.id !== post.author.id) {\n      notification.create({\n        user: post.author,\n        postId: post.id,\n        notificationType: NotificationType.COMMENT,\n        notificationTypeId: data.createComment.id,\n      });\n    }\n  };\n\n  const onEnterPress = e => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      buttonEl.current.click();\n    }\n  };\n\n  return (\n    <Mutation\n      mutation={CREATE_COMMENT}\n      variables={{ input: { comment, author: auth.user.id, postId: post.id } }}\n      refetchQueries={() => [\n        { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\n        { query: GET_USER, variables: { username: auth.user.username } },\n        { query: GET_AUTH_USER },\n        { query: GET_POSTS, variables: { authUserId: auth.user.id } },\n        { query: GET_POST, variables: { id: post.id } },\n      ]}\n    >\n      {(createComment, { loading }) => (\n        <Form onSubmit={e => handleSubmit(e, createComment)}>\n          <Textarea\n            onChange={e => setComment(e.target.value)}\n            value={comment}\n            placeholder=\"Add a comment...\"\n            onKeyDown={onEnterPress}\n            ref={TextareaEl}\n          />\n\n          <Button\n            type=\"submit\"\n            color={comment ? 'primary.main' : 'grey[500]'}\n            weight=\"bold\"\n            text\n            ref={buttonEl}\n            disabled={!comment || loading}\n          >\n            Post\n          </Button>\n        </Form>\n      )}\n    </Mutation>\n  );\n};\n\nCreateComment.propTypes = {\n  post: PropTypes.object.isRequired,\n  focus: PropTypes.bool,\n  client: PropTypes.object.isRequired,\n};\n\nexport default withApollo(CreateComment);\n","import gql from 'graphql-tag';\n\n/**\n * Creates a following between two users\n */\nexport const CREATE_FOLLOW = gql`\n  mutation($input: CreateFollowInput!) {\n    createFollow(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * deletes a following\n */\nexport const DELETE_FOLLOW = gql`\n  mutation($input: DeleteFollowInput!) {\n    deleteFollow(input: $input) {\n      id\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Mutation } from 'react-apollo';\nimport styled from 'styled-components';\n\nimport { GET_FOLLOWED_POSTS, GET_POSTS } from 'graphql/post';\nimport { GET_AUTH_USER, GET_USER } from 'graphql/user';\nimport { CREATE_FOLLOW, DELETE_FOLLOW } from 'graphql/follow';\n\nimport { NotificationType } from 'constants/NotificationType';\nimport { HOME_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\n\nimport { useStore } from 'store';\n\nimport { useNotifications } from 'hooks/useNotifications';\n\nconst Button = styled.button`\n  height: 27px;\n  cursor: pointer;\n  outline: none;\n  font-size: ${p => p.theme.font.size.xxs};\n  font-weight: ${p => p.theme.font.weight.bold};\n  transition: background-color 0.2s, border-color 0.1s;\n  border-radius: ${p => p.theme.radius.sm};\n  color: ${p => !p.isFollowing && p.theme.colors.white};\n  padding: ${p => p.theme.spacing.xxs} ${p => p.theme.spacing.xs};\n  border: ${p =>\n    p.isFollowing ? `1px solid ${p.theme.colors.border.main}` : '0'};\n  background-color: ${p =>\n    p.isFollowing ? 'transparent' : p.theme.colors.primary.main};\n\n  &:hover {\n    border-color: ${p => p.theme.colors.border.dark};\n  }\n`;\n\n/**\n * Component for rendering follow button\n */\nconst Follow = ({ user }) => {\n  const [loading, setLoading] = useState(false);\n  const [{ auth }] = useStore();\n  const notification = useNotifications();\n  const isFollowing = auth.user.following.find(f => f.user === user.id);\n\n  const handleClickFollow = async mutate => {\n    setLoading(true);\n    const { data } = await mutate();\n\n    // Create or Delete mutation for follow\n    if (auth.user.id === user.id) return setLoading(false);\n    await notification.toggle({\n      user,\n      hasDone: isFollowing,\n      notificationType: NotificationType.FOLLOW,\n      notificationTypeId: data.createFollow ? data.createFollow.id : null,\n    });\n    setLoading(false);\n  };\n\n  // Detect which mutation to use\n  const operation = isFollowing ? 'delete' : 'create';\n  const options = {\n    create: {\n      mutation: CREATE_FOLLOW,\n      variables: { userId: user.id, followerId: auth.user.id },\n    },\n    delete: {\n      mutation: DELETE_FOLLOW,\n      variables: { id: isFollowing ? isFollowing.id : null },\n    },\n  };\n\n  return (\n    <Mutation\n      mutation={options[operation].mutation}\n      variables={{ input: { ...options[operation].variables } }}\n      refetchQueries={() => [\n        { query: GET_AUTH_USER },\n        { query: GET_POSTS, variables: { authUserId: auth.user.id } },\n        {\n          query: GET_FOLLOWED_POSTS,\n          variables: {\n            userId: auth.user.id,\n            skip: 0,\n            limit: HOME_PAGE_POSTS_LIMIT,\n          },\n        },\n        { query: GET_USER, variables: { username: user.username } },\n      ]}\n    >\n      {mutate => {\n        return (\n          <Button\n            onClick={() => handleClickFollow(mutate)}\n            disabled={loading}\n            isFollowing={isFollowing}\n          >\n            {isFollowing ? 'Following' : 'Follow'}\n          </Button>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nFollow.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default Follow;\n","/**\n * Data limit constants for infinite scroll\n */\n\nexport const HOME_PAGE_POSTS_LIMIT = 6;\n\nexport const EXPLORE_PAGE_POSTS_LIMIT = 15;\n\nexport const PEOPLE_PAGE_USERS_LIMIT = 15;\n\nexport const NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT = 50;\n\nexport const PROFILE_PAGE_POSTS_LIMIT = 6;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { generatePath } from 'react-router-dom';\n\nimport { A } from 'components/Text';\nimport Follow from 'components/Follow';\nimport { Spacing } from 'components/Layout';\nimport Avatar from 'components/Avatar';\n\nimport * as Routes from 'routes';\n\nimport { useStore } from 'store';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid ${p => p.theme.colors.border.main};\n  padding: ${p => p.theme.spacing.xs};\n  margin-bottom: ${p => p.theme.spacing.xxs};\n`;\n\nconst Author = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-right: ${p => p.theme.spacing.sm};\n`;\n\nconst UserName = styled.div`\n  max-width: 100%;\n  font-size: ${p => p.theme.font.size.xs};\n  font-weight: ${p => p.theme.font.weight.bold};\n`;\n\n/**\n * Author info for PostPopup component\n */\nconst PostPopupInfo = ({ author }) => {\n  const [{ auth }] = useStore();\n\n  return (\n    <Root>\n      <Author>\n        <A\n          to={generatePath(Routes.USER_PROFILE, { username: author.username })}\n        >\n          <Avatar image={author.image} />\n        </A>\n\n        <Spacing left=\"xs\" inline>\n          <A\n            to={generatePath(Routes.USER_PROFILE, {\n              username: author.username,\n            })}\n          >\n            <UserName>{author.fullName}</UserName>\n          </A>\n        </Spacing>\n      </Author>\n\n      {auth.user.id !== author.id && <Follow user={author} />}\n    </Root>\n  );\n};\n\nPostPopupInfo.propTypes = {\n  author: PropTypes.object.isRequired,\n};\n\nexport default PostPopupInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { generatePath } from 'react-router-dom';\nimport { Mutation } from 'react-apollo';\n\nimport { CloseIcon } from 'components/icons';\nimport { A } from './Text';\nimport { Spacing } from './Layout';\nimport Avatar from 'components/Avatar';\n\nimport { GET_AUTH_USER, GET_USER } from 'graphql/user';\nimport { DELETE_COMMENT } from 'graphql/comment';\nimport { GET_POST, GET_POSTS, GET_FOLLOWED_POSTS } from 'graphql/post';\n\nimport { useNotifications } from '../hooks/useNotifications';\n\nimport { useStore } from 'store';\n\nimport * as Routes from 'routes';\n\nconst DeleteButton = styled.button`\n  cursor: pointer;\n  display: none;\n  background-color: transparent;\n  border: 0;\n  outline: 0;\n  position: absolute;\n  right: 7px;\n  top: 6px;\n`;\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: ${p => p.theme.spacing.xxs} 0;\n  font-size: ${p => p.theme.font.size.xxs};\n\n  &:hover ${DeleteButton} {\n    display: block;\n  }\n`;\n\nconst UserName = styled.div`\n  color: ${p => p.theme.colors.primary.main};\n  font-weight: ${p => p.theme.font.weight.bold};\n`;\n\nconst CommentSection = styled.div`\n  position: relative;\n  word-wrap: break-word;\n  overflow: hidden;\n  padding: 0 ${p => p.theme.spacing.lg} ${p => p.theme.spacing.xxs}\n    ${p => p.theme.spacing.xs};\n  background-color: ${p => p.theme.colors.grey[100]};\n  border-radius: ${p => p.theme.radius.lg};\n  margin-left: ${p => p.theme.spacing.xxs};\n  color: ${p => p.theme.colors.text.main};\n`;\n\n/**\n * Renders comments UI\n */\nconst Comment = ({ comment, postId, postAuthor }) => {\n  const [{ auth }] = useStore();\n  const notification = useNotifications();\n\n  const handleDeleteComment = async deleteComment => {\n    await deleteComment();\n\n    // Delete notification after comment deletion\n    if (auth.user.id !== postAuthor.id) {\n      const isNotified = postAuthor.notifications.find(\n        n => n.comment && n.comment.id === comment.id\n      );\n      notification.remove({\n        notificationId: isNotified.id,\n      });\n    }\n  };\n\n  return (\n    <Mutation\n      mutation={DELETE_COMMENT}\n      variables={{ input: { id: comment.id } }}\n      refetchQueries={() => [\n        { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\n        { query: GET_USER, variables: { username: comment.author.username } },\n        { query: GET_AUTH_USER },\n        { query: GET_POSTS, variables: { authUserId: auth.user.id } },\n        { query: GET_POST, variables: { id: postId } },\n      ]}\n    >\n      {deleteComment => {\n        return (\n          <Root>\n            <A\n              to={generatePath(Routes.USER_PROFILE, {\n                username: comment.author.username,\n              })}\n            >\n              <Avatar image={comment.author.image} />\n            </A>\n\n            <CommentSection>\n              {comment.author.id === auth.user.id && (\n                <DeleteButton\n                  onClick={() => handleDeleteComment(deleteComment)}\n                >\n                  <CloseIcon width=\"10\" />\n                </DeleteButton>\n              )}\n\n              <Spacing top=\"xxs\" />\n\n              <Spacing inline right=\"xxs\">\n                <A\n                  to={generatePath(Routes.USER_PROFILE, {\n                    username: comment.author.username,\n                  })}\n                >\n                  <UserName>{comment.author.fullName}</UserName>\n                </A>\n              </Spacing>\n\n              {comment.comment}\n            </CommentSection>\n          </Root>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nComment.propTypes = {\n  comment: PropTypes.object.isRequired,\n  postId: PropTypes.string.isRequired,\n  postAuthor: PropTypes.object.isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Comment from 'components/Comment';\nimport { Spacing } from 'components/Layout';\n\nconst Root = styled.div`\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n  padding-bottom: ${p => p.theme.spacing.sm};\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    max-height: 400px;\n  }\n`;\n\nconst Comments = styled.div`\n  max-height: ${p => (p.usedInModal ? '100%' : '350px')};\n  width: 100%;\n  overflow-y: scroll;\n  box-sizing: content-box;\n  padding: 0 ${p => p.theme.spacing.xs};\n`;\n\n/**\n * Comments for PostPopup component\n */\nconst PostPopupComments = ({ comments, postId, postAuthor, usedInModal }) => (\n  <Root usedInModal={usedInModal}>\n    <Spacing top=\"xs\" />\n\n    <Comments usedInModal={usedInModal}>\n      {comments.map(comment => (\n        <Comment\n          key={comment.id}\n          comment={comment}\n          postId={postId}\n          postAuthor={postAuthor}\n        />\n      ))}\n    </Comments>\n  </Root>\n);\n\nPostPopupComments.propTypes = {\n  comments: PropTypes.array.isRequired,\n  postId: PropTypes.string.isRequired,\n  postAuthor: PropTypes.object.isRequired,\n};\n\nexport default PostPopupComments;\n","import gql from 'graphql-tag';\n\n/**\n * Creates a like\n */\nexport const CREATE_LIKE = gql`\n  mutation($input: CreateLikeInput!) {\n    createLike(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Deletes a like\n */\nexport const DELETE_LIKE = gql`\n  mutation($input: DeleteLikeInput!) {\n    deleteLike(input: $input) {\n      id\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Mutation } from 'react-apollo';\n\nimport { LikeIcon } from 'components/icons';\nimport { Spacing } from './Layout';\nimport { Button } from './Form';\n\nimport { GET_FOLLOWED_POSTS, GET_POSTS } from 'graphql/post';\nimport { GET_AUTH_USER } from 'graphql/user';\nimport { CREATE_LIKE, DELETE_LIKE } from 'graphql/like';\n\nimport { NotificationType } from 'constants/NotificationType';\n\nimport { useNotifications } from 'hooks/useNotifications';\n\nimport { useStore } from 'store';\n\nconst StyledButton = styled(Button)`\n  padding: ${p => p.theme.spacing.xs} 0;\n`;\n\n/**\n * Component for rendering Like button\n */\nconst Like = ({ postId, user, likes, withText, fullWidth }) => {\n  const [loading, setLoading] = useState(false);\n\n  const [{ auth }] = useStore();\n\n  const notification = useNotifications();\n\n  const hasLiked = likes.find(\n    l => l.user === auth.user.id && l.post === postId\n  );\n\n  const handleButtonClick = async mutate => {\n    setLoading(true);\n    const { data } = await mutate();\n\n    // Create or delete notification for like\n    if (auth.user.id === user.id) return setLoading(false);\n    await notification.toggle({\n      user,\n      postId,\n      hasDone: hasLiked,\n      notificationType: NotificationType.LIKE,\n      notificationTypeId: data.createLike ? data.createLike.id : null,\n    });\n    setLoading(false);\n  };\n\n  // Detect which mutation to use\n  const operation = hasLiked ? 'delete' : 'create';\n  const options = {\n    create: {\n      mutation: CREATE_LIKE,\n      variables: { postId, userId: auth.user.id },\n    },\n    delete: {\n      mutation: DELETE_LIKE,\n      variables: { id: hasLiked ? hasLiked.id : null },\n    },\n  };\n\n  return (\n    <Mutation\n      mutation={options[operation].mutation}\n      variables={{ input: { ...options[operation].variables } }}\n      refetchQueries={() => [\n        { query: GET_AUTH_USER },\n        { query: GET_POSTS, variables: { authUserId: auth.user.id } },\n        { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\n      ]}\n    >\n      {mutate => {\n        return (\n          <StyledButton\n            fullWidth={fullWidth && fullWidth}\n            disabled={loading}\n            text\n            onClick={() => handleButtonClick(mutate)}\n            color={hasLiked && 'primary.main'}\n          >\n            <LikeIcon color={hasLiked && 'primary.main'} />\n            <Spacing inline left=\"xxs\" />\n            {withText && <b>Like</b>}\n          </StyledButton>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nLike.propTypes = {\n  postId: PropTypes.string.isRequired,\n  user: PropTypes.object.isRequired,\n  likes: PropTypes.array,\n  withText: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n};\n\nexport default Like;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Spacing } from 'components/Layout';\nimport Like from 'components/Like';\nimport { PostCommentIcon } from 'components/icons';\n\nconst Root = styled.div`\n  border-top: 1px solid ${p => p.theme.colors.border.main};\n  border-bottom: 1px solid ${p => p.theme.colors.border.main};\n  padding-bottom: ${p => p.theme.spacing.xs};\n`;\n\nconst Icons = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: ${p => p.theme.spacing.sm};\n`;\n\nconst Count = styled.div`\n  font-size: ${p => p.theme.font.size.xxs};\n  padding-left: ${p => p.theme.spacing.sm};\n`;\n\n/**\n * Options for PostPopup component\n */\nconst PostPopupOptions = ({ postId, postAuthor, postLikes }) => {\n  return (\n    <Root>\n      <Icons>\n        <Like postId={postId} user={postAuthor} likes={postLikes} />\n        <Spacing right=\"sm\" />\n        <PostCommentIcon />\n      </Icons>\n\n      <Count>{postLikes.length} likes</Count>\n    </Root>\n  );\n};\n\nPostPopupOptions.propTypes = {\n  postId: PropTypes.string.isRequired,\n  postAuthor: PropTypes.object.isRequired,\n  postLikes: PropTypes.array.isRequired,\n};\n\nexport default PostPopupOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Query } from 'react-apollo';\n\nimport { Loading } from 'components/Loading';\nimport { CloseIcon } from 'components/icons';\nimport CreateComment from 'components/CreateComment';\nimport { Spacing } from 'components/Layout';\nimport NotFound from 'components/NotFound';\nimport Head from 'components/Head';\nimport PostPopupInfo from './PostPopupInfo';\nimport PostPopupComments from './PostPopupComments';\nimport PostPopupOptions from './PostPopupOptions';\n\nimport { GET_POST } from 'graphql/post';\n\nconst Root = styled.div`\n  margin: 0 auto;\n  margin: ${p => !p.usedInModal && p.theme.spacing.lg} 0;\n  box-shadow: ${p => p.theme.shadows.sm};\n  border-radius: ${p => p.theme.radius.sm};\n  z-index: ${p => (p.usedInModal ? p.theme.zIndex.xl : 'inherit')};\n  overflow: hidden;\n  width: 100%;\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    width: auto;\n  }\n`;\n\nconst Container = styled.div`\n  max-height: ${p => (p.usedInModal ? '600px' : 'auto')};\n  overflow-y: ${p => (p.usedInModal ? 'auto' : 'inherit')};\n  max-width: 1300px;\n  background-color: ${p => p.theme.colors.white};\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    flex-direction: ${p => (p.usedInModal ? 'row' : 'column')};\n    max-height: ${p => (p.usedInModal ? '600px' : 'auto')};\n    overflow-y: inherit;\n  }\n`;\n\nconst Left = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: ${p => (p.usedInModal ? 'center' : 'flex-start')};\n  justify-content: center;\n  background-color: ${p => p.theme.colors.black};\n  width: 100%;\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    max-width: 1000px;\n    min-width: 500px;\n    height: ${p => (p.usedInModal ? '600px' : 'auto')};\n  }\n`;\n\nconst Image = styled.img`\n  display: block;\n  max-width: 100%;\n  width: ${p => !p.usedInModal && '100%'};\n  max-height: ${p => (p.usedInModal ? '600px' : '100%')};\n`;\n\nconst Right = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  position: relative;\n  width: 100%;\n  background-color: ${p => p.theme.colors.white};\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    width: ${p => (p.usedInModal ? '360px' : '100%')};\n    min-width: 360px;\n  }\n`;\n\nconst CloseModal = styled.div`\n  display: block;\n  position: fixed;\n  right: 20px;\n  top: 15px;\n  cursor: pointer;\n`;\n\nconst Title = styled.div`\n  font-size: ${p => p.theme.font.size.xs};\n  border-bottom: 1px solid ${p => p.theme.colors.border.light};\n  padding: ${p => p.theme.spacing.xs};\n`;\n\n/**\n * Displays post with comments and options\n * Meant to be used in Modal or Page component\n */\nconst PostPopup = ({ id, closeModal, usedInModal }) => {\n  return (\n    <Query query={GET_POST} variables={{ id }}>\n      {({ data, loading, error }) => {\n        if (loading) return <Loading top=\"lg\" />;\n        if (error) return <NotFound />;\n\n        const post = data.getPost;\n\n        return (\n          <Root usedInModal={usedInModal}>\n            <Head\n              title={post.title ? post.title : `${post.author.username}'s post`}\n            />\n\n            {closeModal && (\n              <CloseModal onClick={closeModal}>\n                <CloseIcon width=\"16\" color=\"white\" />\n              </CloseModal>\n            )}\n\n            <Container usedInModal={usedInModal}>\n              <Left usedInModal={usedInModal}>\n                <Image src={post.image} usedInModal={usedInModal} />\n              </Left>\n\n              <Right usedInModal={usedInModal}>\n                <Spacing>\n                  <PostPopupInfo author={post.author} />\n\n                  {post.title && <Title>{post.title}</Title>}\n\n                  <PostPopupComments\n                    usedInModal={usedInModal}\n                    comments={post.comments}\n                    postId={post.id}\n                    postAuthor={post.author}\n                  />\n                </Spacing>\n\n                <Spacing>\n                  <PostPopupOptions\n                    postId={post.id}\n                    postAuthor={post.author}\n                    postLikes={post.likes}\n                  />\n\n                  <CreateComment post={post} />\n                </Spacing>\n              </Right>\n            </Container>\n          </Root>\n        );\n      }}\n    </Query>\n  );\n};\n\nPostPopup.propTypes = {\n  id: PropTypes.string.isRequired,\n  closeModal: PropTypes.func,\n  usedInModal: PropTypes.bool.isRequired,\n};\n\nPostPopup.defaultProps = {\n  usedInModal: true,\n};\n\nexport default withRouter(PostPopup);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Button } from './Form';\nimport { Spacing } from './Layout';\n\nconst Root = styled.div`\n  margin: auto;\n  background-color: ${p => p.theme.colors.white};\n  padding: ${p => p.theme.spacing.sm};\n  border-radius: ${p => p.theme.radius.sm};\n  z-index: ${p => p.theme.zIndex.sm};\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n`;\n\n/**\n * Confirmation component, meant to be rendered inside Modal component\n */\nconst Confirm = ({ title, onCancel, onOk, cancelText, okText }) => (\n  <Root>\n    <div>{title}</div>\n\n    <Spacing top=\"md\" />\n\n    <ButtonContainer>\n      <Button onClick={onCancel}>{cancelText}</Button>\n\n      <Spacing left=\"xs\">\n        <Button color=\"red\" onClick={onOk}>\n          {okText}\n        </Button>\n      </Spacing>\n    </ButtonContainer>\n  </Root>\n);\n\nConfirm.propTypes = {\n  title: PropTypes.string.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  onOk: PropTypes.func.isRequired,\n  cancelText: PropTypes.string.isRequired,\n  okText: PropTypes.string.isRequired,\n};\n\nConfirm.defaultProps = {\n  title: 'Do you really want to delete this item?',\n  cancelText: 'Cancel',\n  okText: 'Delete',\n};\n\nexport default Confirm;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport Confirm from './Confirm';\nimport { Overlay } from './Layout';\n\nconst Root = styled.div`\n  position: fixed;\n  top: ${p => p.theme.spacing.sm};\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: ${p => p.theme.zIndex.lg};\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    align-items: center;\n    top: 0;\n  }\n`;\n\n/**\n * Main component for rendering Modals\n */\nconst Modal = ({ children, open, onClose, type, ...otherProps }) => {\n  if (!open) return null;\n\n  return (\n    <Root>\n      <Overlay onClick={onClose} />\n\n      {type === 'confirm' ? <Confirm {...otherProps} /> : children}\n    </Root>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  open: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n  type: PropTypes.oneOf(['', 'confirm']),\n};\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { generatePath } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { Button } from 'components/Form';\nimport Follow from 'components/Follow';\n\nimport { useStore } from 'store';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  background-color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radius.sm};\n  z-index: ${p => p.theme.zIndex.lg};\n  box-shadow: ${p => p.theme.shadows.xl};\n`;\n\nconst FollowItem = styled.div`\n  padding: ${p => p.theme.spacing.sm} 0;\n  text-align: center;\n`;\n\nconst StyledButton = styled(Button)`\n  padding: ${p => p.theme.spacing.sm} 0;\n  text-align: center;\n  border-top: 1px solid ${p => p.theme.colors.border.main} !important;\n\n  &:first-child {\n    border-top: 0 !important ;\n  }\n\n  &:hover {\n    background-color: ${p => p.theme.colors.grey[100]};\n    color: ${p => p.theme.colors.text.primary};\n  }\n`;\n\n/**\n * Post Card options, meant to be used in PostCard components Modal\n */\nconst PostCardOption = ({ postId, author, closeOption, deletePost }) => {\n  const [{ auth }] = useStore();\n\n  const copyToClipboard = () => {\n    try {\n      navigator.clipboard.writeText(\n        `${process.env.REACT_APP_FRONTEND_URL}${generatePath(Routes.POST, {\n          id: postId,\n        })}`\n      );\n    } catch (error) {\n      console.error('Failed to read clipboard contents: ', error);\n    }\n\n    closeOption();\n  };\n\n  return (\n    <Root>\n      {auth.user.id !== author.id && (\n        <FollowItem>\n          <Follow user={author} />\n        </FollowItem>\n      )}\n\n      <StyledButton fullWidth text onClick={copyToClipboard}>\n        Copy link\n      </StyledButton>\n\n      {auth.user.id === author.id && (\n        <StyledButton fullWidth text onClick={deletePost}>\n          Delete post\n        </StyledButton>\n      )}\n\n      <StyledButton fullWidth onClick={closeOption} text>\n        Cancel\n      </StyledButton>\n    </Root>\n  );\n};\n\nPostCardOption.propTypes = {\n  postId: PropTypes.string.isRequired,\n  author: PropTypes.object.isRequired,\n  closeOption: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nexport default PostCardOption;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { generatePath } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { withApollo } from 'react-apollo';\n\nimport Comment from 'components/Comment';\nimport CreateComment from 'components/CreateComment';\nimport Like from 'components/Like';\nimport { DotsIcon, PostCommentIcon } from 'components/icons';\nimport { Spacing } from 'components/Layout';\nimport { A, H3 } from 'components/Text';\nimport { Button } from 'components/Form';\nimport PostCardOption from 'components/PostCard/PostCardOption';\nimport Modal from 'components/Modal';\nimport Avatar from 'components/Avatar';\n\nimport { GET_FOLLOWED_POSTS, DELETE_POST } from 'graphql/post';\nimport { GET_AUTH_USER } from 'graphql/user';\nimport { GET_USER_POSTS } from 'graphql/user';\n\nimport {\n  HOME_PAGE_POSTS_LIMIT,\n  PROFILE_PAGE_POSTS_LIMIT,\n} from 'constants/DataLimit';\n\nimport { useStore } from 'store';\n\nimport * as Routes from 'routes';\n\nimport { timeAgo } from 'utils/date';\n\nconst Root = styled.div`\n  width: 100%;\n  border-radius: ${p => p.theme.radius.sm};\n  padding-bottom: ${p => p.theme.spacing.xs};\n  background-color: ${p => p.theme.colors.white};\n  border: 1px solid ${p => p.theme.colors.border.main};\n`;\n\nconst TopRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: ${p => p.theme.spacing.xs} ${p => p.theme.spacing.sm};\n`;\n\nconst CreatedAt = styled.div`\n  font-size: ${p => p.theme.font.size.xxs};\n  color: ${p => p.theme.colors.text.hint};\n  border-bottom: 1px solid ${p => p.theme.colors.text.secondary};\n  border: 0;\n  margin-top: 2px;\n`;\n\nconst Author = styled(A)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Name = styled.span`\n  font-size: ${p => p.theme.font.size.xs};\n  font-weight: ${p => p.theme.font.weight.bold};\n  color: ${p => p.theme.colors.primary.main};\n`;\n\nconst Poster = styled.img`\n  display: block;\n  width: 100%;\n  max-height: 700px;\n  object-fit: cover;\n  cursor: pointer;\n  margin-bottom: ${p => p.theme.spacing.sm};\n`;\n\nconst BottomRow = styled.div`\n  overflow: hidden;\n`;\n\nconst CountAndIcons = styled.div`\n  padding: 0 ${p => p.theme.spacing.sm};\n`;\n\nconst Count = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding-bottom: ${p => p.theme.spacing.xs};\n  font-size: ${p => p.theme.font.size.xs};\n  color: ${p => p.theme.colors.text.secondary};\n`;\n\nconst Icons = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  border-top: 1px solid ${p => p.theme.colors.border.main};\n`;\n\nconst Comments = styled.div`\n  padding: 0 ${p => p.theme.spacing.sm};\n`;\n\nconst StyledButton = styled(Button)`\n  padding: 0;\n  padding-left: 4px;\n  font-size: ${p => p.theme.font.size.xxs};\n`;\n\nconst CommentLine = styled.div`\n  margin-bottom: 5px;\n  border-top: 1px solid ${p => p.theme.colors.border.main};\n`;\n\n/**\n * Component for rendering user post\n */\nconst PostCard = ({\n  author,\n  imagePublicId,\n  comments,\n  title,\n  createdAt,\n  image,\n  likes,\n  postId,\n  openModal,\n  client,\n}) => {\n  const [{ auth }] = useStore();\n  const [isCommentOpen, setIsCommentOpen] = useState(false);\n  const [isOptionOpen, setIsOptionOpen] = useState(false);\n\n  const toggleCreateComment = () => {\n    setIsCommentOpen(true);\n  };\n\n  const toggleComment = () => {\n    setIsCommentOpen(!isCommentOpen);\n  };\n\n  const closeOption = () => setIsOptionOpen(false);\n\n  const openOption = () => setIsOptionOpen(true);\n\n  const deletePost = async () => {\n    try {\n      await client.mutate({\n        mutation: DELETE_POST,\n        variables: { input: { id: postId, imagePublicId } },\n        refetchQueries: () => [\n          {\n            query: GET_FOLLOWED_POSTS,\n            variables: {\n              userId: auth.user.id,\n              skip: 0,\n              limit: HOME_PAGE_POSTS_LIMIT,\n            },\n          },\n          { query: GET_AUTH_USER },\n          {\n            query: GET_USER_POSTS,\n            variables: {\n              username: auth.user.username,\n              skip: 0,\n              limit: PROFILE_PAGE_POSTS_LIMIT,\n            },\n          },\n        ],\n      });\n    } catch (err) {}\n\n    setIsOptionOpen(false);\n  };\n\n  return (\n    <>\n      <Root>\n        <Modal onClose={closeOption} open={isOptionOpen}>\n          <PostCardOption\n            postId={postId}\n            closeOption={closeOption}\n            author={author}\n            deletePost={deletePost}\n          />\n        </Modal>\n\n        <TopRow>\n          <Author\n            to={generatePath(Routes.USER_PROFILE, {\n              username: author.username,\n            })}\n          >\n            <Avatar image={author.image} />\n\n            <Spacing left=\"xs\">\n              <Name>{author.fullName}</Name>\n              <CreatedAt>{timeAgo(createdAt)}</CreatedAt>\n            </Spacing>\n          </Author>\n\n          <Button ghost onClick={openOption}>\n            <DotsIcon />\n          </Button>\n        </TopRow>\n\n        <Spacing left=\"sm\" bottom=\"sm\" top=\"xs\">\n          <H3>{title}</H3>\n        </Spacing>\n\n        {image && <Poster src={image} onClick={openModal} />}\n\n        <BottomRow>\n          <CountAndIcons>\n            <Count>\n              {likes.length} likes\n              <Spacing />\n              <StyledButton onClick={toggleComment} text>\n                {comments.length} comments\n              </StyledButton>\n            </Count>\n\n            <Icons>\n              <Like\n                fullWidth\n                withText\n                user={author}\n                postId={postId}\n                likes={likes}\n              />\n\n              <Button fullWidth text onClick={toggleCreateComment}>\n                <PostCommentIcon /> <Spacing inline left=\"xxs\" /> <b>Comment</b>\n              </Button>\n            </Icons>\n          </CountAndIcons>\n\n          {isCommentOpen && (\n            <>\n              <Spacing top=\"xs\">\n                <CommentLine />\n                <CreateComment\n                  post={{ id: postId, author }}\n                  focus={isCommentOpen}\n                />\n              </Spacing>\n\n              {comments.length > 0 && <CommentLine />}\n\n              <Comments>\n                {comments.map(comment => (\n                  <Comment\n                    key={comment.id}\n                    comment={comment}\n                    postId={postId}\n                    postAuthor={author}\n                  />\n                ))}\n              </Comments>\n            </>\n          )}\n        </BottomRow>\n      </Root>\n    </>\n  );\n};\n\nPostCard.propTypes = {\n  author: PropTypes.object.isRequired,\n  imagePublicId: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  image: PropTypes.string,\n  likes: PropTypes.array.isRequired,\n  comments: PropTypes.array,\n  createdAt: PropTypes.string.isRequired,\n  postId: PropTypes.string.isRequired,\n  openModal: PropTypes.func.isRequired,\n  client: PropTypes.object.isRequired,\n};\n\nexport default withApollo(PostCard);\n","import { useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { set, get, uniqBy } from 'lodash';\n\n/**\n * Component that adds Infinite scroll functionality to UI\n */\nconst InfiniteScroll = ({\n  data,\n  dataKey,\n  fetchMore,\n  variables,\n  count,\n  children,\n}) => {\n  const handleScroll = useMemo(\n    () => async () => {\n      const loadMore = () => {\n        return fetchMore({\n          variables: { ...variables, skip: data.length },\n          updateQuery: (prev, { fetchMoreResult }) => {\n            const previousData = get(prev, dataKey);\n            const fetchMoreData = get(fetchMoreResult, dataKey);\n            return set(\n              prev,\n              dataKey,\n              uniqBy([...previousData, ...fetchMoreData], 'id')\n            );\n          },\n        });\n      };\n\n      const windowHeight = window.innerHeight;\n      const scrollTop = document.documentElement.scrollTop;\n      const offsetHeight = document.documentElement.offsetHeight;\n      const scrolled =\n        windowHeight + scrollTop > offsetHeight - offsetHeight / 3;\n\n      // Stop event listener if all the data has been loaded\n      if (data.length >= count) {\n        window.removeEventListener('scroll', handleScroll);\n        return;\n      }\n\n      // Load more data if user has scrolled to bottom and if there's still data in db to display\n      if (scrolled) {\n        window.removeEventListener('scroll', handleScroll);\n        loadMore();\n      }\n    },\n    [count, data.length, dataKey, fetchMore, variables]\n  );\n\n  useEffect(\n    () => {\n      window.addEventListener('scroll', handleScroll);\n\n      return () => window.removeEventListener('scroll', handleScroll);\n    },\n    [handleScroll]\n  );\n\n  return children(data);\n};\n\nInfiniteScroll.propTypes = {\n  data: PropTypes.array.isRequired,\n  dataKey: PropTypes.string.isRequired,\n  count: PropTypes.number.isRequired,\n  fetchMore: PropTypes.func.isRequired,\n  variables: PropTypes.object.isRequired,\n  children: PropTypes.func.isRequired,\n};\n\nexport default InfiniteScroll;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: ${p => p.width && `${p.width}px`};\n  height: ${p => p.height && `${p.height}px`};\n  display: ${p => p.inline && `inline-block`};\n  margin-top: ${p => p.theme.spacing[p.top]};\n  margin-left: ${p => p.theme.spacing[p.left]};\n  margin-right: ${p => p.theme.spacing[p.right]};\n  margin-bottom: ${p => p.theme.spacing[p.bottom]};\n  background-color: ${p => p.theme.colors.grey[200]};\n  border-radius: ${p =>\n    p.radius ? p.theme.radius[p.radius] : p.theme.radius.sm};\n`;\n\n/**\n * Renders an UI block to inform a user, that content will be shown here after loading\n */\nconst Skeleton = ({\n  count,\n  width,\n  height,\n  inline,\n  top,\n  right,\n  bottom,\n  left,\n  radius,\n}) => {\n  const loopSkeleton = () => {\n    let skeleton = [];\n    for (let i = 0; i < count; i++) {\n      skeleton.push(\n        <Container\n          key={i}\n          top={top}\n          left={left}\n          right={right}\n          width={width}\n          height={height}\n          inline={inline}\n          bottom={bottom}\n          radius={radius}\n        />\n      );\n    }\n    return skeleton;\n  };\n\n  return loopSkeleton();\n};\n\nSkeleton.propTypes = {\n  inline: PropTypes.bool,\n  count: PropTypes.number,\n  width: PropTypes.number,\n  left: PropTypes.string,\n  top: PropTypes.string,\n  right: PropTypes.string,\n  bottom: PropTypes.string,\n  height: PropTypes.number,\n};\n\nSkeleton.defaultProps = {\n  count: 1,\n};\n\nexport default Skeleton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Spacing } from 'components/Layout';\nimport { UploadImageIcon } from 'components/icons';\n\nconst Input = styled.input`\n  display: none;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 9px 14px;\n  cursor: pointer;\n  transition: background-color 0.1s;\n  font-weight: ${p => p.theme.font.weight.bold};\n  border-radius: ${p => p.theme.radius.lg};\n  background-color: ${p => p.theme.colors.grey[100]};\n  font-size: ${p => p.theme.font.size.xxs};\n\n  &:hover {\n    background-color: ${p => p.theme.colors.grey[300]};\n  }\n`;\n\n/**\n * Component for uploading post image\n */\nconst PostImageUpload = ({ handleChange, label }) => (\n  <>\n    <Input\n      name=\"image\"\n      onChange={handleChange}\n      type=\"file\"\n      id=\"post-image\"\n      accept=\"image/x-png,image/jpeg\"\n    />\n\n    <Label htmlFor=\"post-image\">\n      <UploadImageIcon />\n\n      {label && <Spacing left=\"xs\">{label}</Spacing>}\n    </Label>\n  </>\n);\n\nPostImageUpload.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  label: PropTypes.string,\n};\n\nexport default PostImageUpload;\n","import { useStore } from 'store';\nimport { SET_MESSAGE } from 'store/message';\nimport { MessageType } from 'constants/MessageType';\n\n/**\n * React hook for dispatching global messages\n */\nexport const useGlobalMessage = () => {\n  const [, dispatch] = useStore();\n\n  const dispatchAction = (text, messageType, autoClose) => {\n    dispatch({\n      type: SET_MESSAGE,\n      payload: {\n        type: messageType,\n        text: text,\n        autoClose,\n      },\n    });\n  };\n\n  const success = (text, autoClose) =>\n    dispatchAction(text, MessageType.SUCCESS, autoClose);\n\n  const info = (text, autoClose) =>\n    dispatchAction(text, MessageType.INFO, autoClose);\n\n  const warning = (text, autoClose) =>\n    dispatchAction(text, MessageType.WARNING, autoClose);\n\n  const error = (text, autoClose) =>\n    dispatchAction(text, MessageType.ERROR, autoClose);\n\n  return { success, info, warning, error };\n};\n","import React, { useState } from 'react';\nimport { Mutation } from 'react-apollo';\nimport styled from 'styled-components';\n\nimport { Spacing, Overlay, Container } from 'components/Layout';\nimport { Error } from 'components/Text';\nimport { Button } from 'components/Form';\nimport Avatar from 'components/Avatar';\n\nimport PostImageUpload from 'pages/Home/PostImageUpload';\n\nimport { GET_FOLLOWED_POSTS, CREATE_POST } from 'graphql/post';\nimport { GET_AUTH_USER, GET_USER_POSTS } from 'graphql/user';\n\nimport { useStore } from 'store';\n\nimport { PROFILE_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\nimport { HOME_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\nimport { MAX_POST_IMAGE_SIZE } from 'constants/ImageSize';\n\nimport { useGlobalMessage } from 'hooks/useGlobalMessage';\n\nconst Root = styled(Container)`\n  border: 0;\n  border: 1px solid ${p => p.theme.colors.border.main};\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: ${p => p.theme.spacing.sm} 0;\n`;\n\nconst Textarea = styled.textarea`\n  width: 100%;\n  margin: 0 ${p => p.theme.spacing.xs};\n  padding-left: ${p => p.theme.spacing.sm};\n  padding-top: ${p => p.theme.spacing.xs};\n  border: 0;\n  outline: none;\n  resize: none;\n  transition: 0.1s ease-out;\n  height: ${p => (p.focus ? '80px' : '40px')};\n  font-size: ${p => p.theme.font.size.xs};\n  background-color: ${p => p.theme.colors.grey[100]};\n  border-radius: ${p => p.theme.radius.md};\n`;\n\nconst ImagePreviewContainer = styled.div`\n  width: 150px;\n  height: 150px;\n  overflow: hidden;\n  flex-shrink: 0;\n  box-shadow: ${p => p.theme.shadows.sm};\n`;\n\nconst ImagePreview = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst Options = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-top: 1px solid ${p => p.theme.colors.border.main};\n  padding: ${p => p.theme.spacing.sm} 0;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\n/**\n * Component for creating a post\n */\nconst CreatePost = () => {\n  const [{ auth }] = useStore();\n  const [title, setTitle] = useState('');\n  const [image, setImage] = useState('');\n  const [isFocused, setIsFocused] = useState(false);\n  const [error, setError] = useState('');\n\n  const message = useGlobalMessage();\n\n  const handleReset = () => {\n    setTitle('');\n    setImage('');\n    setIsFocused(false);\n    setError('');\n  };\n\n  const handleOnFocus = () => setIsFocused(true);\n\n  const handlePostImageUpload = e => {\n    const file = e.target.files[0];\n\n    if (!file) return;\n\n    if (file.size >= MAX_POST_IMAGE_SIZE) {\n      message.error(\n        `File size should be less then ${MAX_POST_IMAGE_SIZE / 1000000}MB`\n      );\n      return;\n    }\n\n    setImage(file);\n\n    setIsFocused(true);\n    e.target.value = null;\n  };\n\n  const handleTitleChange = e => setTitle(e.target.value);\n\n  const handleSubmit = async (e, createPost) => {\n    e.preventDefault();\n    createPost();\n    handleReset();\n  };\n\n  return (\n    <Mutation\n      mutation={CREATE_POST}\n      variables={{ input: { title, image, authorId: auth.user.id } }}\n      refetchQueries={() => [\n        {\n          query: GET_FOLLOWED_POSTS,\n          variables: {\n            userId: auth.user.id,\n            skip: 0,\n            limit: HOME_PAGE_POSTS_LIMIT,\n          },\n        },\n        { query: GET_AUTH_USER },\n        {\n          query: GET_USER_POSTS,\n          variables: {\n            username: auth.user.username,\n            skip: 0,\n            limit: PROFILE_PAGE_POSTS_LIMIT,\n          },\n        },\n      ]}\n    >\n      {(createPost, { loading, error: apiError }) => {\n        const isShareDisabled = loading || (!loading && !image && !title);\n\n        return (\n          <>\n            {isFocused && <Overlay onClick={handleReset} />}\n\n            <Root\n              zIndex={isFocused ? 'md' : 'xs'}\n              color=\"white\"\n              radius=\"sm\"\n              padding=\"sm\"\n            >\n              <form onSubmit={e => handleSubmit(e, createPost)}>\n                <Wrapper>\n                  <Avatar image={auth.user.image} size={40} />\n\n                  <Textarea\n                    type=\"textarea\"\n                    name=\"title\"\n                    focus={isFocused}\n                    value={title}\n                    onFocus={handleOnFocus}\n                    onChange={handleTitleChange}\n                    placeholder=\"Add a post\"\n                  />\n\n                  {!isFocused && (\n                    <PostImageUpload handleChange={handlePostImageUpload} />\n                  )}\n                </Wrapper>\n\n                {image && (\n                  <Spacing bottom=\"sm\">\n                    <ImagePreviewContainer>\n                      <ImagePreview src={URL.createObjectURL(image)} />\n                    </ImagePreviewContainer>\n                  </Spacing>\n                )}\n\n                {isFocused && (\n                  <Options>\n                    <PostImageUpload\n                      label=\"Photo\"\n                      handleChange={handlePostImageUpload}\n                    />\n\n                    <Buttons>\n                      <Button text type=\"button\" onClick={handleReset}>\n                        Cancel\n                      </Button>\n                      <Button disabled={isShareDisabled} type=\"submit\">\n                        Share\n                      </Button>\n                    </Buttons>\n                  </Options>\n                )}\n\n                {apiError ||\n                  (error && (\n                    <Spacing top=\"xs\" bottom=\"sm\">\n                      <Error size=\"xs\">\n                        {apiError\n                          ? 'Something went wrong, please try again.'\n                          : error}\n                      </Error>\n                    </Spacing>\n                  ))}\n              </form>\n            </Root>\n          </>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nexport default CreatePost;\n","/**\n * Maximum image size constants when uploading\n */\n\nexport const MAX_POST_IMAGE_SIZE = 3000000;\n\nexport const MAX_USER_COVER_IMAGE_SIZE = 5000000;\n\nexport const MAX_USER_PROFILE_IMAGE_SIZE = 2000000;\n","import React, { useState, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { generatePath } from 'react-router-dom';\nimport { Query } from 'react-apollo';\n\nimport { A } from 'components/Text';\nimport PostPopup from 'components/PostPopup';\nimport Modal from 'components/Modal';\nimport PostCard from 'components/PostCard';\nimport { Spacing, Container } from 'components/Layout';\nimport { Loading } from 'components/Loading';\nimport InfiniteScroll from 'components/InfiniteScroll';\nimport Skeleton from 'components/Skeleton';\nimport CreatePost from 'components/CreatePost';\nimport Head from 'components/Head';\n\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\n\nimport { useStore } from 'store';\n\nimport { HOME_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\n\nimport * as Routes from 'routes';\n\nconst Empty = styled.div`\n  padding: ${p => p.theme.spacing.sm};\n  border: 1px solid ${p => p.theme.colors.border.main};\n  border-radius: ${p => p.theme.radius.sm};\n  margin-top: ${p => p.theme.spacing.lg};\n  background-color: ${p => p.theme.colors.white};\n`;\n\nconst StyledA = styled(A)`\n  text-decoration: underline;\n  font-weight: ${p => p.theme.font.weight.bold};\n`;\n\n/**\n * Home page of the app\n */\nconst Home = () => {\n  const [{ auth }] = useStore();\n  const [modalPostId, setModalPostId] = useState(null);\n\n  const closeModal = () => {\n    window.history.pushState('', '', '/');\n    setModalPostId(null);\n  };\n\n  const openModal = postId => {\n    window.history.pushState('', '', generatePath(Routes.POST, { id: postId }));\n    setModalPostId(postId);\n  };\n\n  const variables = {\n    userId: auth.user.id,\n    skip: 0,\n    limit: HOME_PAGE_POSTS_LIMIT,\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Head />\n\n      <Spacing top=\"lg\" />\n\n      <CreatePost />\n\n      <Query\n        query={GET_FOLLOWED_POSTS}\n        variables={variables}\n        notifyOnNetworkStatusChange\n      >\n        {({ data, loading, fetchMore, networkStatus }) => {\n          if (loading && networkStatus === 1) {\n            return (\n              <Skeleton\n                height={500}\n                bottom=\"lg\"\n                top=\"lg\"\n                count={HOME_PAGE_POSTS_LIMIT}\n              />\n            );\n          }\n\n          const { posts, count } = data.getFollowedPosts;\n\n          if (!posts.length) {\n            return (\n              <Empty>\n                <StyledA to={generatePath(Routes.EXPLORE)}>\n                  Explore new posts\n                </StyledA>{' '}\n                or{' '}\n                <StyledA to={generatePath(Routes.PEOPLE)}>\n                  Find new people\n                </StyledA>\n              </Empty>\n            );\n          }\n\n          return (\n            <InfiniteScroll\n              data={posts}\n              dataKey=\"getFollowedPosts.posts\"\n              count={parseInt(count)}\n              variables={variables}\n              fetchMore={fetchMore}\n            >\n              {data => {\n                const showNextLoading =\n                  loading && networkStatus === 3 && count !== data.length;\n\n                return (\n                  <Fragment>\n                    {data.map(post => (\n                      <Fragment key={post.id}>\n                        <Modal\n                          open={modalPostId === post.id}\n                          onClose={closeModal}\n                        >\n                          <PostPopup id={post.id} closeModal={closeModal} />\n                        </Modal>\n\n                        <Spacing bottom=\"lg\" top=\"lg\">\n                          <PostCard\n                            author={post.author}\n                            imagePublicId={post.imagePublicId}\n                            postId={post.id}\n                            comments={post.comments}\n                            createdAt={post.createdAt}\n                            title={post.title}\n                            image={post.image}\n                            likes={post.likes}\n                            openModal={() => openModal(post.id)}\n                          />\n                        </Spacing>\n                      </Fragment>\n                    ))}\n\n                    {showNextLoading && <Loading top=\"lg\" />}\n                  </Fragment>\n                );\n              }}\n            </InfiniteScroll>\n          );\n        }}\n      </Query>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { withApollo } from 'react-apollo';\n\nimport { Loading } from 'components/Loading';\nimport { UserIcon } from 'components/icons';\n\nimport { GET_AUTH_USER, GET_USER, UPLOAD_PHOTO } from 'graphql/user';\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\n\nimport { MAX_USER_PROFILE_IMAGE_SIZE } from 'constants/ImageSize';\n\nimport { useGlobalMessage } from 'hooks/useGlobalMessage';\n\nimport { useStore } from 'store';\n\nconst Input = styled.input`\n  display: none;\n`;\n\nconst Overlay = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  width: 100%;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  visibility: hidden;\n  border-radius: 50%;\n  background-color: rgba(0, 0, 0, 0.6);\n  color: ${p => p.theme.colors.white};\n  opacity: 0;\n  transition: visibility 0.2s linear, opacity 0.2s linear;\n`;\n\nconst Label = styled.label`\n  position: relative;\n  width: 180px;\n  height: 180px;\n  display: block;\n  overflow: hidden;\n  cursor: ${p => p.authUser && 'pointer'};\n  border-radius: 50%;\n  border: 4px solid ${p => p.theme.colors.border.main};\n  background-color: ${p => p.theme.colors.white};\n\n  &:hover ${Overlay} {\n    opacity: 1;\n    visibility: visible;\n  }\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\n/**\n * Displays and Updates user profile image\n */\nconst ProfileImageUpload = ({\n  userId,\n  image,\n  imagePublicId,\n  username,\n  client,\n}) => {\n  const [{ auth }] = useStore();\n\n  const [loading, setLoading] = useState(false);\n\n  const message = useGlobalMessage();\n\n  const handleImageChange = async e => {\n    setLoading(true);\n\n    const file = e.target.files[0];\n    e.target.value = '';\n\n    if (!file) return;\n\n    if (file.size >= MAX_USER_PROFILE_IMAGE_SIZE) {\n      setLoading(false);\n      message.error(\n        `File size should be less then ${MAX_USER_PROFILE_IMAGE_SIZE /\n          1000000}MB`\n      );\n      return;\n    }\n\n    try {\n      await client.mutate({\n        mutation: UPLOAD_PHOTO,\n        variables: { input: { id: auth.user.id, image: file, imagePublicId } },\n        refetchQueries: () => [\n          { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\n          { query: GET_AUTH_USER },\n          { query: GET_USER, variables: { username: auth.user.username } },\n        ],\n      });\n    } catch (err) {\n      message.error(err.graphQLErrors[0].message);\n    }\n\n    setLoading(false);\n  };\n\n  const renderProfileImage = () => {\n    if (loading) {\n      return <Loading top=\"xl\" />;\n    }\n\n    return image ? (\n      <Image src={image} alt=\"profile\" accept=\"image/x-png,image/jpeg\" />\n    ) : (\n      <UserIcon width=\"172\" />\n    );\n  };\n\n  const authUser = auth.user.id === userId;\n\n  return (\n    <>\n      {authUser && (\n        <Input\n          name=\"image\"\n          type=\"file\"\n          id=\"image\"\n          accept=\"image/x-png,image/jpeg\"\n          onChange={handleImageChange}\n        />\n      )}\n\n      <Label authUser={authUser} htmlFor=\"image\">\n        {authUser && <Overlay>{image ? 'Update' : 'Upload'}</Overlay>}\n\n        {renderProfileImage()}\n      </Label>\n    </>\n  );\n};\n\nProfileImageUpload.propTypes = {\n  image: PropTypes.string,\n  imagePublicId: PropTypes.string,\n  userId: PropTypes.string.isRequired,\n  client: PropTypes.object.isRequired,\n};\n\nexport default withApollo(ProfileImageUpload);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { withApollo } from 'react-apollo';\n\nimport { UploadImageIcon } from 'components/icons';\nimport { Loading } from 'components/Loading';\n\nimport { MAX_USER_COVER_IMAGE_SIZE } from 'constants/ImageSize';\n\nimport { GET_AUTH_USER, GET_USER, UPLOAD_PHOTO } from 'graphql/user';\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\n\nimport defaultBackgroundImage from './background.jpg';\n\nimport { useStore } from 'store';\n\nimport { useGlobalMessage } from 'hooks/useGlobalMessage';\n\nconst Root = styled.div`\n  width: 100%;\n  height: 350px;\n  position: relative;\n  background-image: url(${p => (p.image ? p.image : defaultBackgroundImage)});\n  background-size: cover;\n  background-position: center;\n  border-bottom-left-radius: ${p => p.theme.radius.md};\n  border-bottom-right-radius: ${p => p.theme.radius.md};\n  box-shadow: ${p => p.theme.shadows.sm};\n`;\n\nconst Input = styled.input`\n  display: none;\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  overflow: hidden;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  left: ${p => p.theme.spacing.sm};\n  top: ${p => p.theme.spacing.sm};\n  padding: ${p => p.theme.spacing.xxs} ${p => p.theme.spacing.xs};\n  border-radius: ${p => p.theme.radius.sm};\n  transition: background-color 0.4s;\n  background-color: rgba(0, 0, 0, 0.6);\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.8);\n  }\n`;\n\n/**\n * Displays and Updates user Cover image\n */\nconst ProfileCoverUpload = ({\n  client,\n  coverImagePublicId,\n  coverImage,\n  userId,\n}) => {\n  const [{ auth }] = useStore();\n\n  const [loading, setLoading] = useState(false);\n\n  const message = useGlobalMessage();\n\n  const handleImageChange = async e => {\n    setLoading(true);\n\n    const file = e.target.files[0];\n    e.target.value = '';\n\n    if (!file) return;\n\n    if (file.size >= MAX_USER_COVER_IMAGE_SIZE) {\n      message.error(\n        `File size should be less then ${MAX_USER_COVER_IMAGE_SIZE / 1000000}MB`\n      );\n      setLoading(false);\n      return;\n    }\n\n    try {\n      await client.mutate({\n        mutation: UPLOAD_PHOTO,\n        variables: {\n          input: {\n            id: auth.user.id,\n            image: file,\n            imagePublicId: coverImagePublicId,\n            isCover: true,\n          },\n        },\n        refetchQueries: () => [\n          { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\n          { query: GET_AUTH_USER },\n          { query: GET_USER, variables: { username: auth.user.username } },\n        ],\n      });\n    } catch (err) {\n      message.error(err.graphQLErrors[0].message);\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <Root image={coverImage}>\n      <Input\n        name=\"coverImage\"\n        type=\"file\"\n        id=\"coverImage\"\n        onChange={handleImageChange}\n        accept=\"image/x-png,image/jpeg\"\n      />\n\n      {loading && <Loading top=\"xl\" size=\"xl\" />}\n\n      {auth.user.id === userId && (\n        <Label htmlFor=\"coverImage\">\n          <UploadImageIcon width=\"14\" color=\"white\" />\n        </Label>\n      )}\n    </Root>\n  );\n};\n\nProfileCoverUpload.propTypes = {\n  client: PropTypes.object.isRequired,\n  userId: PropTypes.string.isRequired,\n  coverImagePublicId: PropTypes.string,\n  coverImage: PropTypes.string,\n};\n\nexport default withApollo(ProfileCoverUpload);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link, generatePath } from 'react-router-dom';\nimport { useSubscription } from '@apollo/react-hooks';\n\nimport { IS_USER_ONLINE_SUBSCRIPTION } from 'graphql/user';\n\nimport { H1 } from 'components/Text';\nimport { Spacing } from 'components/Layout';\nimport Follow from 'components/Follow';\nimport ProfileImageUpload from './ProfileImageUpload';\nimport ProfileCoverUpload from './ProfileCoverUpload';\n\nimport { useStore } from 'store';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ProfileImage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: -140px;\n`;\n\nconst FullName = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: ${p => p.theme.spacing.sm};\n  position: relative;\n\n  ${H1} {\n    font-size: ${p => p.theme.font.size.lg};\n  }\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    ${H1} {\n      font-size: ${p => p.theme.font.size.xl};\n    }\n  }\n`;\n\nconst FollowAndMessage = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: ${p => p.theme.spacing.sm};\n`;\n\nconst Message = styled(Link)`\n  text-decoration: none;\n  font-size: ${p => p.theme.font.size.xs};\n`;\n\nconst Online = styled.div`\n  width: 8px;\n  height: 8px;\n  background-color: ${p => p.theme.colors.success};\n  margin-left: ${p => p.theme.spacing.sm};\n  border-radius: 50%;\n`;\n\nconst Info = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  font-size: ${p => p.theme.font.size.xs};\n  margin-top: ${p => p.theme.spacing.sm};\n`;\n\nconst List = styled.div`\n  padding: 0 ${p => p.theme.spacing.xs};\n  color: ${p => p.theme.colors.grey[800]};\n  white-space: nowrap;\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    padding: 0 ${p => p.theme.spacing.lg};\n  }\n`;\n\n/**\n * Renders user information in profile page\n */\nconst ProfileInfo = ({ user }) => {\n  const [{ auth }] = useStore();\n\n  const { data, loading } = useSubscription(IS_USER_ONLINE_SUBSCRIPTION, {\n    variables: { authUserId: auth.user.id, userId: user.id },\n  });\n\n  let isUserOnline = user.isOnline;\n  if (!loading && data) {\n    isUserOnline = data.isUserOnline.isOnline;\n  }\n\n  return (\n    <Root>\n      <ProfileCoverUpload\n        userId={user.id}\n        coverImage={user.coverImage}\n        coverImagePublicId={user.coverImagePublicId}\n      />\n\n      <ProfileImage>\n        <ProfileImageUpload\n          userId={user.id}\n          image={user.image}\n          imagePublicId={user.imagePublicId}\n          username={user.username}\n        />\n\n        <FullName>\n          <H1>{user.fullName}</H1>\n\n          {isUserOnline && auth.user.id !== user.id && <Online />}\n\n          {auth.user.id !== user.id && (\n            <FollowAndMessage>\n              <Follow user={user} />\n\n              <Spacing left=\"sm\" />\n              <Message to={generatePath(Routes.MESSAGES, { userId: user.id })}>\n                Message\n              </Message>\n            </FollowAndMessage>\n          )}\n        </FullName>\n      </ProfileImage>\n\n      <Info>\n        <List>\n          <b>{user.posts.length} </b> posts\n        </List>\n        <List>\n          <b>{user.followers.length} </b> followers\n        </List>\n        <List>\n          <b>{user.following.length} </b> following\n        </List>\n      </Info>\n    </Root>\n  );\n};\n\nProfileInfo.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default ProfileInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { EmptyIcon } from 'components/icons';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\n/**\n * Component for displaying when there is no data provided\n */\nconst Empty = ({ text }) => (\n  <Container>\n    <EmptyIcon />\n\n    {text}\n  </Container>\n);\n\nEmpty.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Empty;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from 'react-apollo';\nimport { generatePath } from 'react-router-dom';\n\nimport Skeleton from 'components/Skeleton';\nimport Modal from 'components/Modal';\nimport PostPopup from 'components/PostPopup';\nimport PostCard from 'components/PostCard';\nimport { Spacing } from 'components/Layout';\nimport InfiniteScroll from 'components/InfiniteScroll';\nimport { Loading } from 'components/Loading';\nimport Empty from 'components/Empty';\n\nimport { PROFILE_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\n\nimport { GET_USER_POSTS } from 'graphql/user';\n\nimport * as Routes from 'routes';\n\n/**\n * Renders posts in profile page\n */\nconst ProfilePosts = ({ username }) => {\n  const [isPostPopupOpen, setIsPostPopupOpen] = useState(false);\n  const [modalPostId, setModalPostId] = useState('');\n\n  const openModal = postId => {\n    window.history.pushState('', '', generatePath(Routes.POST, { id: postId }));\n    setModalPostId(postId);\n    setIsPostPopupOpen(true);\n  };\n\n  const closeModal = () => {\n    window.history.pushState(\n      '',\n      '',\n      generatePath(Routes.USER_PROFILE, { username })\n    );\n    setIsPostPopupOpen(false);\n  };\n\n  const variables = { username, skip: 0, limit: PROFILE_PAGE_POSTS_LIMIT };\n\n  return (\n    <Query\n      query={GET_USER_POSTS}\n      variables={variables}\n      notifyOnNetworkStatusChange\n    >\n      {({ data, loading, fetchMore, networkStatus }) => {\n        if (loading && networkStatus === 1) {\n          return (\n            <Skeleton\n              height={500}\n              bottom=\"lg\"\n              top=\"lg\"\n              count={PROFILE_PAGE_POSTS_LIMIT}\n            />\n          );\n        }\n\n        const { posts, count } = data.getUserPosts;\n\n        if (!posts.length > 0) {\n          return (\n            <Spacing bottom=\"lg\">\n              <Empty text=\"No posts yet.\" />\n            </Spacing>\n          );\n        }\n\n        return (\n          <InfiniteScroll\n            data={posts}\n            dataKey=\"getUserPosts.posts\"\n            count={parseInt(count)}\n            variables={variables}\n            fetchMore={fetchMore}\n          >\n            {data => {\n              return data.map((post, i) => {\n                const showNextLoading =\n                  loading && networkStatus === 3 && data.length - 1 === i;\n\n                return (\n                  <Fragment key={post.id}>\n                    {modalPostId === post.id && (\n                      <Modal open={isPostPopupOpen} onClose={closeModal}>\n                        <PostPopup id={post.id} closeModal={closeModal} />\n                      </Modal>\n                    )}\n\n                    <Spacing bottom=\"lg\">\n                      <PostCard\n                        author={post.author}\n                        postId={post.id}\n                        imagePublicId={post.imagePublicId}\n                        comments={post.comments}\n                        title={post.title}\n                        image={post.image}\n                        likes={post.likes}\n                        createdAt={post.createdAt}\n                        openModal={() => openModal(post.id)}\n                      />\n                    </Spacing>\n\n                    {showNextLoading && <Loading top=\"lg\" />}\n                  </Fragment>\n                );\n              });\n            }}\n          </InfiniteScroll>\n        );\n      }}\n    </Query>\n  );\n};\n\nProfilePosts.propTypes = {\n  username: PropTypes.string.isRequired,\n};\n\nexport default ProfilePosts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Query } from 'react-apollo';\nimport styled from 'styled-components';\n\nimport Skeleton from 'components/Skeleton';\nimport { Container, Spacing } from 'components/Layout';\nimport ProfileInfo from './ProfileInfo';\nimport CreatePost from 'components/CreatePost';\nimport ProfilePosts from './ProfilePosts';\nimport NotFound from 'components/NotFound';\nimport Head from 'components/Head';\n\nimport { GET_USER } from 'graphql/user';\n\nimport { useStore } from 'store';\n\nconst Root = styled.div`\n  width: 100%;\n\n  @media (min-width: ${p => p.theme.screen.lg}) {\n    margin-left: ${p => p.theme.spacing.lg};\n    padding: 0;\n  }\n`;\n\n/**\n * User Profile Page\n */\nconst Profile = ({ match }) => {\n  const [{ auth }] = useStore();\n  const { username } = match.params;\n\n  return (\n    <Root>\n      <Head title={username} />\n\n      <Query query={GET_USER} variables={{ username }}>\n        {({ data, loading, error }) => {\n          if (loading) {\n            return (\n              <Container padding=\"xxs\">\n                <Skeleton height={350} />\n                <Container maxWidth=\"sm\">\n                  <Spacing top=\"lg\" bottom=\"lg\">\n                    <Skeleton height={82} />\n                  </Spacing>\n                </Container>\n              </Container>\n            );\n          }\n\n          if (error || !data.getUser) return <NotFound />;\n\n          return (\n            <Container padding=\"xxs\">\n              <ProfileInfo user={data.getUser} />\n\n              <Container maxWidth=\"sm\">\n                <Spacing top=\"lg\" bottom=\"lg\">\n                  {username === auth.user.username && <CreatePost />}\n                </Spacing>\n\n                <ProfilePosts username={username} />\n              </Container>\n            </Container>\n          );\n        }}\n      </Query>\n    </Root>\n  );\n};\n\nProfile.propTypes = {\n  match: PropTypes.object.isRequired,\n};\n\nexport default withRouter(Profile);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Spacing } from 'components/Layout';\nimport { LikeIcon, PostCommentIcon } from 'components/icons';\n\nconst Overlay = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  bottom: 0;\n  opacity: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  transition: opacity 0.3s, visibility 0.3s;\n  background-color: rgba(0, 0, 0, 0.3);\n  color: ${p => p.theme.colors.white};\n`;\n\nconst Root = styled.div`\n  width: 100%;\n  position: relative;\n  cursor: pointer;\n  border-radius: ${p => p.theme.radius.sm};\n  overflow: hidden;\n\n  &:hover ${Overlay} {\n    opacity: 1;\n  }\n`;\n\nconst Photo = styled.div`\n  width: 100%;\n  height: 300px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  background-color: ${p => p.theme.colors.grey[300]};\n`;\n\n/**\n * Card component, meant to be used in Explore page\n */\nconst ExploreCard = ({ openPostPopup, image, countLikes, countComments }) => {\n  const [imageLoaded, setImageLoaded] = useState(false);\n\n  useEffect(() => {\n    const img = new Image();\n    img.src = image;\n\n    img.onload = () => {\n      setImageLoaded(true);\n    };\n\n    return () => {\n      img.onload = null;\n    };\n  }, [image]);\n\n  return (\n    <Root>\n      <Photo style={imageLoaded ? { backgroundImage: `url(${image})` } : {}} />\n\n      <Overlay onClick={openPostPopup}>\n        <LikeIcon color=\"white\" />\n\n        <Spacing left=\"xs\" right=\"lg\">\n          {countLikes}\n        </Spacing>\n\n        <PostCommentIcon color=\"white\" />\n\n        <Spacing left=\"xs\">{countComments}</Spacing>\n      </Overlay>\n    </Root>\n  );\n};\n\nExploreCard.propTypes = {\n  openPostPopup: PropTypes.func.isRequired,\n  image: PropTypes.string.isRequired,\n  countLikes: PropTypes.number.isRequired,\n  countComments: PropTypes.number.isRequired,\n};\n\nexport default ExploreCard;\n","import React, { useState, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { generatePath } from 'react-router-dom';\nimport { Query } from 'react-apollo';\n\nimport { Container } from 'components/Layout';\nimport ExploreCard from './ExploreCard';\nimport Skeleton from 'components/Skeleton';\nimport PostPopup from 'components/PostPopup';\nimport Modal from 'components/Modal';\nimport InfiniteScroll from 'components/InfiniteScroll';\nimport Empty from 'components/Empty';\nimport { Loading } from 'components/Loading';\nimport Head from 'components/Head';\n\nimport { GET_POSTS } from 'graphql/post';\n\nimport { EXPLORE_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\n\nimport { useStore } from 'store';\n\nimport * as Routes from 'routes';\n\nconst Root = styled(Container)`\n  margin-top: ${p => p.theme.spacing.lg};\n  margin-bottom: ${p => p.theme.spacing.sm};\n\n  @media (min-width: ${p => p.theme.screen.lg}) {\n    margin-left: ${p => p.theme.spacing.lg};\n    padding: 0;\n  }\n`;\n\nconst PostsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(260px, 3fr));\n  grid-auto-rows: auto;\n  grid-gap: 20px;\n`;\n\n/**\n * Explore page\n */\nconst Explore = () => {\n  const [{ auth }] = useStore();\n\n  const [modalPostId, setModalPostId] = useState(null);\n\n  const closeModal = () => {\n    window.history.pushState('', '', '/explore');\n    setModalPostId(null);\n  };\n\n  const openModal = postId => {\n    window.history.pushState('', '', generatePath(Routes.POST, { id: postId }));\n    setModalPostId(postId);\n  };\n\n  const variables = {\n    authUserId: auth.user.id,\n    skip: 0,\n    limit: EXPLORE_PAGE_POSTS_LIMIT,\n  };\n\n  return (\n    <Root maxWidth=\"md\">\n      <Head title=\"Explore New Posts and Users\" />\n\n      <Query\n        query={GET_POSTS}\n        variables={variables}\n        notifyOnNetworkStatusChange\n      >\n        {({ data, loading, fetchMore, networkStatus }) => {\n          if (loading && networkStatus === 1) {\n            return (\n              <PostsContainer>\n                <Skeleton height={300} count={EXPLORE_PAGE_POSTS_LIMIT} />\n              </PostsContainer>\n            );\n          }\n\n          const { posts, count } = data.getPosts;\n\n          if (!posts.length > 0) return <Empty text=\"No posts yet.\" />;\n\n          return (\n            <InfiniteScroll\n              data={posts}\n              dataKey=\"getPosts.posts\"\n              count={parseInt(count)}\n              variables={variables}\n              fetchMore={fetchMore}\n            >\n              {data => {\n                const showNextLoading =\n                  loading && networkStatus === 3 && count !== data.length;\n\n                return (\n                  <Fragment>\n                    <PostsContainer>\n                      {data.map(post => (\n                        <Fragment key={post.id}>\n                          <Modal\n                            open={modalPostId === post.id}\n                            onClose={closeModal}\n                          >\n                            <PostPopup id={post.id} closeModal={closeModal} />\n                          </Modal>\n\n                          <ExploreCard\n                            image={post.image}\n                            countLikes={post.likes.length}\n                            countComments={post.comments.length}\n                            openPostPopup={() => openModal(post.id)}\n                          />\n                        </Fragment>\n                      ))}\n                    </PostsContainer>\n\n                    {showNextLoading && <Loading top=\"lg\" />}\n                  </Fragment>\n                );\n              }}\n            </InfiniteScroll>\n          );\n        }}\n      </Query>\n    </Root>\n  );\n};\n\nexport default Explore;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { generatePath } from 'react-router-dom';\n\nimport { A } from 'components/Text';\nimport { Spacing } from 'components/Layout';\nimport Follow from 'components/Follow';\nimport theme from 'theme';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 280px;\n  background-color: white;\n  padding: ${p => p.theme.spacing.sm};\n  border-radius: ${p => p.theme.radius.sm};\n  border: 1px solid ${p => p.theme.colors.border.main};\n  transition: border-color 0.1s;\n`;\n\nconst ImageContainer = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  overflow: hidden;\n  flex-shrink: 0;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst InitialLetters = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.white};\n  font-size: ${p => p.theme.font.size.lg};\n  background-color: ${p => p.color};\n`;\n\nconst FullName = styled.span`\n  max-width: 200px;\n  font-weight: ${p => p.theme.font.weight.bold};\n`;\n\nconst UserName = styled.span`\n  font-size: ${p => p.theme.font.size.xs};\n`;\n\n/**\n * Card component for rendering user info, meant to be used in Peoples page\n */\nconst PeopleCard = ({ user }) => {\n  const [color, setColor] = useState('');\n\n  const { fullName, username, image } = user;\n\n  useEffect(() => {\n    const { primary, secondary, success, error } = theme.colors;\n    const colors = [primary.main, secondary.main, success, error.main];\n    const randomColor = Math.floor(Math.random() * colors.length);\n    setColor(colors[randomColor]);\n  }, []);\n\n  const splitFullName = () => {\n    // If a fullName contains more word than two, take first two word\n    const splitWords = fullName\n      .split(' ')\n      .slice(0, 2)\n      .join(' ');\n\n    // Take only first letters from split words\n    const firstLetters = splitWords\n      .split(' ')\n      .map(a => a.charAt(0))\n      .join(' ');\n\n    return firstLetters;\n  };\n\n  return (\n    <Root>\n      <A to={generatePath(Routes.USER_PROFILE, { username })}>\n        <ImageContainer>\n          {image ? (\n            <Image src={image} />\n          ) : (\n            <InitialLetters color={color}>{splitFullName()}</InitialLetters>\n          )}\n        </ImageContainer>\n      </A>\n\n      <Spacing top=\"sm\" bottom=\"xs\">\n        <A to={generatePath(Routes.USER_PROFILE, { username })}>\n          <FullName>{fullName}</FullName>\n        </A>\n      </Spacing>\n\n      <UserName>@{username}</UserName>\n\n      <Spacing top=\"lg\" />\n\n      <Follow user={user} />\n    </Root>\n  );\n};\n\nPeopleCard.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default PeopleCard;\n","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\n\nimport { Container } from 'components/Layout';\nimport Skeleton from 'components/Skeleton';\nimport { Loading } from 'components/Loading';\nimport Empty from 'components/Empty';\nimport InfiniteScroll from 'components/InfiniteScroll';\nimport Head from 'components/Head';\nimport PeopleCard from './PeopleCard';\n\nimport { GET_USERS } from 'graphql/user';\n\nimport { PEOPLE_PAGE_USERS_LIMIT } from 'constants/DataLimit';\n\nimport { useStore } from 'store';\n\nimport { Query } from 'react-apollo';\n\nconst Root = styled(Container)`\n  margin-top: ${p => p.theme.spacing.lg};\n\n  @media (min-width: ${p => p.theme.screen.lg}) {\n    margin-left: ${p => p.theme.spacing.lg};\n    padding: 0;\n  }\n`;\n\nconst PeopleContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(180px, 3fr));\n  grid-auto-rows: auto;\n  grid-gap: 20px;\n  margin-bottom: ${p => p.theme.spacing.lg};\n`;\n\n/**\n * People page\n */\nconst People = () => {\n  const [{ auth }] = useStore();\n  const variables = {\n    userId: auth.user.id,\n    skip: 0,\n    limit: PEOPLE_PAGE_USERS_LIMIT,\n  };\n\n  return (\n    <Root maxWidth=\"md\">\n      <Head title=\"Find new People\" />\n\n      <Query\n        query={GET_USERS}\n        variables={variables}\n        notifyOnNetworkStatusChange\n      >\n        {({ data, loading, fetchMore, networkStatus }) => {\n          if (loading && networkStatus === 1) {\n            return (\n              <PeopleContainer>\n                <Skeleton height={280} count={PEOPLE_PAGE_USERS_LIMIT} />\n              </PeopleContainer>\n            );\n          }\n\n          const { users, count } = data.getUsers;\n\n          if (!users.length > 0) return <Empty text=\"No people yet.\" />;\n\n          return (\n            <InfiniteScroll\n              data={users}\n              dataKey=\"getUsers.users\"\n              count={parseInt(count)}\n              variables={variables}\n              fetchMore={fetchMore}\n            >\n              {data => {\n                const showNextLoading =\n                  loading && networkStatus === 3 && count !== data.length;\n\n                return (\n                  <Fragment>\n                    <PeopleContainer>\n                      {data.map(user => (\n                        <PeopleCard key={user.id} user={user} />\n                      ))}\n                    </PeopleContainer>\n\n                    {showNextLoading && <Loading top=\"lg\" />}\n                  </Fragment>\n                );\n              }}\n            </InfiniteScroll>\n          );\n        }}\n      </Query>\n    </Root>\n  );\n};\n\nexport default People;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Query } from 'react-apollo';\n\nimport { Container, Content } from 'components/Layout';\nimport { Loading } from 'components/Loading';\nimport Skeleton from 'components/Skeleton';\nimport Notification from 'components/App/Notification';\nimport InfiniteScroll from 'components/InfiniteScroll';\nimport Empty from 'components/Empty';\nimport Head from 'components/Head';\n\nimport { useStore } from 'store';\n\nimport { GET_USER_NOTIFICATION } from 'graphql/notification';\n\nimport { NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT } from 'constants/DataLimit';\n\nconst Root = styled(Container)`\n  margin-top: ${p => p.theme.spacing.lg};\n`;\n\nconst List = styled.div`\n  overflow: hidden;\n  border-radius: ${p => p.theme.radius.sm};\n  border: 1px solid ${p => p.theme.colors.border.main};\n`;\n\n/**\n * Notifications page\n */\nconst Notifications = () => {\n  const [{ auth }] = useStore();\n\n  const variables = {\n    userId: auth.user.id,\n    skip: 0,\n    limit: NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT,\n  };\n\n  return (\n    <Content>\n      <Root maxWidth=\"md\">\n        <Head title={`${auth.user.username}'s Notifications`} />\n\n        <Query\n          query={GET_USER_NOTIFICATION}\n          variables={variables}\n          notifyOnNetworkStatusChange\n        >\n          {({ data, loading, fetchMore, networkStatus }) => {\n            if (loading && networkStatus === 1) {\n              return (\n                <Skeleton\n                  height={56}\n                  bottom=\"xxs\"\n                  count={NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT}\n                />\n              );\n            }\n\n            const { notifications, count } = data.getUserNotifications;\n\n            if (!notifications.length) {\n              return <Empty text=\"No notifications yet.\" />;\n            }\n\n            return (\n              <InfiniteScroll\n                data={notifications}\n                dataKey=\"getUserNotifications.notifications\"\n                count={parseInt(count)}\n                variables={variables}\n                fetchMore={fetchMore}\n              >\n                {data => {\n                  const showNextLoading =\n                    loading && networkStatus === 3 && count !== data.length;\n\n                  return (\n                    <>\n                      <List>\n                        {data.map(notification => (\n                          <Notification\n                            key={notification.id}\n                            notification={notification}\n                            close={() => false}\n                          />\n                        ))}\n                      </List>\n\n                      {showNextLoading && <Loading top=\"lg\" />}\n                    </>\n                  );\n                }}\n              </InfiniteScroll>\n            );\n          }}\n        </Query>\n      </Root>\n    </Content>\n  );\n};\n\nexport default Notifications;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nimport { Content } from 'components/Layout';\nimport PostPopup from 'components/PostPopup';\n\n/**\n * Post detail page\n */\nconst Post = ({ match }) => {\n  return (\n    <Content>\n      <PostPopup usedInModal={false} id={match.params.id} />\n    </Content>\n  );\n};\n\nPost.propTypes = {\n  match: PropTypes.object.isRequired,\n};\n\nexport default withRouter(Post);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { NavLink, generatePath, withRouter } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { GET_CONVERSATIONS } from 'graphql/user';\nimport { GET_NEW_CONVERSATIONS_SUBSCRIPTION } from 'graphql/messages';\n\nimport Search from 'components/Search';\nimport { PencilIcon } from 'components/icons';\nimport { LoadingDots } from 'components/Loading';\nimport Avatar from 'components/Avatar';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  width: 80px;\n  height: 100%;\n  border-right: 1px solid ${p => p.theme.colors.border.main};\n\n  @media (min-width: ${p => p.theme.screen.lg}) {\n    width: 330px;\n  }\n`;\n\nconst HeadingContainer = styled.div`\n  border-bottom: 1px solid ${p => p.theme.colors.border.main};\n  height: 60px;\n  padding: 0 ${p => p.theme.spacing.xs};\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n\n  @media (min-width: ${p => p.theme.screen.lg}) {\n    justify-content: space-between;\n  }\n`;\n\nconst Heading = styled.h3`\n  display: none;\n  color: ${p => p.theme.colors.text.primary};\n  margin: 0;\n\n  @media (min-width: ${p => p.theme.screen.lg}) {\n    display: block;\n  }\n`;\n\nconst NewMessage = styled(NavLink)`\n  width: 40px;\n  height: 40px;\n  background-color: ${p => p.theme.colors.grey[200]};\n  border-radius: 50%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SearchContainer = styled.div`\n  display: none;\n  border-bottom: 1px solid ${p => p.theme.colors.border.main};\n\n  @media (min-width: ${p => p.theme.screen.lg}) {\n    display: block;\n  }\n`;\n\nconst UserContainer = styled.div`\n  margin-top: ${p => p.theme.spacing.sm};\n  padding: 0 ${p => p.theme.spacing.xxs};\n`;\n\nconst User = styled(NavLink)`\n  width: 100%;\n  padding: ${p => p.theme.spacing.xxs} ${p => p.theme.spacing.xxs};\n  margin-bottom: ${p => p.theme.spacing.xxs};\n  border-radius: ${p => p.theme.radius.md};\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  text-decoration: none;\n  color: ${p => p.theme.colors.text.primary};\n\n  @media (max-width: ${p => p.theme.screen.lg}) {\n    ${p =>\n      !p.seen &&\n      `\n        background-color: ${p.theme.colors.primary.light};\n      `};\n  }\n\n  &.selected {\n    background-color: ${p => p.theme.colors.grey[100]};\n  }\n`;\n\nconst Info = styled.div`\n  width: 100%;\n  display: none;\n  padding: 0 ${p => p.theme.spacing.xs};\n\n  @media (min-width: ${p => p.theme.screen.lg}) {\n    display: block;\n  }\n`;\n\nconst FullNameUnSeen = styled.div`\n  width: 100%;\n  font-size: ${p => p.theme.font.size.sm};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst FullName = styled.div`\n  text-overflow: ellipsis;\n  width: 100%;\n`;\n\nconst UnSeen = styled.div`\n  width: 8px;\n  height: 8px;\n  background-color: ${p => p.theme.colors.primary.light};\n  border-radius: 50%;\n`;\n\nconst LastMessage = styled.div`\n  margin-top: ${p => p.theme.spacing.xxs};\n  font-size: ${p => p.theme.font.size.xxs};\n  color: ${p => p.theme.colors.grey[500]};\n  text-overflow: ellipsis;\n`;\n\n/**\n * Component that renders users, with whom auth user had a chat\n */\nconst MessagesUsers = ({ location, authUser }) => {\n  const { subscribeToMore, data, loading } = useQuery(GET_CONVERSATIONS, {\n    variables: { authUserId: authUser.id },\n  });\n\n  useEffect(() => {\n    const unsubscribe = subscribeToMore({\n      document: GET_NEW_CONVERSATIONS_SUBSCRIPTION,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n\n        const { newConversation } = subscriptionData.data;\n        const oldConversations = prev.getConversations;\n\n        if (oldConversations.some(u => u.id === newConversation.id)) {\n          return prev;\n        }\n\n        // Merge conversations\n        const conversations = newConversation;\n        delete conversations['receiverId'];\n        const mergedConversations = [newConversation, ...oldConversations];\n\n        return { getConversations: mergedConversations };\n      },\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [subscribeToMore]);\n\n  return (\n    <Root>\n      <HeadingContainer>\n        <Heading>Chats</Heading>\n\n        <NewMessage\n          exact\n          activeClassName=\"selected\"\n          to={generatePath(Routes.MESSAGES, { userId: Routes.NEW_ID_VALUE })}\n        >\n          <PencilIcon />\n        </NewMessage>\n      </HeadingContainer>\n\n      <SearchContainer>\n        <Search\n          location={location}\n          backgroundColor=\"white\"\n          forMessage\n          placeholder=\"Search message\"\n        />\n      </SearchContainer>\n\n      {loading && <LoadingDots top=\"xl\" />}\n\n      {!loading && (\n        <UserContainer>\n          {data.getConversations.map(user => {\n            const unseen = !user.lastMessageSender && !user.seen;\n\n            return (\n              <User\n                key={user.id}\n                activeClassName=\"selected\"\n                to={`/messages/${user.id}`}\n                seen={unseen ? 0 : 1}\n              >\n                <span>\n                  <Avatar image={user.image} size={50} />\n                </span>\n\n                <Info>\n                  <FullNameUnSeen>\n                    <FullName>{user.fullName}</FullName>\n\n                    {unseen && <UnSeen />}\n                  </FullNameUnSeen>\n\n                  <LastMessage>\n                    {user.lastMessageSender && 'You:'} {user.lastMessage}\n                  </LastMessage>\n                </Info>\n              </User>\n            );\n          })}\n        </UserContainer>\n      )}\n    </Root>\n  );\n};\n\nMessagesUsers.propTypes = {\n  location: PropTypes.object.isRequired,\n  authUser: PropTypes.object.isRequired,\n};\n\nexport default withRouter(MessagesUsers);\n","import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport { Button, Textarea } from 'components/Form';\nimport { SendIcon } from 'components/icons';\nimport Avatar from 'components/Avatar';\nimport { Spacing } from 'components/Layout';\n\nimport { CREATE_MESSAGE } from 'graphql/messages';\nimport { GET_CONVERSATIONS } from 'graphql/user';\n\nimport { currentDate } from 'utils/date';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  padding: 0 ${p => p.theme.spacing.sm};\n  overflow-y: auto;\n  height: 100vh;\n  margin-top: -120px;\n  padding-top: 120px;\n  display: flex;\n  flex-direction: column;\n\n  ::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: ${p => p.theme.colors.grey[500]};\n    border-radius: ${p => p.theme.radius.lg};\n    visibility: hidden;\n\n    &:hover {\n      background-color: ${p => p.theme.colors.grey[600]};\n    }\n  }\n\n  &:hover {\n    ::-webkit-scrollbar-thumb {\n      visibility: visible;\n    }\n  }\n`;\n\nconst Conversation = styled.div`\n  flex: 1;\n`;\n\nconst MessageDate = styled.span`\n  position: absolute;\n  bottom: -${p => p.theme.spacing.sm};\n  left: ${p => !p.userMessage && p.theme.spacing.lg};\n  right: -${p => p.userMessage && 0};\n  display: none;\n  font-size: ${p => p.theme.font.size.tiny};\n  color: ${p => p.theme.colors.text.secondary};\n`;\n\nconst MessageWrapper = styled.div`\n  display: flex;\n  position: relative;\n  justify-content: ${p => p.userMessage && 'flex-end'};\n  margin: ${p => p.theme.spacing.md} 0;\n\n  &:hover ${MessageDate} {\n    display: block;\n  }\n`;\n\nconst Message = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  max-width: 300px;\n  line-height: 21px;\n  font-size: ${p => p.theme.font.size.xs};\n  padding: ${p => p.theme.spacing.xxs} ${p => p.theme.spacing.xs};\n  border-radius: ${p => p.theme.radius.lg};\n  color: ${p => p.userMessage && p.theme.colors.white};\n  background-color: ${p =>\n    p.userMessage ? p.theme.colors.primary.light : p.theme.colors.grey[200]};\n`;\n\nconst Form = styled.form`\n  background-color: ${p => p.theme.colors.white};\n  position: sticky;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  padding: ${p => p.theme.spacing.xxs};\n`;\n\nconst StyledTextarea = styled(Textarea)`\n  height: 38px;\n  border-radius: ${p => p.theme.radius.lg};\n  background-color: ${p => p.theme.colors.grey[200]};\n`;\n\nconst SendButton = styled(Button)`\n  margin-left: ${p => p.theme.spacing.sm};\n  align-self: center;\n`;\n\n/**\n * Component that renders messages conversations UI\n */\nconst MessagesChatConversation = ({\n  messages,\n  authUser,\n  chatUser,\n  data,\n  match,\n}) => {\n  const bottomRef = useRef(null);\n\n  const [messageText, setMessageText] = useState('');\n\n  const [createMessage] = useMutation(CREATE_MESSAGE);\n\n  useEffect(() => {\n    if (bottomRef.current) {\n      bottomRef.current.scrollIntoView();\n    }\n  }, [bottomRef, data]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (!messageText) return;\n\n    setMessageText('');\n    createMessage({\n      variables: {\n        input: {\n          sender: authUser.id,\n          receiver: chatUser ? chatUser.id : null,\n          message: messageText,\n        },\n      },\n      refetchQueries: ({ data }) => {\n        if (data && data.createMessage && data.createMessage.isFirstMessage) {\n          return [\n            {\n              query: GET_CONVERSATIONS,\n              variables: { authUserId: authUser.id },\n            },\n          ];\n        }\n      },\n    });\n  };\n\n  const onEnterPress = e => {\n    if (e.keyCode === 13 && e.shiftKey === false) {\n      sendMessage(e);\n    }\n  };\n\n  return (\n    <Root>\n      <Conversation>\n        {messages.map(message => {\n          const isAuthUserReceiver = authUser.id === message.sender.id;\n\n          return (\n            <MessageWrapper userMessage={isAuthUserReceiver} key={message.id}>\n              {!isAuthUserReceiver && (\n                <Spacing right=\"xs\">\n                  <Avatar image={message.sender.image} />\n                </Spacing>\n              )}\n\n              <Message userMessage={isAuthUserReceiver}>\n                {message.message}\n              </Message>\n\n              <MessageDate userMessage={isAuthUserReceiver}>\n                {currentDate(message.createdAt)}\n              </MessageDate>\n            </MessageWrapper>\n          );\n        })}\n        <div ref={bottomRef} />\n      </Conversation>\n\n      {match.params.userId !== Routes.NEW_ID_VALUE && chatUser && (\n        <Form onSubmit={sendMessage}>\n          <StyledTextarea\n            placeholder=\"Type a message\"\n            value={messageText}\n            onChange={e => setMessageText(e.target.value)}\n            onKeyDown={onEnterPress}\n          />\n\n          <SendButton type=\"submit\" ghost>\n            <SendIcon width=\"28\" />\n          </SendButton>\n        </Form>\n      )}\n    </Root>\n  );\n};\n\nMessagesChatConversation.propTypes = {\n  messages: PropTypes.array.isRequired,\n  authUser: PropTypes.object.isRequired,\n  chatUser: PropTypes.object,\n  data: PropTypes.any,\n  match: PropTypes.object.isRequired,\n};\n\nexport default MessagesChatConversation;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { generatePath, withRouter, Link } from 'react-router-dom';\nimport { useSubscription } from '@apollo/react-hooks';\n\nimport Search from 'components/Search';\nimport Avatar from 'components/Avatar';\n\nimport { IS_USER_ONLINE_SUBSCRIPTION } from 'graphql/user';\n\nimport * as Routes from 'routes';\n\nimport { useStore } from 'store';\n\nconst Root = styled.div`\n  position: relative;\n  background-color: ${p => p.theme.colors.white};\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 60px;\n  border-bottom: 1px solid ${p => p.theme.colors.border.main};\n  z-index: 1;\n`;\n\nconst InputContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0 ${p => p.theme.spacing.sm};\n  color: ${p => p.theme.colors.text.secondary};\n  font-size: ${p => p.theme.font.size.xs};\n`;\n\nconst To = styled.div`\n  margin-top: 1px;\n`;\n\nconst User = styled(Link)`\n  margin: 0 ${p => p.theme.spacing.xxs};\n  padding: ${p => p.theme.spacing.xxs} ${p => p.theme.spacing.xxs};\n  border-radius: ${p => p.theme.radius.md};\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  text-decoration: none;\n`;\n\nconst Info = styled.div`\n  padding-left: ${p => p.theme.spacing.xs};\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst FullName = styled.div`\n  font-size: ${p => p.theme.font.size.sm};\n  color: ${p => p.theme.colors.text.primary};\n  font-weight: ${p => p.theme.font.weight.bold};\n`;\n\nconst Online = styled.div`\n  display: inline-block;\n  width: 8px;\n  height: 8px;\n  background-color: ${p => p.theme.colors.success};\n  margin-left: ${p => p.theme.spacing.xs};\n  border-radius: 50%;\n`;\n\n/**\n * Heading component for messages chat\n */\nconst MessagesChatHeading = ({ location, match, chatUser }) => {\n  const [{ auth }] = useStore();\n\n  const { data, loading } = useSubscription(IS_USER_ONLINE_SUBSCRIPTION, {\n    variables: {\n      authUserId: auth.user.id,\n      userId: chatUser ? chatUser.id : null,\n    },\n    skip: !chatUser,\n  });\n\n  // Update user's isOnline field in real time\n  if (!loading && data && chatUser) {\n    chatUser.isOnline = data.isUserOnline.isOnline;\n  }\n\n  if (match.params.userId === Routes.NEW_ID_VALUE || !chatUser) {\n    return (\n      <Root>\n        <InputContainer>\n          <To>To:</To>\n          <Search\n            location={location}\n            backgroundColor=\"white\"\n            hideIcon\n            forMessage\n            placeholder=\"Type the name of a person\"\n            autoFocus\n          />\n        </InputContainer>\n      </Root>\n    );\n  }\n\n  if (chatUser) {\n    return (\n      <Root>\n        <User\n          to={generatePath(Routes.USER_PROFILE, {\n            username: chatUser.username,\n          })}\n        >\n          <Avatar image={chatUser.image} size={40} />\n\n          <Info>\n            <FullName>{chatUser.fullName}</FullName>\n\n            {chatUser.isOnline && <Online />}\n          </Info>\n        </User>\n      </Root>\n    );\n  }\n\n  return null;\n};\n\nMessagesChatHeading.propTypes = {\n  match: PropTypes.object.isRequired,\n  chatUser: PropTypes.object,\n};\n\nexport default withRouter(MessagesChatHeading);\n","import React, { useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useQuery, useApolloClient } from '@apollo/react-hooks';\n\nimport { LoadingDots } from 'components/Loading';\nimport MessagesChatConversation from './MessagesChatConversation';\nimport MessagesChatHeading from './MessagesChatHeading';\n\nimport {\n  GET_MESSAGES,\n  GET_MESSAGES_SUBSCRIPTION,\n  UPDATE_MESSAGE_SEEN,\n} from 'graphql/messages';\nimport { GET_USER, GET_CONVERSATIONS, GET_AUTH_USER } from 'graphql/user';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\n/**\n * Messages chat wrapper\n */\nconst MessagesChat = ({ match, authUser }) => {\n  const { userId } = match.params;\n\n  const client = useApolloClient();\n\n  const { data, loading } = useQuery(GET_USER, {\n    variables: { id: userId },\n    skip: userId === Routes.NEW_ID_VALUE,\n  });\n\n  const {\n    subscribeToMore,\n    data: messages,\n    loading: messagesLoading,\n  } = useQuery(GET_MESSAGES, {\n    variables: { authUserId: authUser.id, userId },\n    skip: userId === Routes.NEW_ID_VALUE,\n    fetchPolicy: 'network-only',\n  });\n\n  const updateMessageSeen = useCallback(async () => {\n    try {\n      await client.mutate({\n        mutation: UPDATE_MESSAGE_SEEN,\n        variables: {\n          input: {\n            receiver: authUser.id,\n            sender: userId,\n          },\n        },\n        refetchQueries: () => [\n          {\n            query: GET_CONVERSATIONS,\n            variables: { authUserId: authUser.id },\n          },\n          { query: GET_AUTH_USER },\n        ],\n      });\n    } catch (err) {}\n  }, [authUser.id, client, userId]);\n\n  useEffect(() => {\n    const unsubscribe = subscribeToMore({\n      document: GET_MESSAGES_SUBSCRIPTION,\n      variables: { authUserId: authUser.id, userId },\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n\n        updateMessageSeen();\n\n        const newMessage = subscriptionData.data.messageCreated;\n        const mergedMessages = [...prev.getMessages, newMessage];\n\n        return { getMessages: mergedMessages };\n      },\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [authUser.id, userId, subscribeToMore, updateMessageSeen]);\n\n  useEffect(() => {\n    if (userId !== Routes.NEW_ID_VALUE) {\n      updateMessageSeen();\n    }\n  }, [userId, updateMessageSeen]);\n\n  if (loading || messagesLoading) {\n    return (\n      <Root>\n        <LoadingDots />\n      </Root>\n    );\n  }\n\n  let chatUser = null;\n  if (data && data.getUser) {\n    chatUser = data.getUser;\n  }\n\n  return (\n    <Root>\n      <MessagesChatHeading match={match} chatUser={chatUser} />\n\n      <MessagesChatConversation\n        authUser={authUser}\n        messages={messages ? messages.getMessages : []}\n        chatUser={chatUser}\n        data={messages}\n        match={match}\n      />\n    </Root>\n  );\n};\n\nMessagesChat.propTypes = {\n  match: PropTypes.object.isRequired,\n  authUser: PropTypes.object.isRequired,\n};\n\nexport default MessagesChat;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { useStore } from 'store';\n\nimport { HEADER_HEIGHT } from 'constants/Layout';\n\nimport MessagesUsers from './MessagesUsers';\nimport MessagesChat from './MessagesChat';\n\nconst Root = styled.div`\n  background-color: ${p => p.theme.colors.white};\n  position: relative;\n  margin-top: -${HEADER_HEIGHT}px;\n  padding-top: ${HEADER_HEIGHT}px;\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    margin-left: ${p => p.theme.spacing.lg};\n    border-left: 1px solid ${p => p.theme.colors.border.main};\n    border-right: 1px solid ${p => p.theme.colors.border.main};\n  }\n`;\n\n/**\n * Messages page\n */\nconst Messages = ({ match }) => {\n  const [{ auth }] = useStore();\n\n  return (\n    <Root>\n      <MessagesUsers authUser={auth.user} match={match} />\n\n      <MessagesChat match={match} authUser={auth.user} />\n    </Root>\n  );\n};\n\nMessages.propTypes = {\n  match: PropTypes.object.isRequired,\n};\n\nexport default Messages;\n","import React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Switch, Route } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport Header from 'components/App/Header';\nimport NotFound from 'components/NotFound';\nimport SideBar from './SideBar';\nimport UserSuggestions from './UserSuggestions';\n\nimport Home from 'pages/Home';\nimport Profile from 'pages/Profile';\nimport Explore from 'pages/Explore';\nimport People from 'pages/People';\nimport Notifications from 'pages/Notifications';\nimport Post from 'pages/Post';\nimport Messages from 'pages/Messages';\n\nimport { useWindowSize } from 'hooks/useWindowSize';\nimport { useClickOutside } from 'hooks/useClickOutside';\n\nimport * as Routes from 'routes';\n\nimport theme from 'theme';\n\nimport { useStore } from 'store';\nimport { SET_AUTH_USER } from 'store/auth';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 0 auto;\n  width: 100%;\n  position: relative;\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    width: ${p => p.theme.screen.md};\n  }\n\n  @media (min-width: ${p => parseInt(p.theme.screen.lg, 10) + 20 + 'px'}) {\n    width: ${p => p.theme.screen.lg};\n  }\n`;\n\n/**\n * Main layout of the app, when user is authenticated\n */\nconst AppLayout = ({ location, authUser }) => {\n  const [{ auth }, dispatch] = useStore();\n\n  const windowSize = useWindowSize();\n  const isDesktop = windowSize.width >= parseInt(theme.screen.md, 10);\n  const [isSideBarOpen, setIsSidebarOpen] = useState(isDesktop);\n\n  const sideBarRef = useRef('');\n\n  useEffect(() => {\n    dispatch({ type: SET_AUTH_USER, payload: authUser });\n  }, [dispatch, authUser]);\n\n  useClickOutside(sideBarRef, () => {\n    if (!isDesktop && isSideBarOpen) {\n      setIsSidebarOpen(false);\n    }\n  });\n\n  useEffect(() => {\n    setIsSidebarOpen(isDesktop);\n  }, [isDesktop]);\n\n  useEffect(() => {\n    return () => {\n      if (!isDesktop) {\n        setIsSidebarOpen(false);\n      }\n    };\n  }, [location.pathname, isDesktop]);\n\n  if (!auth.user) return null;\n\n  return (\n    <>\n      <Header toggleSideBar={() => setIsSidebarOpen(!isSideBarOpen)} />\n\n      <Root>\n        <SideBar isOpen={isSideBarOpen} sideBarRef={sideBarRef} />\n\n        <Switch>\n          <Route exact path={Routes.HOME} component={Home} />\n\n          <Route exact path={Routes.EXPLORE} component={Explore} />\n\n          <Route exact path={Routes.PEOPLE} component={People} />\n\n          <Route exact path={Routes.NOTIFICATIONS} component={Notifications} />\n\n          <Route exact path={Routes.MESSAGES} component={Messages} />\n\n          <Route exact path={Routes.USER_PROFILE} component={Profile} />\n\n          <Route exact path={Routes.POST} component={Post} />\n\n          <Route component={NotFound} />\n        </Switch>\n\n        <UserSuggestions pathname={location.pathname} />\n      </Root>\n    </>\n  );\n};\n\nAppLayout.propTypes = {\n  location: PropTypes.object.isRequired,\n  authUser: PropTypes.object.isRequired,\n};\n\nexport default withRouter(AppLayout);\n","import { useState, useEffect, useCallback } from 'react';\n\n/**\n * React hook for detecting window resizing\n */\nexport const useWindowSize = () => {\n  const isClient = typeof window === 'object';\n\n  const getSize = useCallback(\n    () => {\n      return {\n        width: isClient ? window.innerWidth : undefined,\n        height: isClient ? window.innerHeight : undefined,\n      };\n    },\n    [isClient]\n  );\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(\n    () => {\n      if (!isClient) {\n        return false;\n      }\n\n      function handleResize() {\n        setWindowSize(getSize());\n      }\n\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    },\n    [getSize, isClient]\n  );\n\n  return windowSize;\n};\n","import { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n/**\n * Scrolls to top on route change\n */\nconst ScrollToTop = ({ children, location: { pathname } }) => {\n  useEffect(\n    () => {\n      window.scrollTo(0, 0);\n    },\n    [pathname]\n  );\n\n  return children || null;\n};\n\nexport default withRouter(ScrollToTop);\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { GlobalStyle } from './GlobalStyles';\n\nimport { GET_AUTH_USER } from 'graphql/user';\nimport { GET_NEW_CONVERSATIONS_SUBSCRIPTION } from 'graphql/messages';\nimport { NOTIFICATION_CREATED_OR_DELETED } from 'graphql/notification';\n\nimport Message from 'components/Message';\nimport { Loading } from 'components/Loading';\nimport AuthLayout from 'pages/Auth/AuthLayout';\nimport AppLayout from './AppLayout';\nimport ScrollToTop from './ScrollToTop';\n\nimport { useStore } from 'store';\n\n/**\n * Root component of the app\n */\nconst App = () => {\n  const [{ message }] = useStore();\n\n  const { loading, subscribeToMore, data, refetch } = useQuery(GET_AUTH_USER);\n\n  useEffect(() => {\n    const unsubscribe = subscribeToMore({\n      document: NOTIFICATION_CREATED_OR_DELETED,\n      updateQuery: async (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n\n        const oldNotifications = prev.getAuthUser.newNotifications;\n        const {\n          operation,\n          notification,\n        } = subscriptionData.data.notificationCreatedOrDeleted;\n\n        let newNotifications;\n\n        if (operation === 'CREATE') {\n          // Don't show message notification in Header if user already is on notifications page\n          if (window.location.href.split('/')[3] === 'notifications') {\n            return prev;\n          }\n\n          // Add new notification\n          newNotifications = [notification, ...oldNotifications];\n        } else {\n          // Remove from notifications\n          const notifications = oldNotifications;\n          const index = notifications.findIndex(n => n.id === notification.id);\n          if (index > -1) {\n            notifications.splice(index, 1);\n          }\n\n          newNotifications = notifications;\n        }\n\n        // Attach new notifications to authUser\n        const authUser = prev.getAuthUser;\n        authUser.newNotifications = newNotifications;\n\n        return { getAuthUser: authUser };\n      },\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [subscribeToMore]);\n\n  useEffect(() => {\n    const unsubscribe = subscribeToMore({\n      document: GET_NEW_CONVERSATIONS_SUBSCRIPTION,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n\n        const oldConversations = prev.getAuthUser.newConversations;\n        const { newConversation } = subscriptionData.data;\n\n        // Don't show message notification in Header if user already is on messages page\n        if (window.location.href.split('/')[3] === 'messages') {\n          return prev;\n        }\n\n        // If authUser already has unseen message from that user,\n        // remove old message, so we can show the new one\n        const index = oldConversations.findIndex(\n          u => u.id === newConversation.id\n        );\n        if (index > -1) {\n          oldConversations.splice(index, 1);\n        }\n\n        // Merge conversations\n        const mergeConversations = [newConversation, ...oldConversations];\n\n        // Attach new conversation to authUser\n        const authUser = prev.getAuthUser;\n        authUser.newConversations = mergeConversations;\n\n        return { getAuthUser: authUser };\n      },\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [subscribeToMore]);\n\n  if (loading) return <Loading top=\"xl\" />;\n\n  return (\n    <Router>\n      <GlobalStyle />\n\n      <ScrollToTop>\n        <Switch>\n          {data.getAuthUser ? (\n            <Route\n              exact\n              render={() => <AppLayout authUser={data.getAuthUser} />}\n            />\n          ) : (\n            <Route exact render={() => <AuthLayout refetch={refetch} />} />\n          )}\n        </Switch>\n      </ScrollToTop>\n\n      {message.content.text && (\n        <Message\n          type={message.content.type}\n          autoClose={message.content.autoClose}\n        >\n          {message.content.text}\n        </Message>\n      )}\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { ApolloProvider } from 'react-apollo';\nimport { ApolloProvider as ApolloHooksProvider } from '@apollo/react-hooks';\nimport { ThemeProvider } from 'styled-components';\nimport { createApolloClient } from 'utils/apollo-client';\nimport { StoreProvider } from 'store';\n\nimport 'normalize.css';\nimport theme from 'theme';\n\nimport App from 'components/App/App';\n\n// GraphQL HTTP URL\nconst API_URL = process.env.REACT_APP_API_URL;\n\n// GraphQL WebSocket (subscriptions) URL.\n// If its url is not set in .env then it has same url, host and pathname\nconst WEBSOCKET_API_URL = process.env.REACT_APP_WEBSOCKET_API_URL;\nconst websocketApiUrl = WEBSOCKET_API_URL\n  ? WEBSOCKET_API_URL\n  : API_URL.replace('https://', 'ws://').replace('http://', 'ws://');\n\n// Create a Apollo client\nconst apolloClient = createApolloClient(API_URL, websocketApiUrl);\n\nrender(\n  <ApolloProvider client={apolloClient}>\n    <ApolloHooksProvider client={apolloClient}>\n      <ThemeProvider theme={theme}>\n        <StoreProvider>\n          <App />\n        </StoreProvider>\n      </ThemeProvider>\n    </ApolloHooksProvider>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}